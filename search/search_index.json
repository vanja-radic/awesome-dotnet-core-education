{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83c\udfa8 Awesome .Net Core Education \u00b6 Curated list of awesome articles and resources for learning and practicing about .Net Core and its related technologies, this repository will update continuously. Keep Learning Keep Sharing ! \ud83d\ude80 This awesome list is available in this link: https://mehdihadeli.github.io/awesome-dotnet-core-education Contributions are always welcome! Please take a look at the contribution guidelines pages first. Thanks to all contributors , you\u2019re awesome and wouldn\u2019t be possible without you! The goal is to build a categorized community-driven collection of very well-known resources. Support \u2b50 \u00b6 If you like my work, feel free to: \u2b50 this repository. And we will be happy together :) about Awesome .Net Core Education Thanks a bunch for supporting me!","title":"\ud83c\udfa8 Awesome .Net Core Education [![Awesome](https://awesome.re/badge-flat2.svg)](https://awesome.re)"},{"location":"#awesome-net-core-education","text":"Curated list of awesome articles and resources for learning and practicing about .Net Core and its related technologies, this repository will update continuously. Keep Learning Keep Sharing ! \ud83d\ude80 This awesome list is available in this link: https://mehdihadeli.github.io/awesome-dotnet-core-education Contributions are always welcome! Please take a look at the contribution guidelines pages first. Thanks to all contributors , you\u2019re awesome and wouldn\u2019t be possible without you! The goal is to build a categorized community-driven collection of very well-known resources.","title":"\ud83c\udfa8 Awesome .Net Core Education"},{"location":"#support","text":"If you like my work, feel free to: \u2b50 this repository. And we will be happy together :) about Awesome .Net Core Education Thanks a bunch for supporting me!","title":"Support \u2b50"},{"location":"action-filters/","text":"Action Filters \u00b6 \ud83d\udcdd Articles \u00b6 ASP.NET Core in Action - Filters Exploring Middleware as MVC Filters in ASP.NET Core 1.1","title":"Action Filters"},{"location":"action-filters/#action-filters","text":"","title":"Action Filters"},{"location":"action-filters/#articles","text":"ASP.NET Core in Action - Filters Exploring Middleware as MVC Filters in ASP.NET Core 1.1","title":"\ud83d\udcdd Articles"},{"location":"api-documentation/","text":"API Documentation \u00b6 Articles \u00b6 Understanding Swagger integration in .NET Core How to generate code from OpenAPI definition with Visual Studio 2019 ASP.NET Core web API documentation with Swagger / OpenAPI Getting Started with Swashbuckle Develop ASP.NET Core apps using OpenAPI tools Get started with NSwag and ASP.NET Core Use web API conventions Generating Swagger example responses with Swashbuckle Configuring and Using Swagger UI in ASP.NET Core Web API Setting up Swagger to support versioned API endpoints in ASP.NET Core Dealing with default API versions in Swagger UI Representing available string values for parameters as list in Swagger ASP.NET Core Basic authentication with Swagger and ASP.NET Core DTO comments from external assembly in Swagger documentation in ASP.NET Core Ignoring properties from controller action model in Swagger using JsonIgnore Displaying multiple select input for Enum in Swagger WebApi UI Videos \u00b6 Extended Swagger documentation | ASP.NET Core 5 REST API Tutorial 22","title":"API Documentation"},{"location":"api-documentation/#api-documentation","text":"","title":"API Documentation"},{"location":"api-documentation/#articles","text":"Understanding Swagger integration in .NET Core How to generate code from OpenAPI definition with Visual Studio 2019 ASP.NET Core web API documentation with Swagger / OpenAPI Getting Started with Swashbuckle Develop ASP.NET Core apps using OpenAPI tools Get started with NSwag and ASP.NET Core Use web API conventions Generating Swagger example responses with Swashbuckle Configuring and Using Swagger UI in ASP.NET Core Web API Setting up Swagger to support versioned API endpoints in ASP.NET Core Dealing with default API versions in Swagger UI Representing available string values for parameters as list in Swagger ASP.NET Core Basic authentication with Swagger and ASP.NET Core DTO comments from external assembly in Swagger documentation in ASP.NET Core Ignoring properties from controller action model in Swagger using JsonIgnore Displaying multiple select input for Enum in Swagger WebApi UI","title":"Articles"},{"location":"api-documentation/#videos","text":"Extended Swagger documentation | ASP.NET Core 5 REST API Tutorial 22","title":"Videos"},{"location":"api-versioning/","text":"API Versioning \u00b6 \ud83d\udcdd Articles \u00b6 Web API Versioning in ASP.NET Core Detailed Guide ASP.NET Core RESTful Web API versioning made easy - Sccot Honselman How To Support Multiple Versions of ASP.NET Core Web API Advanced versioning in ASP.NET Core Web API ASP.NET Core Web API versioning Generating Swagger example requests with Swashbuckle Add an authorization header to your swagger-ui with Swashbuckle (revisited) Your guide to REST API versioning in ASP.NET Core \ud83d\udcf9 Videos \u00b6 Elegant API Versioning in ASP.NET Core (Web API) Implementing versioning | ASP.NET Core 5 REST API Tutorial 2 Library \u00b6 mattfrear/Swashbuckle.AspNetCore.Filters - A bunch of useful filters for Swashbuckle.AspNetCore microsoft/aspnet-api-versioning - Provides a set of libraries which add service API versioning to ASP.NET Web API, OData with ASP.NET Web API, and ASP.NET Core. \u21a5 Back To Top","title":"API Versioning"},{"location":"api-versioning/#api-versioning","text":"","title":"API Versioning"},{"location":"api-versioning/#articles","text":"Web API Versioning in ASP.NET Core Detailed Guide ASP.NET Core RESTful Web API versioning made easy - Sccot Honselman How To Support Multiple Versions of ASP.NET Core Web API Advanced versioning in ASP.NET Core Web API ASP.NET Core Web API versioning Generating Swagger example requests with Swashbuckle Add an authorization header to your swagger-ui with Swashbuckle (revisited) Your guide to REST API versioning in ASP.NET Core","title":"\ud83d\udcdd Articles"},{"location":"api-versioning/#videos","text":"Elegant API Versioning in ASP.NET Core (Web API) Implementing versioning | ASP.NET Core 5 REST API Tutorial 2","title":"\ud83d\udcf9 Videos"},{"location":"api-versioning/#library","text":"mattfrear/Swashbuckle.AspNetCore.Filters - A bunch of useful filters for Swashbuckle.AspNetCore microsoft/aspnet-api-versioning - Provides a set of libraries which add service API versioning to ASP.NET Web API, OData with ASP.NET Web API, and ASP.NET Core. \u21a5 Back To Top","title":"Library"},{"location":"background-tasks/","text":"Background Tasks \u00b6 \ud83d\udcdd Articles \u00b6 Background Tasks in .NET - CodeOpinion Mediator Pattern with Hangfire - CodeOpinion Processing commands with Hangfire and MediatR - Kamil Grzybek Use Quartz.Net for background and recurring jobs within an ASP.NET Core 3.0 applicati How to run Background Tasks in ASP.NET Using Quartz.NET with ASP.NET Core and worker services Creating a Quartz.NET hosted service with ASP.NET Core Using scoped services inside a Quartz.NET hosted service with ASP.NET Core Using Hangfire and MediatR as a Message Dispatcher A poor person\u2019s scheduler using .NET Background service Hangfire with ASP.NET Core","title":"Background Tasks"},{"location":"background-tasks/#background-tasks","text":"","title":"Background Tasks"},{"location":"background-tasks/#articles","text":"Background Tasks in .NET - CodeOpinion Mediator Pattern with Hangfire - CodeOpinion Processing commands with Hangfire and MediatR - Kamil Grzybek Use Quartz.Net for background and recurring jobs within an ASP.NET Core 3.0 applicati How to run Background Tasks in ASP.NET Using Quartz.NET with ASP.NET Core and worker services Creating a Quartz.NET hosted service with ASP.NET Core Using scoped services inside a Quartz.NET hosted service with ASP.NET Core Using Hangfire and MediatR as a Message Dispatcher A poor person\u2019s scheduler using .NET Background service Hangfire with ASP.NET Core","title":"\ud83d\udcdd Articles"},{"location":"benchmarking/","text":"Benchmarking \u00b6 Articles \u00b6 Profiling .Net Code with BenchmarkDotNet \ud83d\udce6 Libraries \u00b6 dotnet/BenchmarkDotNet - Powerful .NET library for benchmarking dotnet/crank - Benchmarking infrastructure for applications \ud83d\udcf9 Videos \u00b6 Benchmarking C# code using BenchmarkDotNet Analyzing performance with BenchmarkDotNet - ASP.NET Core: From 0 to overkill \u21a5 Back To Top","title":"Benchmarking"},{"location":"benchmarking/#benchmarking","text":"","title":"Benchmarking"},{"location":"benchmarking/#articles","text":"Profiling .Net Code with BenchmarkDotNet","title":"Articles"},{"location":"benchmarking/#libraries","text":"dotnet/BenchmarkDotNet - Powerful .NET library for benchmarking dotnet/crank - Benchmarking infrastructure for applications","title":"\ud83d\udce6 Libraries"},{"location":"benchmarking/#videos","text":"Benchmarking C# code using BenchmarkDotNet Analyzing performance with BenchmarkDotNet - ASP.NET Core: From 0 to overkill \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"blazor/","text":"Blazor \u00b6 Videos \u00b6 Blazor API Client using REST & GraphQL APIs - Full Course Blazor Course - Use ASP.NET Core to Build Full-Stack C# Web Apps (8 Hours Full Course) Let\u2019s Learn .NET - Blazor On .NET Live - Building Reactive UIs with Blazor Samples \u00b6 thbst16/BlazorCrud - Demo application built with the Blazor client-side hosting model (WebAssembly) and .NET Core REST APIs secured by a JWT service. lucent-sea/Remotely - A remote control and remote scripting solution, built with .NET 5, Blazor, SignalR Core, and WebRTC.","title":"Blazor"},{"location":"blazor/#blazor","text":"","title":"Blazor"},{"location":"blazor/#videos","text":"Blazor API Client using REST & GraphQL APIs - Full Course Blazor Course - Use ASP.NET Core to Build Full-Stack C# Web Apps (8 Hours Full Course) Let\u2019s Learn .NET - Blazor On .NET Live - Building Reactive UIs with Blazor","title":"Videos"},{"location":"blazor/#samples","text":"thbst16/BlazorCrud - Demo application built with the Blazor client-side hosting model (WebAssembly) and .NET Core REST APIs secured by a JWT service. lucent-sea/Remotely - A remote control and remote scripting solution, built with .NET 5, Blazor, SignalR Core, and WebRTC.","title":"Samples"},{"location":"caching/","text":"Caching \u00b6 Articles \u00b6 Response caching in ASP.NET Core Cache in-memory in ASP.NET Core Distributed caching in ASP.NET Core Simple In-Memory Caching in .Net Core with IMemoryCache 4 Microservices Caching Patterns at Wix REDIS VS MEMCACHED: WHICH ONE TO CHOOSE? Redis vs. Memcached: In-Memory Data Storage Systems Difference Between Redis vs Memcached Response caching in ASP.NET Core Caching Best Practices How to Improve ASP.NET App Performance in Web Farm with Caching Redis as Backplane to scale your Blazor applications \u201cRed(e)isign\u201d Publish/Subscribe with Redis Hybrid Caching ASP.NET Core Memory Cache - Is the GetOrCreate method thread-safe? Cache Implementations in C# .NET Scalable and Performant ASP.NET Core Web APIs: Server Caching Scalable and Performant ASP.NET Core Web APIs: Client Caching HOW TO USE IN-MEMORY CACHING FOR .NET CORE WEB APIS DISTRIBUTED CACHING AND DISTRIBUTED MEMORY CACHE IN .NET CORE USE DISTRIBUTED SQL SERVER CACHE WITH .NET CORE WEB APIS Redis Caching in ASP.NET Core \u2013 Distributed Caching Detailed In-Memory Caching in ASP.NET Core \u2013 Detailed Guide Response Caching with MediatR in ASP.NET Core \u2013 Powerful Pipeline Behavior How to publish and subscribe with redis by. Net core Redis for .NET Developers \u2013 Redis Pub Sub Intro to Redis for .NET Developers \u2013 Installing Redis on Windows Redis for .NET Developer \u2013 Connecting with C# Redis for .NET Developer \u2013 String Datatype Redis for .NET Developer \u2013 Redis String Datatype part 2 Redis for .NET Developer \u2013 Redis Hash Datatype Redis for .NET Developers \u2013 Redis running in Docker Redis for .NET Developers \u2013 Redis running in Azure Redis for .NET Developers \u2013 Redis Password Redis for .NET Developers \u2013 Redis List Datatype Redis for .NET Developers \u2013 Redis Sets Datatype Redis for .NET Developers \u2013 Redis Sorted Sets Datatype Redis for .NET Developers \u2013 Redis HyperLogLog Datatype Redis for .NET Developers \u2013 Redis Pub Sub Redis for .NET Developers \u2013 Redis Pipeline Batching Redis for .NET Developer \u2013 Redis Transactions Redis for .NET Developers \u2013 Redis GeoSpatial Redis for .NET Developers \u2013 Redis Sentinel Redis for .NET Developers | Redis with AspNetCore WebAPI Pub/Sub Publish Subscribe How to use Redis and Lua Scripts in a C# ASP.NET Core Microservice Architecture Caching in ASP.NET Core with LazyCache Use Cases \u00b6 Messaging Real-Time Inventory Management Caching Leaderboards Videos \u00b6 Software Architecture Introduction (part 3): Cache explained Response caching using Redis | ASP.NET Core 5 REST API Tutorial 25 How to effectively use Redis Cache in .NET Core (Framework, Standard) Samples \u00b6 taswar/RedisForNetDevelopers - Source code for blog post on Redis for .NET Developer Series Library \u00b6 StackExchange/StackExchange.Redis - General purpose redis client ServiceStack/ServiceStack.Redis - .NET\u2019s leading C# Redis Client alastairtree/LazyCache - An easy to use thread safe in-memory caching service with a simple developer friendly API for c# Foundatio.Redis - Foundatio Redis MichaCo/CacheManager - CacheManager is an open source caching abstraction layer for .NET written in C#. It supports various cache providers and implements many advanced features. dotnetcore/EasyCaching - EasyCaching is an open source caching library that contains basic usages and some advanced usages of caching which can help us to handle caching more easier! mjebrahimi/EasyCompressor - \u26a1 A compression library that implements many compression algorithms such as LZ4, Zstd, LZMA, Snappy, Brotli, GZip, and Deflate. It helps you to improve performance by reducing Memory Usage and Network Traffic for caching. VahidN/EFCoreSecondLevelCacheInterceptor - EF Core Second Level Cache Interceptor marcoCasamento/Hangfire.Redis.StackExchange - HangFire Redis storage based on original (and now unsupported) Hangfire.Redis but using lovely StackExchange.Redis client","title":"Caching"},{"location":"caching/#caching","text":"","title":"Caching"},{"location":"caching/#articles","text":"Response caching in ASP.NET Core Cache in-memory in ASP.NET Core Distributed caching in ASP.NET Core Simple In-Memory Caching in .Net Core with IMemoryCache 4 Microservices Caching Patterns at Wix REDIS VS MEMCACHED: WHICH ONE TO CHOOSE? Redis vs. Memcached: In-Memory Data Storage Systems Difference Between Redis vs Memcached Response caching in ASP.NET Core Caching Best Practices How to Improve ASP.NET App Performance in Web Farm with Caching Redis as Backplane to scale your Blazor applications \u201cRed(e)isign\u201d Publish/Subscribe with Redis Hybrid Caching ASP.NET Core Memory Cache - Is the GetOrCreate method thread-safe? Cache Implementations in C# .NET Scalable and Performant ASP.NET Core Web APIs: Server Caching Scalable and Performant ASP.NET Core Web APIs: Client Caching HOW TO USE IN-MEMORY CACHING FOR .NET CORE WEB APIS DISTRIBUTED CACHING AND DISTRIBUTED MEMORY CACHE IN .NET CORE USE DISTRIBUTED SQL SERVER CACHE WITH .NET CORE WEB APIS Redis Caching in ASP.NET Core \u2013 Distributed Caching Detailed In-Memory Caching in ASP.NET Core \u2013 Detailed Guide Response Caching with MediatR in ASP.NET Core \u2013 Powerful Pipeline Behavior How to publish and subscribe with redis by. Net core Redis for .NET Developers \u2013 Redis Pub Sub Intro to Redis for .NET Developers \u2013 Installing Redis on Windows Redis for .NET Developer \u2013 Connecting with C# Redis for .NET Developer \u2013 String Datatype Redis for .NET Developer \u2013 Redis String Datatype part 2 Redis for .NET Developer \u2013 Redis Hash Datatype Redis for .NET Developers \u2013 Redis running in Docker Redis for .NET Developers \u2013 Redis running in Azure Redis for .NET Developers \u2013 Redis Password Redis for .NET Developers \u2013 Redis List Datatype Redis for .NET Developers \u2013 Redis Sets Datatype Redis for .NET Developers \u2013 Redis Sorted Sets Datatype Redis for .NET Developers \u2013 Redis HyperLogLog Datatype Redis for .NET Developers \u2013 Redis Pub Sub Redis for .NET Developers \u2013 Redis Pipeline Batching Redis for .NET Developer \u2013 Redis Transactions Redis for .NET Developers \u2013 Redis GeoSpatial Redis for .NET Developers \u2013 Redis Sentinel Redis for .NET Developers | Redis with AspNetCore WebAPI Pub/Sub Publish Subscribe How to use Redis and Lua Scripts in a C# ASP.NET Core Microservice Architecture Caching in ASP.NET Core with LazyCache","title":"Articles"},{"location":"caching/#use-cases","text":"Messaging Real-Time Inventory Management Caching Leaderboards","title":"Use Cases"},{"location":"caching/#videos","text":"Software Architecture Introduction (part 3): Cache explained Response caching using Redis | ASP.NET Core 5 REST API Tutorial 25 How to effectively use Redis Cache in .NET Core (Framework, Standard)","title":"Videos"},{"location":"caching/#samples","text":"taswar/RedisForNetDevelopers - Source code for blog post on Redis for .NET Developer Series","title":"Samples"},{"location":"caching/#library","text":"StackExchange/StackExchange.Redis - General purpose redis client ServiceStack/ServiceStack.Redis - .NET\u2019s leading C# Redis Client alastairtree/LazyCache - An easy to use thread safe in-memory caching service with a simple developer friendly API for c# Foundatio.Redis - Foundatio Redis MichaCo/CacheManager - CacheManager is an open source caching abstraction layer for .NET written in C#. It supports various cache providers and implements many advanced features. dotnetcore/EasyCaching - EasyCaching is an open source caching library that contains basic usages and some advanced usages of caching which can help us to handle caching more easier! mjebrahimi/EasyCompressor - \u26a1 A compression library that implements many compression algorithms such as LZ4, Zstd, LZMA, Snappy, Brotli, GZip, and Deflate. It helps you to improve performance by reducing Memory Usage and Network Traffic for caching. VahidN/EFCoreSecondLevelCacheInterceptor - EF Core Second Level Cache Interceptor marcoCasamento/Hangfire.Redis.StackExchange - HangFire Redis storage based on original (and now unsupported) Hangfire.Redis but using lovely StackExchange.Redis client","title":"Library"},{"location":"code-coverage-analysis/","text":"Code Coverage & Analysis \u00b6 Articles \u00b6 How to view code coverage with Coverlet and Visual Studio 2019 Cobertura, YAML, and Code Coverage Protector: how to view Code Coverage report on Azure DevOps .NET Core Code Coverage as a Global Tool with coverlet Automatic Unit Testing in .NET Core plus Code Coverage in Visual Studio Code Use Continuous Testing Unit test coverage and continuous testing. Now in Rider! Running SonarQube for a .NET Core project in Azure DevOps YAML multi-stage pipelines Code coverage reports for ASP.NET Core Code Analysis with SonarQube + Docker + .NET Core Continuous Code Quality using SonarLint in Visual Studio 2017-2019 Continuous Code Quality using NDepend in Visual Studio SonarQube tutorial \u2013 Part I: How to Get Started? SonarQube Tutorial \u2013 Part II: How to Use SonarScanner? Quickstart: Analyzing .NET projects with SonarQube, MSBuild or Visual Studio Online, and third-party analyzers (StyleCop, ReSharper) SonarQube for continuous analysis of .NET projects How to run a SonarCloud scan during Docker builds for .NET Core Videos \u00b6 On .NET Live - .NET Core Code Coverage with Coverlet","title":"Code Coverage & Analysis"},{"location":"code-coverage-analysis/#code-coverage-analysis","text":"","title":"Code Coverage &amp; Analysis"},{"location":"code-coverage-analysis/#articles","text":"How to view code coverage with Coverlet and Visual Studio 2019 Cobertura, YAML, and Code Coverage Protector: how to view Code Coverage report on Azure DevOps .NET Core Code Coverage as a Global Tool with coverlet Automatic Unit Testing in .NET Core plus Code Coverage in Visual Studio Code Use Continuous Testing Unit test coverage and continuous testing. Now in Rider! Running SonarQube for a .NET Core project in Azure DevOps YAML multi-stage pipelines Code coverage reports for ASP.NET Core Code Analysis with SonarQube + Docker + .NET Core Continuous Code Quality using SonarLint in Visual Studio 2017-2019 Continuous Code Quality using NDepend in Visual Studio SonarQube tutorial \u2013 Part I: How to Get Started? SonarQube Tutorial \u2013 Part II: How to Use SonarScanner? Quickstart: Analyzing .NET projects with SonarQube, MSBuild or Visual Studio Online, and third-party analyzers (StyleCop, ReSharper) SonarQube for continuous analysis of .NET projects How to run a SonarCloud scan during Docker builds for .NET Core","title":"Articles"},{"location":"code-coverage-analysis/#videos","text":"On .NET Live - .NET Core Code Coverage with Coverlet","title":"Videos"},{"location":"commenting/","text":"Commenting \u00b6 Articles \u00b6 C# Comments: A Complete Guide, Including Examples C# Documentation: A Start to Finish Guide How to Document Code: 5 Ways to Help Maintenance Programmers Elements of Helpful Code Documentation A Field Guide to Code Comments 10 Best Practices for Code Commenting Clean code tips - comments and formatting Videos \u00b6 Are comments in code actually a bad practice?","title":"Commenting"},{"location":"commenting/#commenting","text":"","title":"Commenting"},{"location":"commenting/#articles","text":"C# Comments: A Complete Guide, Including Examples C# Documentation: A Start to Finish Guide How to Document Code: 5 Ways to Help Maintenance Programmers Elements of Helpful Code Documentation A Field Guide to Code Comments 10 Best Practices for Code Commenting Clean code tips - comments and formatting","title":"Articles"},{"location":"commenting/#videos","text":"Are comments in code actually a bad practice?","title":"Videos"},{"location":"configuration/","text":"Configuration \u00b6 \ud83d\udcdd Articles \u00b6 Configure ASP.NET Core MVC Configuration in ASP.NET Core Configuration providers in .NET Options pattern in ASP.NET Core ASP. NET Core - Customize Configuration Creating a custom ConfigurationProvider in ASP.NET Core to parse YAML Customizing ASP.\u200bNET Core Part 02: Configuration How to use configuration with C# 9 top-level programs The dangers and gotchas of using scoped services in IConfigureOptions Debugging configuration values in ASP.NET Core Viewing app configuration using Oakton\u2019s Describe command and Spectre.Console Viewing overwritten configuration values in ASP.NET Core Strongly Typed Configuration Settings in ASP.NET Core Easy Configuration Binding in ASP.NET Core - revisited Keeping Configuration Settings in Memory Using Memory Configuration Provider In .NET Applications Testing and Configuration in .NET Core Adding validation to strongly typed configuration objects in ASP.NET Core \ud83d\udce6 Libraries \u00b6 NetEscapades.Configuration \ud83d\udd16 Samples \u00b6 https://github.com/WolfgangOfner/MVC-Core-Configure \u21a5 Back To Top","title":"Configuration"},{"location":"configuration/#configuration","text":"","title":"Configuration"},{"location":"configuration/#articles","text":"Configure ASP.NET Core MVC Configuration in ASP.NET Core Configuration providers in .NET Options pattern in ASP.NET Core ASP. NET Core - Customize Configuration Creating a custom ConfigurationProvider in ASP.NET Core to parse YAML Customizing ASP.\u200bNET Core Part 02: Configuration How to use configuration with C# 9 top-level programs The dangers and gotchas of using scoped services in IConfigureOptions Debugging configuration values in ASP.NET Core Viewing app configuration using Oakton\u2019s Describe command and Spectre.Console Viewing overwritten configuration values in ASP.NET Core Strongly Typed Configuration Settings in ASP.NET Core Easy Configuration Binding in ASP.NET Core - revisited Keeping Configuration Settings in Memory Using Memory Configuration Provider In .NET Applications Testing and Configuration in .NET Core Adding validation to strongly typed configuration objects in ASP.NET Core","title":"\ud83d\udcdd Articles"},{"location":"configuration/#libraries","text":"NetEscapades.Configuration","title":"\ud83d\udce6 Libraries"},{"location":"configuration/#samples","text":"https://github.com/WolfgangOfner/MVC-Core-Configure \u21a5 Back To Top","title":"\ud83d\udd16 Samples"},{"location":"debugging/","text":"Debugging \u00b6 Articles \u00b6 Simplify debugging with DebuggerDisplay attribute dotNET","title":"Debugging"},{"location":"debugging/#debugging","text":"","title":"Debugging"},{"location":"debugging/#articles","text":"Simplify debugging with DebuggerDisplay attribute dotNET","title":"Articles"},{"location":"dependency-injection/","text":"Dependency Injection \u00b6 \ud83d\udcdd Articles \u00b6 .NET Core Dependency Injection: Everything You Ought To Know Dependency injection in ASP.NET Core Inversion of Control Containers and the Dependency Injection pattern Having Fun with Microsoft IoC Container for .NET Core ASP. NET Core - Dependency-injection Customizing ASP.\u200bNET Core Part 03: Dependency Injection ASP.NET CORE DEPENDENCY INJECTION \u2013 REGISTERING MULTIPLE IMPLEMENTATIONS OF AN INTERFACE ASP.NET CORE DEPENDENCY INJECTION \u2013 HOW TO REGISTER GENERIC TYPES ASP.NET CORE DEPENDENCY INJECTION \u2013 REGISTERING IMPLEMENTATIONS USING DELEGATES Choosing a ServiceLifetime ASP.NET Core and the Strategy Pattern 6 Ways To Implement The Strategy Pattern In C# (Basic To Advanced) Dependency Injection in ASP.NET Core 3.1 Understanding Disposables In .NET Dependency Injection \u2013 Part 2 Understanding Disposables In .NET Dependency Injection \u2013 Part 1 Should I be Checking Injected Dependencies for Null? Getting Dependencies by Name or Key using the .NET Core Container (Part 1) ASP.NET CORE DEPENDENCY INJECTION WHAT IS THE ISERVICECOLLECTION? - Steve Gordon Avoiding Startup service injection in ASP.NET Core 3 What are the costs and possible side effects of calling BuildServiceProvider() in ConfigureServices() Resolve and Initialize the Instances within ConfigServices of ASP.NET Core How to Resolve Instance Inside ConfigureServices in ASP.NET Core Access services inside ConfigureServices using IConfigureOptions in ASP.NET Core Using dependency injection while configuring services ASP.NET CORE DEPENDENCY INJECTION: WHAT IS THE ISERVICEPROVIDER AND HOW IS IT BUILT? - Steve Gordon How to register a service with multiple interfaces in ASP.NET Core DI A .NET Core ServiceProvider that allows adding of services after it was created The difference between GetService() and GetRequiredService() in ASP.NET Core Resolve Services In ASP.NET Core Startup Automatic factory with Microsoft.Extensions.DependencyInjection and Castle DynamicProxy Singleton vs Dependency Injection Don\u2019t Call Constructors Unless You Have No Choice, And You Always Have a Choice The dangers and gotchas of using scoped services in IConfigureOptions ASP.NET Core Dependency Injection Best Practices, Tips & Tricks Exploring ASP.NET Core Fundamentals - Understanding Singleton Transient and Scoped Service Lifetimes Using Scrutor to automatically register your services with the ASP.NET Core DI container Dependency Injection lifetimes in .NET - my epiphany SOLID Wash Tunnel - IoC Container SOLID Wash Tunnel - Dependency Injection Service Lifetimes in ASP.NET Core DI Explained Cannot Consume Scoped Service From Singleton \u2013 A Lesson In ASP.NET Core DI Scopes Two gotchas with scoped and singleton dependencies in ASP.NET Core Using scoped services inside singletons Resolving instances with ASP.NET Core DI from within ConfigureServices Resolving instances with ASP.NET Core DI in static classes Accessing ASP.NET Core DI Container From Static Factory Class ASP.NET Core Dependency Injection \u2013 Cannot consume scoped service Videos \u00b6 .NET Core Dependency Injection \u2013 The Booster Jab - Steve Collins - NDC London 2021 Dependency Injection Explained .NET Core Dependency Injection - The Booster Jab - with Steve Collins Libraries \u00b6 khellang/Scrutor - Assembly scanning and decoration extensions for Microsoft.Extensions.DependencyInjection AnthonyGiretti/calzolari-dependencyinjection-extensions - Extensions for ASP.NET Core dependency injection YairHalberstadt/stronginject - compile time dependency injection for .NET pakrym/jab - C# Source Generator based dependency injection container implementation. \u21a5 Back To Top","title":"Dependency Injection"},{"location":"dependency-injection/#dependency-injection","text":"","title":"Dependency Injection"},{"location":"dependency-injection/#articles","text":".NET Core Dependency Injection: Everything You Ought To Know Dependency injection in ASP.NET Core Inversion of Control Containers and the Dependency Injection pattern Having Fun with Microsoft IoC Container for .NET Core ASP. NET Core - Dependency-injection Customizing ASP.\u200bNET Core Part 03: Dependency Injection ASP.NET CORE DEPENDENCY INJECTION \u2013 REGISTERING MULTIPLE IMPLEMENTATIONS OF AN INTERFACE ASP.NET CORE DEPENDENCY INJECTION \u2013 HOW TO REGISTER GENERIC TYPES ASP.NET CORE DEPENDENCY INJECTION \u2013 REGISTERING IMPLEMENTATIONS USING DELEGATES Choosing a ServiceLifetime ASP.NET Core and the Strategy Pattern 6 Ways To Implement The Strategy Pattern In C# (Basic To Advanced) Dependency Injection in ASP.NET Core 3.1 Understanding Disposables In .NET Dependency Injection \u2013 Part 2 Understanding Disposables In .NET Dependency Injection \u2013 Part 1 Should I be Checking Injected Dependencies for Null? Getting Dependencies by Name or Key using the .NET Core Container (Part 1) ASP.NET CORE DEPENDENCY INJECTION WHAT IS THE ISERVICECOLLECTION? - Steve Gordon Avoiding Startup service injection in ASP.NET Core 3 What are the costs and possible side effects of calling BuildServiceProvider() in ConfigureServices() Resolve and Initialize the Instances within ConfigServices of ASP.NET Core How to Resolve Instance Inside ConfigureServices in ASP.NET Core Access services inside ConfigureServices using IConfigureOptions in ASP.NET Core Using dependency injection while configuring services ASP.NET CORE DEPENDENCY INJECTION: WHAT IS THE ISERVICEPROVIDER AND HOW IS IT BUILT? - Steve Gordon How to register a service with multiple interfaces in ASP.NET Core DI A .NET Core ServiceProvider that allows adding of services after it was created The difference between GetService() and GetRequiredService() in ASP.NET Core Resolve Services In ASP.NET Core Startup Automatic factory with Microsoft.Extensions.DependencyInjection and Castle DynamicProxy Singleton vs Dependency Injection Don\u2019t Call Constructors Unless You Have No Choice, And You Always Have a Choice The dangers and gotchas of using scoped services in IConfigureOptions ASP.NET Core Dependency Injection Best Practices, Tips & Tricks Exploring ASP.NET Core Fundamentals - Understanding Singleton Transient and Scoped Service Lifetimes Using Scrutor to automatically register your services with the ASP.NET Core DI container Dependency Injection lifetimes in .NET - my epiphany SOLID Wash Tunnel - IoC Container SOLID Wash Tunnel - Dependency Injection Service Lifetimes in ASP.NET Core DI Explained Cannot Consume Scoped Service From Singleton \u2013 A Lesson In ASP.NET Core DI Scopes Two gotchas with scoped and singleton dependencies in ASP.NET Core Using scoped services inside singletons Resolving instances with ASP.NET Core DI from within ConfigureServices Resolving instances with ASP.NET Core DI in static classes Accessing ASP.NET Core DI Container From Static Factory Class ASP.NET Core Dependency Injection \u2013 Cannot consume scoped service","title":"\ud83d\udcdd Articles"},{"location":"dependency-injection/#videos","text":".NET Core Dependency Injection \u2013 The Booster Jab - Steve Collins - NDC London 2021 Dependency Injection Explained .NET Core Dependency Injection - The Booster Jab - with Steve Collins","title":"Videos"},{"location":"dependency-injection/#libraries","text":"khellang/Scrutor - Assembly scanning and decoration extensions for Microsoft.Extensions.DependencyInjection AnthonyGiretti/calzolari-dependencyinjection-extensions - Extensions for ASP.NET Core dependency injection YairHalberstadt/stronginject - compile time dependency injection for .NET pakrym/jab - C# Source Generator based dependency injection container implementation. \u21a5 Back To Top","title":"Libraries"},{"location":"diagnostics/","text":"Diagnostics \u00b6 Articles \u00b6 DiagnosticSource User\u2019s Guide Activity User Guide Diagnostic Source in.Net Core Improve Activity API usability and OpenTelemetry integration Improve Activity API usability and OpenTelemetry integration (Part 2) What diagnostic tools are available in .NET Core? .NET distributed tracing concepts Adding distributed tracing instrumentation Collect a distributed trace Activity Class ActivityListener Class ActivitySource Class ActivityLink Struct EventListener Class EventSource Class Introducing diagnostics improvements in .NET Core 3.0 Diagnostics improvements in .NET 5 Logging using DiagnosticSource in ASP.NET Core Using the DiagnosticSource in .NET Core: Theory Dumps EventCounters in .NET Core .NET Core logging and tracing .NET Diagnostics Tools: dump vs. gcdump Diagnostics in .Net Core 3: Listening to outbound HTTP requests .NET Tip: Performance Counters for MemoryCache Investigate performance counters (dotnet-counters) Use Performance Counters in .NET to measure Memory, CPU, and Everything \u2013 Full Guide Reporting Metrics Using .Net (Core) EventSource and EventCounte Creating a Custom ETW EventSource for Debugging High-Performance Code in C# Tracing with EventSource in .NET 4.5 Exploring EventSource Activity (correlation and causation) Features DiagnosticSource User\u2019s Guide Output Diagnostic Source to Event Source MassTransit DiagnosticSource MassTransit Performance counters Introducing Ukadc.Diagnostics From zero to logging with System.Diagnostics in 15 minutes Cross-platform diagnostic tools for .NET Core Observing .NET Core Counters (in CloudWatch) A Lap Around ActivitySource and ActivityListener in .NET 5 Increasing Trace Cardinality with Activity Tags and Baggage Add SkyWalking + SkyApm-dotnet distributed link tracking system to the microservice framework Demo.MicroServer Using System.Diagnostic.DiagnosticSource to intercept database requests Diagnostic log Diagnosticsource in .NET CORE EventSource? DiagnosticSource? Both? .NET Core 2.2: Runtime Events ASP.NET Core Apps Observability OpenTelemetry .NET API OpenTelemetry in .NET Videos \u00b6 Diagnostics Improvements in .NET Core 3.0 Introducing the Diagnostics Client Library for .NET Core Cool things you can do with .NET Core 3 Tooling - Jonathan Mezach DiagnosticSource and Activity, Tracing in .NET Part 1 - .NET Concept of the Week - Episode 18 .NET Design Review: System.Diagnostics.Activity Samples \u00b6 gregkalapos/DiagnosticSource aspnet/AspNetCore/blob/master/src/Hosting/Hosting/src/Internal/HostingEventSource.cs aspnet/AspNetCore/blob/master/src/Servers/Kestrel/Core/src/Internal/Infrastructure/KestrelEventSource.cs SkyAPM-dotnet/SkyApm.Diagnostics.AspNetCore/HostingDiagnosticProcessor dotnet/runtime/DiagnosticsHandler dotnet/aspnetcore/HostingApplicationDiagnostics open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.StackExchangeRedis open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.SqlClient open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.AspNetCore open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.Http open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.GrpcNetClient jbogard/MongoDB.Driver.Core.Extensions.OpenTelemetry jbogard/MongoDB.Driver.Core.Extensions.DiagnosticSources Libraries \u00b6 open-telemetry/opentelemetry-dotnet - The OpenTelemetry .NET Client Azure/diagnostics-eventflow - Microsoft Diagnostics EventFlow bluekiri/bluekiri-diagnostics-prometheus - Exposes Diagnostic Source events as prometheus metrics using prometheus-net underneath sgryphon/essential-diagnostics - Essential.Diagnostics contains additional trace listeners, filters and utility classes for the .NET Framework System.Diagnostics trace logging. Included are colored console, SQL database, rolling file, Seq logging server, and in-memory trace listeners, expression filters, activity and logical operation scopes, and configuration file monitoring. SkyAPM/SkyAPM-dotnet open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.StackExchangeRedis open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.SqlClient open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.AspNetCore open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.Http open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.GrpcNetClient jbogard/MongoDB.Driver.Core.Extensions.OpenTelemetry jbogard/MongoDB.Driver.Core.Extensions.DiagnosticSources - extends the core MongoDB C# driver to expose telemetry information via System.Diagnostics.","title":"Diagnostics"},{"location":"diagnostics/#diagnostics","text":"","title":"Diagnostics"},{"location":"diagnostics/#articles","text":"DiagnosticSource User\u2019s Guide Activity User Guide Diagnostic Source in.Net Core Improve Activity API usability and OpenTelemetry integration Improve Activity API usability and OpenTelemetry integration (Part 2) What diagnostic tools are available in .NET Core? .NET distributed tracing concepts Adding distributed tracing instrumentation Collect a distributed trace Activity Class ActivityListener Class ActivitySource Class ActivityLink Struct EventListener Class EventSource Class Introducing diagnostics improvements in .NET Core 3.0 Diagnostics improvements in .NET 5 Logging using DiagnosticSource in ASP.NET Core Using the DiagnosticSource in .NET Core: Theory Dumps EventCounters in .NET Core .NET Core logging and tracing .NET Diagnostics Tools: dump vs. gcdump Diagnostics in .Net Core 3: Listening to outbound HTTP requests .NET Tip: Performance Counters for MemoryCache Investigate performance counters (dotnet-counters) Use Performance Counters in .NET to measure Memory, CPU, and Everything \u2013 Full Guide Reporting Metrics Using .Net (Core) EventSource and EventCounte Creating a Custom ETW EventSource for Debugging High-Performance Code in C# Tracing with EventSource in .NET 4.5 Exploring EventSource Activity (correlation and causation) Features DiagnosticSource User\u2019s Guide Output Diagnostic Source to Event Source MassTransit DiagnosticSource MassTransit Performance counters Introducing Ukadc.Diagnostics From zero to logging with System.Diagnostics in 15 minutes Cross-platform diagnostic tools for .NET Core Observing .NET Core Counters (in CloudWatch) A Lap Around ActivitySource and ActivityListener in .NET 5 Increasing Trace Cardinality with Activity Tags and Baggage Add SkyWalking + SkyApm-dotnet distributed link tracking system to the microservice framework Demo.MicroServer Using System.Diagnostic.DiagnosticSource to intercept database requests Diagnostic log Diagnosticsource in .NET CORE EventSource? DiagnosticSource? Both? .NET Core 2.2: Runtime Events ASP.NET Core Apps Observability OpenTelemetry .NET API OpenTelemetry in .NET","title":"Articles"},{"location":"diagnostics/#videos","text":"Diagnostics Improvements in .NET Core 3.0 Introducing the Diagnostics Client Library for .NET Core Cool things you can do with .NET Core 3 Tooling - Jonathan Mezach DiagnosticSource and Activity, Tracing in .NET Part 1 - .NET Concept of the Week - Episode 18 .NET Design Review: System.Diagnostics.Activity","title":"Videos"},{"location":"diagnostics/#samples","text":"gregkalapos/DiagnosticSource aspnet/AspNetCore/blob/master/src/Hosting/Hosting/src/Internal/HostingEventSource.cs aspnet/AspNetCore/blob/master/src/Servers/Kestrel/Core/src/Internal/Infrastructure/KestrelEventSource.cs SkyAPM-dotnet/SkyApm.Diagnostics.AspNetCore/HostingDiagnosticProcessor dotnet/runtime/DiagnosticsHandler dotnet/aspnetcore/HostingApplicationDiagnostics open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.StackExchangeRedis open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.SqlClient open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.AspNetCore open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.Http open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.GrpcNetClient jbogard/MongoDB.Driver.Core.Extensions.OpenTelemetry jbogard/MongoDB.Driver.Core.Extensions.DiagnosticSources","title":"Samples"},{"location":"diagnostics/#libraries","text":"open-telemetry/opentelemetry-dotnet - The OpenTelemetry .NET Client Azure/diagnostics-eventflow - Microsoft Diagnostics EventFlow bluekiri/bluekiri-diagnostics-prometheus - Exposes Diagnostic Source events as prometheus metrics using prometheus-net underneath sgryphon/essential-diagnostics - Essential.Diagnostics contains additional trace listeners, filters and utility classes for the .NET Framework System.Diagnostics trace logging. Included are colored console, SQL database, rolling file, Seq logging server, and in-memory trace listeners, expression filters, activity and logical operation scopes, and configuration file monitoring. SkyAPM/SkyAPM-dotnet open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.StackExchangeRedis open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.SqlClient open-telemetry/opentelemetry-dotnet/OpenTelemetry.Instrumentation.AspNetCore open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.Http open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.GrpcNetClient jbogard/MongoDB.Driver.Core.Extensions.OpenTelemetry jbogard/MongoDB.Driver.Core.Extensions.DiagnosticSources - extends the core MongoDB C# driver to expose telemetry information via System.Diagnostics.","title":"Libraries"},{"location":"distributed-tracing/","text":"Distributed Tracing \u00b6 \ud83d\udcd5 Articles \u00b6 Collect a distributed trace NET distributed tracing concepts Adding distributed tracing instrumentation Using W3C Trace Context standard in distributed tracing Building End-to-End Diagnostics and Tracing: An Intro Distributed Tracing in ASP.NET Core with Jaeger and Tye Part 1 - Distributed Tracing Distributed Tracing in ASP.NET Core with Jaeger and Tye Part 2 - Project Tye Getting Started with OpenTelemetry .NET C# OpenTelemetry .NET reaches v1.0 Deep Dive into Open Telemetry for .NET Open Telemetry for ASP.NET Core Exporting Open Telemetry Data to Jaeger OpenTracing and C# OpenTracing and C#: part 2 Getting started with OpenTelemetry and distributed tracing in .NET Core Distributed Tracing with OpenTracing API of .NET Core Applications on Kubernetes How Distributed Tracing Solves One of the Worst Microservices Problems Why You Should be Paying Attention to OpenTracing The Current State of OpenTelemetry in .NET Improvements in .NET Core 3.0 for troubleshooting and monitoring distributed apps ASP.NET Core Apps Observability A Step by Step Guide to Logging in ASP.NET Core 5 Capturing and forwarding correlation IDs in ASP.NET Core Capturing and forwarding correlation IDs in ASP.NET Core, the easy way ASP.NET CORE CORRELATION IDS Diagnostics in .Net Core 3: Listening to outbound HTTP requests Request Tracing And Logging Between Multiple MicroService With Correlation Id Using Serilog In .NET Core .NET Core Log Correlation - Request Id .NET Core Log Correlation - Arbitrary Log Properties .NET Core Log Correlation - Easy Access to the Correlation Id .NET Core Log Correlation - HttpClient and default headers Passing correlation id across requests Correlation ID with ASP.NET Web API ASP.NET 5 and Log Correlation by Request Id A consistent approach to track correlation IDs through microservices Trace Context Propagation format for distributed trace context: Baggage Using Jaeger and OpenTelemetry SDKs in a mixed environment with W3C Trace-Context Distributed Tracing In .NET Diagnostics Improvements in .NET Core 3.0 Distributed Tracing with gRPC and OpenTelemetry Introducing diagnostics improvements in .NET Core 3.0 Using the DiagnosticSource in .NET Core: Theory Add SkyWalking + SkyApm-dotnet distributed link tracking system to the microservice framework Demo.MicroServer Asp.Net Core uses Skywalking to implement distributed link tracking ASP.NET Core Apps Observability OpenTelemetry .NET API OpenTelemetry .NET SDK OpenTelemetry in .NET \ud83d\udcfa Videos \u00b6 Jimmy Bogard - Distributed Tracing Made Easy with .NET Core and OpenTelemetry On .NET Live - Cloud Native Patterns for .NET Developers Distributed Tracing Made Easy with .NET Core - Jimmy Bogard Distributed Tracing Made Easy with .NET 5, with Jimmy Bogard Distributed Tracing with .NET 5 ASP.NET Core Series: Tracing Distributed Tracing with Jaeger [Microservices .NET] Application Diagnostics in .NET Core 3.1 - Damian Edwards & David Fowler DiagnosticSource and Activity, Tracing in .NET Part 1 - .NET Concept of the Week - Episode 18 Tracing with Jaeger and Kubernetes Samples \u00b6 karlospn/opentelemetry-tracing-demo - Example about how to use OpenTelemetry for tracing when we have a series of distributed applications communicating between them jbogard/nsb-diagnostics-poc \ud83d\udce6 Libraries \u00b6 SkyAPM/SkyAPM-dotnet - The .NET/.NET Core instrument agent for Apache SkyWalking opentracing-contrib/csharp-netcore - OpenTracing instrumentation for .NET Core & .NET 5 apps jaegertracing/jaeger-client-csharp - C# client (tracer) for Jaeger open-telemetry/opentelemetry-dotnet - The OpenTelemetry .NET Client SkyAPM/SkyAPM-dotnet - The .NET/.NET Core instrument agent for Apache SkyWalking jbogard/MongoDB.Driver.Core.Extensions.DiagnosticSources - extends the core MongoDB C# driver to expose telemetry information via System.Diagnostics. jbogard/NServiceBus.Extensions.Diagnostics.OpenTelemetry jbogard/MongoDB.Driver.Core.Extensions.DiagnosticSources","title":"Distributed Tracing"},{"location":"distributed-tracing/#distributed-tracing","text":"","title":"Distributed Tracing"},{"location":"distributed-tracing/#articles","text":"Collect a distributed trace NET distributed tracing concepts Adding distributed tracing instrumentation Using W3C Trace Context standard in distributed tracing Building End-to-End Diagnostics and Tracing: An Intro Distributed Tracing in ASP.NET Core with Jaeger and Tye Part 1 - Distributed Tracing Distributed Tracing in ASP.NET Core with Jaeger and Tye Part 2 - Project Tye Getting Started with OpenTelemetry .NET C# OpenTelemetry .NET reaches v1.0 Deep Dive into Open Telemetry for .NET Open Telemetry for ASP.NET Core Exporting Open Telemetry Data to Jaeger OpenTracing and C# OpenTracing and C#: part 2 Getting started with OpenTelemetry and distributed tracing in .NET Core Distributed Tracing with OpenTracing API of .NET Core Applications on Kubernetes How Distributed Tracing Solves One of the Worst Microservices Problems Why You Should be Paying Attention to OpenTracing The Current State of OpenTelemetry in .NET Improvements in .NET Core 3.0 for troubleshooting and monitoring distributed apps ASP.NET Core Apps Observability A Step by Step Guide to Logging in ASP.NET Core 5 Capturing and forwarding correlation IDs in ASP.NET Core Capturing and forwarding correlation IDs in ASP.NET Core, the easy way ASP.NET CORE CORRELATION IDS Diagnostics in .Net Core 3: Listening to outbound HTTP requests Request Tracing And Logging Between Multiple MicroService With Correlation Id Using Serilog In .NET Core .NET Core Log Correlation - Request Id .NET Core Log Correlation - Arbitrary Log Properties .NET Core Log Correlation - Easy Access to the Correlation Id .NET Core Log Correlation - HttpClient and default headers Passing correlation id across requests Correlation ID with ASP.NET Web API ASP.NET 5 and Log Correlation by Request Id A consistent approach to track correlation IDs through microservices Trace Context Propagation format for distributed trace context: Baggage Using Jaeger and OpenTelemetry SDKs in a mixed environment with W3C Trace-Context Distributed Tracing In .NET Diagnostics Improvements in .NET Core 3.0 Distributed Tracing with gRPC and OpenTelemetry Introducing diagnostics improvements in .NET Core 3.0 Using the DiagnosticSource in .NET Core: Theory Add SkyWalking + SkyApm-dotnet distributed link tracking system to the microservice framework Demo.MicroServer Asp.Net Core uses Skywalking to implement distributed link tracking ASP.NET Core Apps Observability OpenTelemetry .NET API OpenTelemetry .NET SDK OpenTelemetry in .NET","title":"\ud83d\udcd5 Articles"},{"location":"distributed-tracing/#videos","text":"Jimmy Bogard - Distributed Tracing Made Easy with .NET Core and OpenTelemetry On .NET Live - Cloud Native Patterns for .NET Developers Distributed Tracing Made Easy with .NET Core - Jimmy Bogard Distributed Tracing Made Easy with .NET 5, with Jimmy Bogard Distributed Tracing with .NET 5 ASP.NET Core Series: Tracing Distributed Tracing with Jaeger [Microservices .NET] Application Diagnostics in .NET Core 3.1 - Damian Edwards & David Fowler DiagnosticSource and Activity, Tracing in .NET Part 1 - .NET Concept of the Week - Episode 18 Tracing with Jaeger and Kubernetes","title":"\ud83d\udcfa Videos"},{"location":"distributed-tracing/#samples","text":"karlospn/opentelemetry-tracing-demo - Example about how to use OpenTelemetry for tracing when we have a series of distributed applications communicating between them jbogard/nsb-diagnostics-poc","title":"Samples"},{"location":"distributed-tracing/#libraries","text":"SkyAPM/SkyAPM-dotnet - The .NET/.NET Core instrument agent for Apache SkyWalking opentracing-contrib/csharp-netcore - OpenTracing instrumentation for .NET Core & .NET 5 apps jaegertracing/jaeger-client-csharp - C# client (tracer) for Jaeger open-telemetry/opentelemetry-dotnet - The OpenTelemetry .NET Client SkyAPM/SkyAPM-dotnet - The .NET/.NET Core instrument agent for Apache SkyWalking jbogard/MongoDB.Driver.Core.Extensions.DiagnosticSources - extends the core MongoDB C# driver to expose telemetry information via System.Diagnostics. jbogard/NServiceBus.Extensions.Diagnostics.OpenTelemetry jbogard/MongoDB.Driver.Core.Extensions.DiagnosticSources","title":"\ud83d\udce6 Libraries"},{"location":"docker/","text":"Docker \u00b6 Resources \u00b6 wsargent/docker-cheat-sheet - Docker Cheat Sheet veggiemonk/awesome-docker - \ud83d\udc33 A curated list of Docker resources and projects \ud83d\udcdd Articles \u00b6 Optimising ASP.NET Core apps in Docker - avoiding manually copying csproj files Exploring the .NET Core Docker files: dotnet vs aspnetcore vs aspnetcore-build Exploring the .NET Core 2.1 Docker files (updated): dotnet:runtime vs aspnetcore-runtime vs sdk Building ASP.NET Core apps using Cake in Docker Using Docker Hub to automatically build a Docker image for ASP.NET Core apps DOCKER FOR .NET DEVELOPERS (PART 1) Optimising .NET Core Docker images Defining your multi-container application with docker-compose.yml \ud83d\udcf9 Videos \u00b6 Deploy a .NET Core API with Docker (Step-by-Step) Library \u00b6 hadolint/hadolint - Dockerfile linter, validate inline bash, written in Haskell wagoodman/dive - A tool for exploring each layer in a docker image","title":"Docker"},{"location":"docker/#docker","text":"","title":"Docker"},{"location":"docker/#resources","text":"wsargent/docker-cheat-sheet - Docker Cheat Sheet veggiemonk/awesome-docker - \ud83d\udc33 A curated list of Docker resources and projects","title":"Resources"},{"location":"docker/#articles","text":"Optimising ASP.NET Core apps in Docker - avoiding manually copying csproj files Exploring the .NET Core Docker files: dotnet vs aspnetcore vs aspnetcore-build Exploring the .NET Core 2.1 Docker files (updated): dotnet:runtime vs aspnetcore-runtime vs sdk Building ASP.NET Core apps using Cake in Docker Using Docker Hub to automatically build a Docker image for ASP.NET Core apps DOCKER FOR .NET DEVELOPERS (PART 1) Optimising .NET Core Docker images Defining your multi-container application with docker-compose.yml","title":"\ud83d\udcdd Articles"},{"location":"docker/#videos","text":"Deploy a .NET Core API with Docker (Step-by-Step)","title":"\ud83d\udcf9 Videos"},{"location":"docker/#library","text":"hadolint/hadolint - Dockerfile linter, validate inline bash, written in Haskell wagoodman/dive - A tool for exploring each layer in a docker image","title":"Library"},{"location":"elastic-search/","text":"Elastic Search \u00b6 Articles \u00b6 Elasticsearch: How to Add Full-Text Search to Your Database Logging with ElasticSearch, Kibana, ASP.NET Core and Docker Videos \u00b6 Logging into Elasticsearch using Serilog and viewing logs in Kibana | .NET Core Tutorial The .NET Docs Show - Getting Started with Elasticsearch.NET How to use Elasticsearch from .NET","title":"Elastic Search"},{"location":"elastic-search/#elastic-search","text":"","title":"Elastic Search"},{"location":"elastic-search/#articles","text":"Elasticsearch: How to Add Full-Text Search to Your Database Logging with ElasticSearch, Kibana, ASP.NET Core and Docker","title":"Articles"},{"location":"elastic-search/#videos","text":"Logging into Elasticsearch using Serilog and viewing logs in Kibana | .NET Core Tutorial The .NET Docs Show - Getting Started with Elasticsearch.NET How to use Elasticsearch from .NET","title":"Videos"},{"location":"environment/","text":"Environment \u00b6 \ud83d\udcdd Articles \u00b6 How to set the hosting environment in ASP.NET Core Configuring multiple ASP.NET Core hosting environment Why you shouldn\u2019t use ENV variables for secret data \u21a5 Back To Top","title":"Environment"},{"location":"environment/#environment","text":"","title":"Environment"},{"location":"environment/#articles","text":"How to set the hosting environment in ASP.NET Core Configuring multiple ASP.NET Core hosting environment Why you shouldn\u2019t use ENV variables for secret data \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"exception-handling/","text":"Exception Handling \u00b6 \ud83d\udcdd Articles \u00b6 My take on the Result class Functional C# Handling failures, input errors 10 Exception handling best practices in C# Exception handling in C# - throw or throw ex Problem Details - The right way to specify errors in Web API responses Handle Exceptions With ASP.NET Core ExceptionHandlerMiddleware Error handling: Exception or Result? Exceptions for flow control in C# C# code contracts vs input validation Fail Fast principle REST API response codes: 400 vs 500 What is an exceptional situation in code? Functional C# Handling failures, input errors Prefer Custom Exceptions to Framework Exceptions CQRS and exception handling Using the ProblemDetails Class in ASP.NET Core Web API Handling Web API Exceptions with ProblemDetails middleware Creating a custom ErrorHandlerMiddleware function Clean code tips - Error handling Exception Handling in ASP.NET Web API - A Guided Tour Problem Details for Better REST HTTP API Errors Global Exception Handling in ASP.NET Core \u2013 Ultimate Guide ASP.NET Core 3.1 - Global Error Handler Tutorial Global Error Handling in ASP.NET Core Web API Mapping exceptions to HTTP responses with .NET Core Setting up an Exception Mapper in .NET Core 2.0 Using Middleware to trap Exceptions in Asp.Net Core Centralized exception handling and request validation in ASP.NET Core Error Handling and ExceptionFilter Dependency Injection for ASP.NET Core APIs Global Exception Handling in ASP.NET Core WEB API Scaffold Your Clean DDD Web Application - Part 4: Global Exception Handling in ASP.NET Core and Angular An opinionated way to consistent Error Handling in ASP.NET Core EXCEPTION HANDLING MIDDLEWARE IN .NET CORE WEB API Cost of exceptions The True Cost of .NET Exceptions \u2013 Solution Design Guidelines Update: Exception Throwing Why Exceptions should be Exceptional Exception Throwing Using Standard Exception Types Exceptions and Performance Improving .NET Application Performance Part 10: Exception Management Bad Data, Try/Catch, and Slow Performance Exceptions and Performance CARE your Web APIs with Consistent and Structured Error Responses \ud83d\udcf9 Videos \u00b6 STOP throwing Exceptions! Start being Explicit BEYOND Status Codes! Better REST HTTP API Error Responses The hidden cost of Exceptions in .NET Libraries \u00b6 proudmonkey/AutoWrapper khellang/Middleware.ProblemDetails - Various ASP.NET Core middleware ardalis/GuardClauses - A simple package with guard clause extensions. JosephWoodward/GlobalExceptionHandlerDotNet - Exception handling as a convention in the ASP.NET Core request pipeline. safakgur/guard - A high-performance, extensible argument validation library. GuardClauses - A simple package with guard clause extensions. FluentValidation/FluentValidation - A popular .NET validation library for building strongly-typed validation rules. mcintyre321/OneOf - Easy to use F#-like discriminated unions for C# with exhaustive compile time matching ardalis/Result - A result abstraction that can be mapped to HTTP response codes if needed. ikyriak/ConsistentApiResponseErrors - A .NET Core middleware that centralizes the handling of input-validation errors, application exceptions and unhandled exceptions.","title":"Exception Handling"},{"location":"exception-handling/#exception-handling","text":"","title":"Exception Handling"},{"location":"exception-handling/#articles","text":"My take on the Result class Functional C# Handling failures, input errors 10 Exception handling best practices in C# Exception handling in C# - throw or throw ex Problem Details - The right way to specify errors in Web API responses Handle Exceptions With ASP.NET Core ExceptionHandlerMiddleware Error handling: Exception or Result? Exceptions for flow control in C# C# code contracts vs input validation Fail Fast principle REST API response codes: 400 vs 500 What is an exceptional situation in code? Functional C# Handling failures, input errors Prefer Custom Exceptions to Framework Exceptions CQRS and exception handling Using the ProblemDetails Class in ASP.NET Core Web API Handling Web API Exceptions with ProblemDetails middleware Creating a custom ErrorHandlerMiddleware function Clean code tips - Error handling Exception Handling in ASP.NET Web API - A Guided Tour Problem Details for Better REST HTTP API Errors Global Exception Handling in ASP.NET Core \u2013 Ultimate Guide ASP.NET Core 3.1 - Global Error Handler Tutorial Global Error Handling in ASP.NET Core Web API Mapping exceptions to HTTP responses with .NET Core Setting up an Exception Mapper in .NET Core 2.0 Using Middleware to trap Exceptions in Asp.Net Core Centralized exception handling and request validation in ASP.NET Core Error Handling and ExceptionFilter Dependency Injection for ASP.NET Core APIs Global Exception Handling in ASP.NET Core WEB API Scaffold Your Clean DDD Web Application - Part 4: Global Exception Handling in ASP.NET Core and Angular An opinionated way to consistent Error Handling in ASP.NET Core EXCEPTION HANDLING MIDDLEWARE IN .NET CORE WEB API Cost of exceptions The True Cost of .NET Exceptions \u2013 Solution Design Guidelines Update: Exception Throwing Why Exceptions should be Exceptional Exception Throwing Using Standard Exception Types Exceptions and Performance Improving .NET Application Performance Part 10: Exception Management Bad Data, Try/Catch, and Slow Performance Exceptions and Performance CARE your Web APIs with Consistent and Structured Error Responses","title":"\ud83d\udcdd Articles"},{"location":"exception-handling/#videos","text":"STOP throwing Exceptions! Start being Explicit BEYOND Status Codes! Better REST HTTP API Error Responses The hidden cost of Exceptions in .NET","title":"\ud83d\udcf9 Videos"},{"location":"exception-handling/#libraries","text":"proudmonkey/AutoWrapper khellang/Middleware.ProblemDetails - Various ASP.NET Core middleware ardalis/GuardClauses - A simple package with guard clause extensions. JosephWoodward/GlobalExceptionHandlerDotNet - Exception handling as a convention in the ASP.NET Core request pipeline. safakgur/guard - A high-performance, extensible argument validation library. GuardClauses - A simple package with guard clause extensions. FluentValidation/FluentValidation - A popular .NET validation library for building strongly-typed validation rules. mcintyre321/OneOf - Easy to use F#-like discriminated unions for C# with exhaustive compile time matching ardalis/Result - A result abstraction that can be mapped to HTTP response codes if needed. ikyriak/ConsistentApiResponseErrors - A .NET Core middleware that centralizes the handling of input-validation errors, application exceptions and unhandled exceptions.","title":"Libraries"},{"location":"feature-flags/","text":"Feature Flags \u00b6 \ud83d\udcdd Articles \u00b6 Use feature flags in an ASP.NET Core app Libraries \u00b6 bharatdwarkani/awesome-libraries-to-build-sass-application-dotnet-core Microsoft.FeatureManagement provides standardized APIs for enabling feature flags within applications. Utilize this library to secure a consistent experience when developing applications that use patterns such as beta access, rollout, dark deployments, and more. valdisiljuconoks/FeatureSwitch FeatureSwitch is library that should reduce amount of time and code required to implement feature switching in your projects.","title":"Feature Flags"},{"location":"feature-flags/#feature-flags","text":"","title":"Feature Flags"},{"location":"feature-flags/#articles","text":"Use feature flags in an ASP.NET Core app","title":"\ud83d\udcdd Articles"},{"location":"feature-flags/#libraries","text":"bharatdwarkani/awesome-libraries-to-build-sass-application-dotnet-core Microsoft.FeatureManagement provides standardized APIs for enabling feature flags within applications. Utilize this library to secure a consistent experience when developing applications that use patterns such as beta access, rollout, dark deployments, and more. valdisiljuconoks/FeatureSwitch FeatureSwitch is library that should reduce amount of time and code required to implement feature switching in your projects.","title":"Libraries"},{"location":"generic-host/","text":"Generic Host And Web Host \u00b6 \ud83d\udcdd Articles \u00b6 ASP.NET Core Web Host .NET Generic Host in ASP.NET Core USING HOSTBUILDER AND THE GENERIC HOST IN .NET CORE MICROSERVICES Generic Host Builder in ASP .NET Core 3.1 The ASP.NET Core Generic Host: namespace clashes and extension methods Avoiding Startup service injection in ASP.NET Core 3 IHostingEnvironment vs IHostEnvironment - obsolete types in .NET Core 3.0 .NET Generic Host Understanding .NET Generic Host Model Exploring the new project file, Program.cs, and the generic host Introducing IHostLifetime and untangling the Generic Host startup interactions Exploring Program.cs, Startup.cs and CreateDefaultBuilder in ASP.NET Core 2 preview 1 WebHostBuilder Customizing ASP.\u200bNET Core Part 11: WebHostBuilder Working With .NET Console Host Lifetime Events \ud83d\udd16 Samples \u00b6 updating-test-host-to-3-0 \u21a5 Back To Top","title":"Generic Host And Web Host"},{"location":"generic-host/#generic-host-and-web-host","text":"","title":"Generic Host And Web Host"},{"location":"generic-host/#articles","text":"ASP.NET Core Web Host .NET Generic Host in ASP.NET Core USING HOSTBUILDER AND THE GENERIC HOST IN .NET CORE MICROSERVICES Generic Host Builder in ASP .NET Core 3.1 The ASP.NET Core Generic Host: namespace clashes and extension methods Avoiding Startup service injection in ASP.NET Core 3 IHostingEnvironment vs IHostEnvironment - obsolete types in .NET Core 3.0 .NET Generic Host Understanding .NET Generic Host Model Exploring the new project file, Program.cs, and the generic host Introducing IHostLifetime and untangling the Generic Host startup interactions Exploring Program.cs, Startup.cs and CreateDefaultBuilder in ASP.NET Core 2 preview 1 WebHostBuilder Customizing ASP.\u200bNET Core Part 11: WebHostBuilder Working With .NET Console Host Lifetime Events","title":"\ud83d\udcdd Articles"},{"location":"generic-host/#samples","text":"updating-test-host-to-3-0 \u21a5 Back To Top","title":"\ud83d\udd16 Samples"},{"location":"git/","text":"Git \u00b6 Articles \u00b6 FORKING AND CLONING FROM GITHUB WORKING ON YOUR FIRST GITHUB ISSUE Five Key Git Concepts Explained the Hard Way Videos \u00b6 Git and GitHub Tutorials for Beginners! Playlist - TheCodex Git and GitHub for Poets Playlist - The Coding Train Git Tutorials Playlist - thenewboston Git and GitHub Tutorials #5 - Understanding GitHub Issues 1.4: GitHub Issues - Git and GitHub for Poets Complete Guide to Open Source - How to Contribute How to Open Source Like a Pro Contributing to Open Source on GitHub for beginners Top Visual Studio Code Git Extensions in 2020 Git in Visual Studio Code Git and Github: Working on an Issue Contributing to Open Source for the first time VS Code tips: \u2018Start working on issue\u2019 from the Github PR extension VS Code tips: The CodeTour extension Git 101 Basics - Computer Stuff They Didn\u2019t Teach You #4 Git Pull Requests explained - Computer Stuff They Didn\u2019t Teach You #5 Git Rebase vs Merge explained - Computer Stuff They Didn\u2019t Teach You #6 Git Push \u2013Force will destroy the timeline and kill us all - Computer Stuff They Didn\u2019t Teach You #7","title":"Git"},{"location":"git/#git","text":"","title":"Git"},{"location":"git/#articles","text":"FORKING AND CLONING FROM GITHUB WORKING ON YOUR FIRST GITHUB ISSUE Five Key Git Concepts Explained the Hard Way","title":"Articles"},{"location":"git/#videos","text":"Git and GitHub Tutorials for Beginners! Playlist - TheCodex Git and GitHub for Poets Playlist - The Coding Train Git Tutorials Playlist - thenewboston Git and GitHub Tutorials #5 - Understanding GitHub Issues 1.4: GitHub Issues - Git and GitHub for Poets Complete Guide to Open Source - How to Contribute How to Open Source Like a Pro Contributing to Open Source on GitHub for beginners Top Visual Studio Code Git Extensions in 2020 Git in Visual Studio Code Git and Github: Working on an Issue Contributing to Open Source for the first time VS Code tips: \u2018Start working on issue\u2019 from the Github PR extension VS Code tips: The CodeTour extension Git 101 Basics - Computer Stuff They Didn\u2019t Teach You #4 Git Pull Requests explained - Computer Stuff They Didn\u2019t Teach You #5 Git Rebase vs Merge explained - Computer Stuff They Didn\u2019t Teach You #6 Git Push \u2013Force will destroy the timeline and kill us all - Computer Stuff They Didn\u2019t Teach You #7","title":"Videos"},{"location":"graphql/","text":"GraphQL \u00b6 Resources \u00b6 chentsulin/awesome-graphql - Awesome list of GraphQL & Relay GraphQL Guide \ud83d\udcdd Articles \u00b6 Hot Chocolate GraphQL Custom Authentication Series Using Pure Code First Technique - Part1 - User Registration Hot Chocolate GraphQL Custom Authentication Series Using Pure Code First Technique - Part2 - Generating JWT(JSON Web Token) Access Token Hot Chocolate GraphQL Custom Authentication Series Using Pure Code First Technique - Part4 - Refresh Token Introducing GraphQLinq - Strongly Typed GraphQL Queries with LINQ to GraphQL. GRAPHQL VS REST: WHICH ONE IS BETTER? Building a GraphQL API with ASP.NET Core 2 and Entity Framework Core Build an Authenticated GraphQL App with Angular, ASP.NET Core and IdentityServer - Part 1 Build an Authenticated GraphQL App with Angular, ASP.NET Core and IdentityServer - Part 2 Build an Authenticated GraphQL App with Angular, ASP.NET Core and IdentityServer - Part 3 Build an Authenticated GraphQL App with Angular, ASP.NET Core and IdentityServer - Part 4 Understanding the benefits and limitations of GraphQL versus REST \ud83d\udcf9 Videos \u00b6 .Net 5 with GraphQL - Step by Step GraphQL API with .NET 5 and Hot Chocolate On .NET Live - Creating GraphQL APIs with a little Hot Chocolate Hot Chocolate: An introduction to GraphQL on ASP.Net Core - Michael Staib .Net 5 with GraphQL - Step by Step Entity Framework Community Standup - Building Modern Apps with GraphQL Library \u00b6 graphql-dotnet/graphql-client - A GraphQL Client for .NET Standard graphql-dotnet/graphql-dotnet - GraphQL for .NET ChilliCream/hotchocolate - Welcome to the home of the Hot Chocolate GraphQL server for .NET, the Strawberry Shake GraphQL client for .NET and Banana Cake Pop the awesome Monaco based GraphQL IDE. Giorgi/GraphQLinq - LINQ to GraphQL - Strongly typed GraphQL queries with LINQ query syntax. No more magic strings and runtime errors. Samples \u00b6 JacekKosciesza/StarWars GraphQL \u2018Star Wars\u2019 example using GraphQL for .NET, ASP.NET Core, Entity Framework Core \u21a5 Back To Top","title":"GraphQL"},{"location":"graphql/#graphql","text":"","title":"GraphQL"},{"location":"graphql/#resources","text":"chentsulin/awesome-graphql - Awesome list of GraphQL & Relay GraphQL Guide","title":"Resources"},{"location":"graphql/#articles","text":"Hot Chocolate GraphQL Custom Authentication Series Using Pure Code First Technique - Part1 - User Registration Hot Chocolate GraphQL Custom Authentication Series Using Pure Code First Technique - Part2 - Generating JWT(JSON Web Token) Access Token Hot Chocolate GraphQL Custom Authentication Series Using Pure Code First Technique - Part4 - Refresh Token Introducing GraphQLinq - Strongly Typed GraphQL Queries with LINQ to GraphQL. GRAPHQL VS REST: WHICH ONE IS BETTER? Building a GraphQL API with ASP.NET Core 2 and Entity Framework Core Build an Authenticated GraphQL App with Angular, ASP.NET Core and IdentityServer - Part 1 Build an Authenticated GraphQL App with Angular, ASP.NET Core and IdentityServer - Part 2 Build an Authenticated GraphQL App with Angular, ASP.NET Core and IdentityServer - Part 3 Build an Authenticated GraphQL App with Angular, ASP.NET Core and IdentityServer - Part 4 Understanding the benefits and limitations of GraphQL versus REST","title":"\ud83d\udcdd Articles"},{"location":"graphql/#videos","text":".Net 5 with GraphQL - Step by Step GraphQL API with .NET 5 and Hot Chocolate On .NET Live - Creating GraphQL APIs with a little Hot Chocolate Hot Chocolate: An introduction to GraphQL on ASP.Net Core - Michael Staib .Net 5 with GraphQL - Step by Step Entity Framework Community Standup - Building Modern Apps with GraphQL","title":"\ud83d\udcf9 Videos"},{"location":"graphql/#library","text":"graphql-dotnet/graphql-client - A GraphQL Client for .NET Standard graphql-dotnet/graphql-dotnet - GraphQL for .NET ChilliCream/hotchocolate - Welcome to the home of the Hot Chocolate GraphQL server for .NET, the Strawberry Shake GraphQL client for .NET and Banana Cake Pop the awesome Monaco based GraphQL IDE. Giorgi/GraphQLinq - LINQ to GraphQL - Strongly typed GraphQL queries with LINQ query syntax. No more magic strings and runtime errors.","title":"Library"},{"location":"graphql/#samples","text":"JacekKosciesza/StarWars GraphQL \u2018Star Wars\u2019 example using GraphQL for .NET, ASP.NET Core, Entity Framework Core \u21a5 Back To Top","title":"Samples"},{"location":"grpc/","text":"gRPC \u00b6 Resources \u00b6 gRPC for WCF developers e-book \ud83d\udcdd Articles \u00b6 Introduction to gRPC on .NET gRPC services with C# gRPC services with ASP.NET Core Create gRPC services and methods Call gRPC services with the .NET client gRPC client factory integration in .NET Core gRPC and C# 8 Async stream gRPC and C# 8 Async stream cancellation Code first gRPC services and clients with .NET Create JSON Web APIs from gRPC gRPC and ASP.NET Core 5 Discover gRPCui the GUI alternative to gRPCurl - Anthony Giretti gRPC and ASP.NET Core 5 Add a gRPC service reference from a remote protobuf over Route-To-Code - Anthony Giretti gRPC and ASP.NET Core 5 Test gRPC endpoints with gRPCurl - Anthony Giretti Using gRPC in Microservices for Building a high-performance Interservice Communication with .Net 5 Generate Links To ASP.NET Core Map Endpoints Building a simple Client-Server Interaction with gRPC in ASP.NET Core How to choose between protobuf-csharp-port and protobuf-net gRPC performance benchmark in ASP.NET Core 3 Trying out gRPC in ASP.NET Core 3 Getting Started protobuf-net.Grpc \ud83d\udcf9 Videos \u00b6 Bidirectional Streaming | gRPC in .NET 5 Client Streaming | gRPC in .NET 5 gRPC Server & Unary Calls | gRPC in .NET 5 Server Streaming | gRPC in .NET 5 Intro to gRPC - Step by Step Mark Gravell Talking Between Services with gRPC and Other Tricks - .NET Oxford - September 2019 Talking between services with gRPC, and other tricks - Marc Gravell Embracing gRPC in .NET, by Irina Scurtu Courses \u00b6 Secure .Net Microservices with IdentityServer4 OAuth2,OpenID Libraries \u00b6 https://github.com/grpc/grpc-dotnet - gRPC for .NET protobuf-net/protobuf-net.Grpc - GRPC bindings for protobuf-net and grpc-dotnet protobuf-net/protobuf-net - Protocol Buffers library for idiomatic .NET Samples \u00b6 aspnetrun/run-aspnet-grpc - Using gRPC in Microservices for Building a high-performance Interservice Communication with .Net 5. See gRPC Microservices and Step by Step Implementation on .NET Course w/ discount \u21a5 Back To Top","title":"gRPC"},{"location":"grpc/#grpc","text":"","title":"gRPC"},{"location":"grpc/#resources","text":"gRPC for WCF developers e-book","title":"Resources"},{"location":"grpc/#articles","text":"Introduction to gRPC on .NET gRPC services with C# gRPC services with ASP.NET Core Create gRPC services and methods Call gRPC services with the .NET client gRPC client factory integration in .NET Core gRPC and C# 8 Async stream gRPC and C# 8 Async stream cancellation Code first gRPC services and clients with .NET Create JSON Web APIs from gRPC gRPC and ASP.NET Core 5 Discover gRPCui the GUI alternative to gRPCurl - Anthony Giretti gRPC and ASP.NET Core 5 Add a gRPC service reference from a remote protobuf over Route-To-Code - Anthony Giretti gRPC and ASP.NET Core 5 Test gRPC endpoints with gRPCurl - Anthony Giretti Using gRPC in Microservices for Building a high-performance Interservice Communication with .Net 5 Generate Links To ASP.NET Core Map Endpoints Building a simple Client-Server Interaction with gRPC in ASP.NET Core How to choose between protobuf-csharp-port and protobuf-net gRPC performance benchmark in ASP.NET Core 3 Trying out gRPC in ASP.NET Core 3 Getting Started protobuf-net.Grpc","title":"\ud83d\udcdd Articles"},{"location":"grpc/#videos","text":"Bidirectional Streaming | gRPC in .NET 5 Client Streaming | gRPC in .NET 5 gRPC Server & Unary Calls | gRPC in .NET 5 Server Streaming | gRPC in .NET 5 Intro to gRPC - Step by Step Mark Gravell Talking Between Services with gRPC and Other Tricks - .NET Oxford - September 2019 Talking between services with gRPC, and other tricks - Marc Gravell Embracing gRPC in .NET, by Irina Scurtu","title":"\ud83d\udcf9 Videos"},{"location":"grpc/#courses","text":"Secure .Net Microservices with IdentityServer4 OAuth2,OpenID","title":"Courses"},{"location":"grpc/#libraries","text":"https://github.com/grpc/grpc-dotnet - gRPC for .NET protobuf-net/protobuf-net.Grpc - GRPC bindings for protobuf-net and grpc-dotnet protobuf-net/protobuf-net - Protocol Buffers library for idiomatic .NET","title":"Libraries"},{"location":"grpc/#samples","text":"aspnetrun/run-aspnet-grpc - Using gRPC in Microservices for Building a high-performance Interservice Communication with .Net 5. See gRPC Microservices and Step by Step Implementation on .NET Course w/ discount \u21a5 Back To Top","title":"Samples"},{"location":"health-check/","text":"Health Check \u00b6 Articles \u00b6 Health monitoring Adding Health Checks UI Health Checks on your ASP.NET Core Application HEALTH CHECKS IN ASP.NET CORE How to set up ASP.NET Core 2.2 Health Checks with BeatPulse\u2019s AspNetCore.Diagnostics.HealthChecks Implementing a Docker HEALTHCHECK using ASP.Net Core 2.2 Healthchecks in ASP.NET Core \u2013 Detailed Guide ASP.NET Core Health Checks Libraries \u00b6 Xabaril/AspNetCore.Diagnostics.HealthChecks - Enterprise HealthChecks for ASP.NET Core Diagnostics Package","title":"Health Check"},{"location":"health-check/#health-check","text":"","title":"Health Check"},{"location":"health-check/#articles","text":"Health monitoring Adding Health Checks UI Health Checks on your ASP.NET Core Application HEALTH CHECKS IN ASP.NET CORE How to set up ASP.NET Core 2.2 Health Checks with BeatPulse\u2019s AspNetCore.Diagnostics.HealthChecks Implementing a Docker HEALTHCHECK using ASP.Net Core 2.2 Healthchecks in ASP.NET Core \u2013 Detailed Guide ASP.NET Core Health Checks","title":"Articles"},{"location":"health-check/#libraries","text":"Xabaril/AspNetCore.Diagnostics.HealthChecks - Enterprise HealthChecks for ASP.NET Core Diagnostics Package","title":"Libraries"},{"location":"hosted-service/","text":"Hosted Service \u00b6 \ud83d\udcdd Articles \u00b6 Background tasks with hosted services in ASP.NET Core IMPLEMENTING IHOSTEDSERVICE IN ASP.NET CORE 2.0 ASP. NET Core - IHostedService and BackgroundService Customizing ASP.\u200bNET Core Part 05: HostedServices Creating Windows Services In .NET Core \u2013 Part 3 \u2013 The \u201c.NET Core Worker\u201d Way Creating Windows Services In .NET Core \u2013 Part 2 \u2013 The \u201cTopshelf\u201d Way Access Background Services From ASP.NET Core \u21a5 Back To Top","title":"Hosted Service"},{"location":"hosted-service/#hosted-service","text":"","title":"Hosted Service"},{"location":"hosted-service/#articles","text":"Background tasks with hosted services in ASP.NET Core IMPLEMENTING IHOSTEDSERVICE IN ASP.NET CORE 2.0 ASP. NET Core - IHostedService and BackgroundService Customizing ASP.\u200bNET Core Part 05: HostedServices Creating Windows Services In .NET Core \u2013 Part 3 \u2013 The \u201c.NET Core Worker\u201d Way Creating Windows Services In .NET Core \u2013 Part 2 \u2013 The \u201cTopshelf\u201d Way Access Background Services From ASP.NET Core \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"hosting/","text":"Hosting \u00b6 \ud83d\udcdd Articles \u00b6 5 ways to set the URLs for an ASP.NET Core app Adding host filtering to Kestrel in ASP.NET Core ASP. NET Core - Hosting Customizing ASP.NET Core Part 12: Hosting ASP.NET Core Hosting on IIS on Windows Hosting Two ASP.NET Core Apps In One Host \u21a5 Back To Top","title":"Hosting"},{"location":"hosting/#hosting","text":"","title":"Hosting"},{"location":"hosting/#articles","text":"5 ways to set the URLs for an ASP.NET Core app Adding host filtering to Kestrel in ASP.NET Core ASP. NET Core - Hosting Customizing ASP.NET Core Part 12: Hosting ASP.NET Core Hosting on IIS on Windows Hosting Two ASP.NET Core Apps In One Host \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"httpclient/","text":"HttpClient \u00b6 \ud83d\udcdd Articles \u00b6 Make HTTP requests using IHttpClientFactory in ASP.NET Core ASP.NET Core 2.1-preview1: Introducing HTTPClient factory Use IHttpClientFactory to implement resilient HTTP requests Implement HTTP call retries with exponential backoff with IHttpClientFactory and Polly policies Implement the Circuit Breaker pattern SENDING AND RECEIVING JSON USING HTTPCLIENT WITH SYSTEM.NET.HTTP.JSON .NET 5: Exploring System.Net.Http.Json namespace Introducing Strongly Typed HTTP Request Headers for ASP.NET Core Tidy up your HttpClient usage You\u2019re (probably still) using HttpClient wrong and it is destabilizing your software Using HTTPClient Best Practices and Anti-Patterns HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 1) HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 2) HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 3) HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 4) HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 5): LOGGING Analysis of message pipeline used by. Net core httpclient (2) Alternative way to configure HttpClients 3 ways to use HTTPClientFactory in ASP.NET Core 2.1 YOU\u2019RE USING HTTPCLIENT WRONG AND IT IS DESTABILIZING YOUR SOFTWARE Exploring the code behind IHttpClientFactory in depth Improper Instantiation antipattern . NET Core HttpClientFactory+Consul for service discovery HTTPCLIENT CREATION AND DISPOSAL INTERNALS: SHOULD I DISPOSE OF HTTPCLIENT? DEMYSTIFYING HTTPCLIENT INTERNALS DEMYSTIFYING HTTPCLIENT INTERNALS: HTTPRESPONSEMESSAGE USING HTTPCOMPLETIONOPTION TO IMPROVE HTTPCLIENT PERFORMANCE IN .NET DI scopes in IHttpClientFactory message handlers don\u2019t work like you think they do HTTPCLIENT CONNECTION POOLING IN .NET CORE Building a typed Httpclient with Refit in ASP.NET Core 3 Using Refit in ASP.NET Core to remove boilerplate code when consuming REST endpoints Refit Basics Best practices with HttpClient and Retry Policies with Polly in .NET Core 2, Part 1 Best practices with HttpClient and Retry Policies with Polly in .NET Core 2, Part 2 Correlation ID with ASP.NET Web API Videos \u00b6 JustEat\u2019s HttpClient Interception library - Adam Storr ASP.NET Community Standup - Jan 23, 2018 - HttpClientFactory with Ryan Nowak Creating an API SDK with Refit | ASP.NET Core 5 REST API Tutorial 23 \u21a5 Back To Top","title":"HttpClient"},{"location":"httpclient/#httpclient","text":"","title":"HttpClient"},{"location":"httpclient/#articles","text":"Make HTTP requests using IHttpClientFactory in ASP.NET Core ASP.NET Core 2.1-preview1: Introducing HTTPClient factory Use IHttpClientFactory to implement resilient HTTP requests Implement HTTP call retries with exponential backoff with IHttpClientFactory and Polly policies Implement the Circuit Breaker pattern SENDING AND RECEIVING JSON USING HTTPCLIENT WITH SYSTEM.NET.HTTP.JSON .NET 5: Exploring System.Net.Http.Json namespace Introducing Strongly Typed HTTP Request Headers for ASP.NET Core Tidy up your HttpClient usage You\u2019re (probably still) using HttpClient wrong and it is destabilizing your software Using HTTPClient Best Practices and Anti-Patterns HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 1) HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 2) HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 3) HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 4) HTTPCLIENTFACTORY IN ASP.NET CORE 2.1 (PART 5): LOGGING Analysis of message pipeline used by. Net core httpclient (2) Alternative way to configure HttpClients 3 ways to use HTTPClientFactory in ASP.NET Core 2.1 YOU\u2019RE USING HTTPCLIENT WRONG AND IT IS DESTABILIZING YOUR SOFTWARE Exploring the code behind IHttpClientFactory in depth Improper Instantiation antipattern . NET Core HttpClientFactory+Consul for service discovery HTTPCLIENT CREATION AND DISPOSAL INTERNALS: SHOULD I DISPOSE OF HTTPCLIENT? DEMYSTIFYING HTTPCLIENT INTERNALS DEMYSTIFYING HTTPCLIENT INTERNALS: HTTPRESPONSEMESSAGE USING HTTPCOMPLETIONOPTION TO IMPROVE HTTPCLIENT PERFORMANCE IN .NET DI scopes in IHttpClientFactory message handlers don\u2019t work like you think they do HTTPCLIENT CONNECTION POOLING IN .NET CORE Building a typed Httpclient with Refit in ASP.NET Core 3 Using Refit in ASP.NET Core to remove boilerplate code when consuming REST endpoints Refit Basics Best practices with HttpClient and Retry Policies with Polly in .NET Core 2, Part 1 Best practices with HttpClient and Retry Policies with Polly in .NET Core 2, Part 2 Correlation ID with ASP.NET Web API","title":"\ud83d\udcdd Articles"},{"location":"httpclient/#videos","text":"JustEat\u2019s HttpClient Interception library - Adam Storr ASP.NET Community Standup - Jan 23, 2018 - HttpClientFactory with Ryan Nowak Creating an API SDK with Refit | ASP.NET Core 5 REST API Tutorial 23 \u21a5 Back To Top","title":"Videos"},{"location":"httpcontext/","text":"HttpContext && HttpContextAccessor \u00b6 \ud83d\udcdd Articles \u00b6 Accessing HttpContext outside of framework components in ASP.NET Core HttpContext.Features vs HttpContext.Items In Asp.Net Core Better way of storing Per-Request data across middlewares in ASP.NET Core The HttpContext Items Collection BETTER THAN HTTPCONTEXT.ITEMS Request Features And ASP.NET Core 3 When we can use HttpContext.Current.Items to stores data in ASP.NET ? HttpContext.Items Property HttpContext.TraceIdentifier Property HttpContext.Features Property Tips & tricks for unit testing in .NET Core 3: Mocking IHttpContextAccessor How to get custom header value in .NET Core WebAPI Read And Convert QueryCollection Values In ASP.NET xunit - how to get HttpContext.User.Identity in unit tests \u21a5 Back To Top","title":"HttContext && HttpContextAccessor"},{"location":"httpcontext/#httpcontext-httpcontextaccessor","text":"","title":"HttpContext &amp;&amp; HttpContextAccessor"},{"location":"httpcontext/#articles","text":"Accessing HttpContext outside of framework components in ASP.NET Core HttpContext.Features vs HttpContext.Items In Asp.Net Core Better way of storing Per-Request data across middlewares in ASP.NET Core The HttpContext Items Collection BETTER THAN HTTPCONTEXT.ITEMS Request Features And ASP.NET Core 3 When we can use HttpContext.Current.Items to stores data in ASP.NET ? HttpContext.Items Property HttpContext.TraceIdentifier Property HttpContext.Features Property Tips & tricks for unit testing in .NET Core 3: Mocking IHttpContextAccessor How to get custom header value in .NET Core WebAPI Read And Convert QueryCollection Values In ASP.NET xunit - how to get HttpContext.User.Identity in unit tests \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"kestrel/","text":"Kestrel \u00b6 \ud83d\udcdd Articles \u00b6 Kestrel web server implementation in ASP.NET Core .NET Core 3.0 AllowSynchronousIO Workaround QUICK INTRODUCTION TO KESTREL SERVER IN ASP .NET CORE APPLICATIONS CUSTOMIZING URL BINDING FOR ASP .NET CORE KESTREL SERVER \ud83d\udcf9 Videos \u00b6 Custom HTTPS Dev Environment using .NET Core, Kestrel & certificates \u21a5 Back To Top","title":"Kestrel"},{"location":"kestrel/#kestrel","text":"","title":"Kestrel"},{"location":"kestrel/#articles","text":"Kestrel web server implementation in ASP.NET Core .NET Core 3.0 AllowSynchronousIO Workaround QUICK INTRODUCTION TO KESTREL SERVER IN ASP .NET CORE APPLICATIONS CUSTOMIZING URL BINDING FOR ASP .NET CORE KESTREL SERVER","title":"\ud83d\udcdd Articles"},{"location":"kestrel/#videos","text":"Custom HTTPS Dev Environment using .NET Core, Kestrel & certificates \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"logging/","text":"Logging And Auditing \u00b6 Resources \u00b6 Serilog Docs \ud83d\udcdd Articles \u00b6 Logging in .NET Core and ASP.NET Core Logging in .NET Setup Serilog for Asp.Net Core TRACING IO IN .NET CORE Selective enrichment Setting up Serilog in ASP.NET Core 3 Structured logging concepts in .NET Series (1) Events and levels - structured logging concepts in .NET (2) Message templates and properties structured logging concepts in .NET (3) Event types \u2013 structured logging concepts in .NET (4) Context and correlation \u2013 structured logging concepts in .NET (5) Serialized data \u2013 structured logging concepts in .NET (6) Tagging log events for effective correlation Serilog in ASP.NET Core 3.1 \u2013 Structured Logging Made Easy Series: Using Serilog.AspNetCore in ASP.NET Core 3.0 ASP.NET Core 5 + Serilog What Is Structured Logging and Why Developers Need It Exporting Open Telemetry Data to Jaeger Logging with Serilog and Seq Serilog Best Practices Using Middleware in .NET 5.0 to Log Requests and Responses Adding Serilog to the ASP.NET Core Generic Host Serilog Tutorial for .NET Logging: 16 Best Practices and Tips Logging with ElasticSearch, Kibana, ASP.NET Core and Docker Stackify - Logging with .NET Core Scalable and Performant ASP.NET Core Web APIs: Profiling and Monitoring Reducing log verbosity with Serilog RequestLogging Logging the selected Endpoint Name with Serilog Part 3 - Logging MVC properties with Serilog.AspNetCore Extending Serilog with additional values to log Structured Logging in ASP.NET Core with Serilog ASP.NET Core MVC and UseSerilogRequestLogging() Implement log monitoring with Seq and Serilog in .net Core Implementing logging in .net core applications for logging, telemetry and your own sanity Implementing logging with Serilog Customizing Serilog text output Customized JSON formatting with Serilog Using Dotnet Core Logging without using the DI container Logging with ILogger in .NET: Recommendations and best practices Asp.net core - Log request/response headers ASP.NET Core 6 - HttpLogging - log requests/responses Serilog\u2013Add headers to request log Logging in ASP.NET Core 5 using Serilog Programmable text (and JSON) formatting for Serilog Adding Useful Information to ASP.NET Core Web API Serilog Logs Good citizenship - logging from .NET libraries Serilog DI in ASP.NET Core, which ILogger interface to inject? Should I use Microsoft.Extensions.Logging.ILogger or Serilog.ILogger? Log Level Configure Logging for Log Level Serilog DI in ASP.NET Core, which ILogger interface to inject? Writing Logs to xunit Test Output Writing logs to Elasticsearch with Fluentd using Serilog in ASP.NET Core .NET 5 + Serilog: implementando Logs com Elasticsearch, SQLite, Structured logging with Serilog and Seq and ElasticSearch under Docker How to turn off Serilog? \ud83d\udcf9 Videos \u00b6 Logging into Elasticsearch using Serilog and viewing logs in Kibana | .NET Core Tutorial Add Simple Distributed Tracing in .NET Libraries Libraries \u00b6 serilog/serilog-aspnetcore - Serilog integration for ASP.NET Core thepirat000/Audit.NET - An extensible framework to audit executing operations in .NET and .NET Core. ekmsystems/serilog-enrichers-correlation-id - Enrich logs with a unique ID so you can track logs for specific requests. PragmaticFlow/Serilog.Sinks.SpectreConsole serilog/serilog-expressions - An embeddable mini-language for filtering, enriching, and formatting Serilog events, ideal for use with JSON or XML configuration. serilog/serilog-sinks-console serilog/serilog-sinks-elasticsearch - A Serilog sink that writes events to Elasticsearch yorchideas/Serilog.Sinks.Xunit2 \ud83d\udd16 Samples \u00b6 serilog/serilog-aspnetcore jernejk/AspNetCoreSerilogExample \u21a5 Back To Top","title":"Logging And Auditing"},{"location":"logging/#logging-and-auditing","text":"","title":"Logging And Auditing"},{"location":"logging/#resources","text":"Serilog Docs","title":"Resources"},{"location":"logging/#articles","text":"Logging in .NET Core and ASP.NET Core Logging in .NET Setup Serilog for Asp.Net Core TRACING IO IN .NET CORE Selective enrichment Setting up Serilog in ASP.NET Core 3 Structured logging concepts in .NET Series (1) Events and levels - structured logging concepts in .NET (2) Message templates and properties structured logging concepts in .NET (3) Event types \u2013 structured logging concepts in .NET (4) Context and correlation \u2013 structured logging concepts in .NET (5) Serialized data \u2013 structured logging concepts in .NET (6) Tagging log events for effective correlation Serilog in ASP.NET Core 3.1 \u2013 Structured Logging Made Easy Series: Using Serilog.AspNetCore in ASP.NET Core 3.0 ASP.NET Core 5 + Serilog What Is Structured Logging and Why Developers Need It Exporting Open Telemetry Data to Jaeger Logging with Serilog and Seq Serilog Best Practices Using Middleware in .NET 5.0 to Log Requests and Responses Adding Serilog to the ASP.NET Core Generic Host Serilog Tutorial for .NET Logging: 16 Best Practices and Tips Logging with ElasticSearch, Kibana, ASP.NET Core and Docker Stackify - Logging with .NET Core Scalable and Performant ASP.NET Core Web APIs: Profiling and Monitoring Reducing log verbosity with Serilog RequestLogging Logging the selected Endpoint Name with Serilog Part 3 - Logging MVC properties with Serilog.AspNetCore Extending Serilog with additional values to log Structured Logging in ASP.NET Core with Serilog ASP.NET Core MVC and UseSerilogRequestLogging() Implement log monitoring with Seq and Serilog in .net Core Implementing logging in .net core applications for logging, telemetry and your own sanity Implementing logging with Serilog Customizing Serilog text output Customized JSON formatting with Serilog Using Dotnet Core Logging without using the DI container Logging with ILogger in .NET: Recommendations and best practices Asp.net core - Log request/response headers ASP.NET Core 6 - HttpLogging - log requests/responses Serilog\u2013Add headers to request log Logging in ASP.NET Core 5 using Serilog Programmable text (and JSON) formatting for Serilog Adding Useful Information to ASP.NET Core Web API Serilog Logs Good citizenship - logging from .NET libraries Serilog DI in ASP.NET Core, which ILogger interface to inject? Should I use Microsoft.Extensions.Logging.ILogger or Serilog.ILogger? Log Level Configure Logging for Log Level Serilog DI in ASP.NET Core, which ILogger interface to inject? Writing Logs to xunit Test Output Writing logs to Elasticsearch with Fluentd using Serilog in ASP.NET Core .NET 5 + Serilog: implementando Logs com Elasticsearch, SQLite, Structured logging with Serilog and Seq and ElasticSearch under Docker How to turn off Serilog?","title":"\ud83d\udcdd Articles"},{"location":"logging/#videos","text":"Logging into Elasticsearch using Serilog and viewing logs in Kibana | .NET Core Tutorial Add Simple Distributed Tracing in .NET Libraries","title":"\ud83d\udcf9 Videos"},{"location":"logging/#libraries","text":"serilog/serilog-aspnetcore - Serilog integration for ASP.NET Core thepirat000/Audit.NET - An extensible framework to audit executing operations in .NET and .NET Core. ekmsystems/serilog-enrichers-correlation-id - Enrich logs with a unique ID so you can track logs for specific requests. PragmaticFlow/Serilog.Sinks.SpectreConsole serilog/serilog-expressions - An embeddable mini-language for filtering, enriching, and formatting Serilog events, ideal for use with JSON or XML configuration. serilog/serilog-sinks-console serilog/serilog-sinks-elasticsearch - A Serilog sink that writes events to Elasticsearch yorchideas/Serilog.Sinks.Xunit2","title":"Libraries"},{"location":"logging/#samples","text":"serilog/serilog-aspnetcore jernejk/AspNetCoreSerilogExample \u21a5 Back To Top","title":"\ud83d\udd16 Samples"},{"location":"maui/","text":"MAUI \u00b6 \ud83d\udcdd Articles \u00b6 Videos \u00b6 A Journey to .NET MAUI \u21a5 Back To Top","title":"MAUI"},{"location":"maui/#maui","text":"","title":"MAUI"},{"location":"maui/#articles","text":"","title":"\ud83d\udcdd Articles"},{"location":"maui/#videos","text":"A Journey to .NET MAUI \u21a5 Back To Top","title":"Videos"},{"location":"mediator/","text":"Mediator \u00b6 Articles \u00b6 Using MediatR in ASPNET Core Apps Mediator Pattern Implemented In .NET/C# No, MediatR Didn\u2019t Run Over My Dog How to use MediatR Pipeline Behaviours Mediator Design Pattern in ASP.NET Core Response Caching with MediatR in ASP.NET Core \u2013 Powerful Pipeline Behavior MediatR Pipeline Behaviour in ASP.NET Core \u2013 Logging and Validation CQRS with MediatR in ASP.NET Core 3.1 \u2013 Ultimate Guide Videos \u00b6 Building a Mediator library in .NET from scratch Samples \u00b6 ardalis/MediatRAspNetCore Library \u00b6 dasiths/SimpleMediator - A .NET/C# implementation of the mediator pattern with support for queries, commands and events mayuanyang/Mediator.Net - A simple mediator for .Net for sending command, publishing event and request response with pipelines supported simplesoft-pt/Mediator - Small .NET library that helps with the implementation of mediator pattern for commands, events and queries gautema/CQRSlite - A lightweight framework to help creating CQRS and Eventsourcing applications in C# martinothamar/Mediator - A high performance implementation of Mediator pattern in .NET using source generators.","title":"Mediator"},{"location":"mediator/#mediator","text":"","title":"Mediator"},{"location":"mediator/#articles","text":"Using MediatR in ASPNET Core Apps Mediator Pattern Implemented In .NET/C# No, MediatR Didn\u2019t Run Over My Dog How to use MediatR Pipeline Behaviours Mediator Design Pattern in ASP.NET Core Response Caching with MediatR in ASP.NET Core \u2013 Powerful Pipeline Behavior MediatR Pipeline Behaviour in ASP.NET Core \u2013 Logging and Validation CQRS with MediatR in ASP.NET Core 3.1 \u2013 Ultimate Guide","title":"Articles"},{"location":"mediator/#videos","text":"Building a Mediator library in .NET from scratch","title":"Videos"},{"location":"mediator/#samples","text":"ardalis/MediatRAspNetCore","title":"Samples"},{"location":"mediator/#library","text":"dasiths/SimpleMediator - A .NET/C# implementation of the mediator pattern with support for queries, commands and events mayuanyang/Mediator.Net - A simple mediator for .Net for sending command, publishing event and request response with pipelines supported simplesoft-pt/Mediator - Small .NET library that helps with the implementation of mediator pattern for commands, events and queries gautema/CQRSlite - A lightweight framework to help creating CQRS and Eventsourcing applications in C# martinothamar/Mediator - A high performance implementation of Mediator pattern in .NET using source generators.","title":"Library"},{"location":"middleware/","text":"Middleware \u00b6 \ud83d\udcdd Articles \u00b6 DEEP DIVE: HOW IS THE ASP.NET CORE MIDDLEWARE PIPELINE BUILT? ASP.NET Core Middleware Understanding your middleware pipeline with the Middleware Analysis package Exploring IStartupFilter in ASP.NET Core Creating an endpoint from multiple middleware in ASP.NET Core 3.x Converting a terminal middleware to endpoint routing in ASP.NET Core 3.0 Middlewares Customizing ASP.\u200bNET Core Part 06: Middlewares Styles of Writing ASP.NET Core Middleware Middleware vs Filters ASP. NET Core Exploring Middleware as MVC Filters in ASP.NET Core 1.1 Re-reading ASP.Net Core request bodies with EnableBuffering() Using Middleware in .NET 5.0 to Log Requests and Responses Videos \u00b6 ASP.NET Monsters #91: Middleware vs. Filters \u21a5 Back To Top","title":"Middleware"},{"location":"middleware/#middleware","text":"","title":"Middleware"},{"location":"middleware/#articles","text":"DEEP DIVE: HOW IS THE ASP.NET CORE MIDDLEWARE PIPELINE BUILT? ASP.NET Core Middleware Understanding your middleware pipeline with the Middleware Analysis package Exploring IStartupFilter in ASP.NET Core Creating an endpoint from multiple middleware in ASP.NET Core 3.x Converting a terminal middleware to endpoint routing in ASP.NET Core 3.0 Middlewares Customizing ASP.\u200bNET Core Part 06: Middlewares Styles of Writing ASP.NET Core Middleware Middleware vs Filters ASP. NET Core Exploring Middleware as MVC Filters in ASP.NET Core 1.1 Re-reading ASP.Net Core request bodies with EnableBuffering() Using Middleware in .NET 5.0 to Log Requests and Responses","title":"\ud83d\udcdd Articles"},{"location":"middleware/#videos","text":"ASP.NET Monsters #91: Middleware vs. Filters \u21a5 Back To Top","title":"Videos"},{"location":"minimal-api/","text":"Minimal Api \u00b6 Articles \u00b6 Low Ceremony, High Value: A Tour of Minimal APIs in .NET 6 Minimal APIs in ASP.NET Core 6.0 Minimal APIs in ASP.NET Core 6.0 - Part2 .NET 6 Preview 4: Introducing Minimal APIs in ASP.NET Core Open API support for ASP.NET Core Minimal API Videos \u00b6 ASP.NET Community Standup - Minimal APIs Explore Minimal APIs with Maria Naggaga | Web Wednesday Samples \u00b6 halter73/MinimalWeather 425show/MinimalWeather dodyg/practical-aspnetcore davidfowl/CommunityStandUpMinimalAPI DamianEdwards/MinimalApiPlayground oskardudycz/EventSourcing.NetCore/tree/main/Sample/Warehouse bradygaster/minimalApiWithSwagger DamianEdwards/MinimalApiPlayground jaliyaudagedara/minimal-api dotnet-labs/Minimal-URL-Shortener","title":"Minimal API"},{"location":"minimal-api/#minimal-api","text":"","title":"Minimal Api"},{"location":"minimal-api/#articles","text":"Low Ceremony, High Value: A Tour of Minimal APIs in .NET 6 Minimal APIs in ASP.NET Core 6.0 Minimal APIs in ASP.NET Core 6.0 - Part2 .NET 6 Preview 4: Introducing Minimal APIs in ASP.NET Core Open API support for ASP.NET Core Minimal API","title":"Articles"},{"location":"minimal-api/#videos","text":"ASP.NET Community Standup - Minimal APIs Explore Minimal APIs with Maria Naggaga | Web Wednesday","title":"Videos"},{"location":"minimal-api/#samples","text":"halter73/MinimalWeather 425show/MinimalWeather dodyg/practical-aspnetcore davidfowl/CommunityStandUpMinimalAPI DamianEdwards/MinimalApiPlayground oskardudycz/EventSourcing.NetCore/tree/main/Sample/Warehouse bradygaster/minimalApiWithSwagger DamianEdwards/MinimalApiPlayground jaliyaudagedara/minimal-api dotnet-labs/Minimal-URL-Shortener","title":"Samples"},{"location":"ml-net/","text":"ML.Net \u00b6 Resources \u00b6 microsoft/ML-For-Beginners - 12 weeks, 24 lessons, classic Machine Learning for all","title":"ML.Net"},{"location":"ml-net/#mlnet","text":"","title":"ML.Net"},{"location":"ml-net/#resources","text":"microsoft/ML-For-Beginners - 12 weeks, 24 lessons, classic Machine Learning for all","title":"Resources"},{"location":"nuget/","text":"Nuget \u00b6 Articles \u00b6 Add a README to Your NuGet Package NuGetizer as an alternative to .NET SDK Pack","title":"Nuget"},{"location":"nuget/#nuget","text":"","title":"Nuget"},{"location":"nuget/#articles","text":"Add a README to Your NuGet Package NuGetizer as an alternative to .NET SDK Pack","title":"Articles"},{"location":"odata/","text":"OData \u00b6 Videos \u00b6 OData NxT 001: Project Proposal OData NxT 002: OData Queries Deep Dive Enabling OData in ASP.NET 6.0","title":"OData"},{"location":"odata/#odata","text":"","title":"OData"},{"location":"odata/#videos","text":"OData NxT 001: Project Proposal OData NxT 002: OData Queries Deep Dive Enabling OData in ASP.NET 6.0","title":"Videos"},{"location":"options-pattern/","text":"Options Pattern \u00b6 \ud83d\udcdd Articles \u00b6 Options pattern in ASP.NET Core How to use the IOptions pattern for configuration in ASP.NET Core RC2 Access services inside ConfigureServices using IConfigureOptions in ASP.NET Core ASP.NET Core IOptions Configuration Options Pattern in .NET Core \u21a5 Back To Top","title":"Options Pattern"},{"location":"options-pattern/#options-pattern","text":"","title":"Options Pattern"},{"location":"options-pattern/#articles","text":"Options pattern in ASP.NET Core How to use the IOptions pattern for configuration in ASP.NET Core RC2 Access services inside ConfigureServices using IConfigureOptions in ASP.NET Core ASP.NET Core IOptions Configuration Options Pattern in .NET Core \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"orleans/","text":"Orleans \u00b6 \ud83d\udcf9 Videos \u00b6 On .NET Live - Deep Dive into Microsoft Orleans Introduction to Microsoft Orleans - CodeWithStu Building real applications with Orleans An Introduction to Orleans Clustering in Orleans","title":"Orleans"},{"location":"orleans/#orleans","text":"","title":"Orleans"},{"location":"orleans/#videos","text":"On .NET Live - Deep Dive into Microsoft Orleans Introduction to Microsoft Orleans - CodeWithStu Building real applications with Orleans An Introduction to Orleans Clustering in Orleans","title":"\ud83d\udcf9 Videos"},{"location":"others/","text":"Others \u00b6 Resources \u00b6 bharatdwarkani/awesome-libraries-to-build-sass-application-dotnet-core bharatdwarkani/awesome-dotnet-core-applications thangchung/awesome-dotnet-core .NET Open Source Developer Projects tallesl/net-libraries-that-make-your-life-easier Samples \u00b6 Samples for ASP.NET Core 5.0 (331) \ud83d\udcdd Articles \u00b6 Building a social media platform without going bankrupt Part I\u2013Laying the numbers Building a social media platform without going bankrupt Part II\u2013Accepting posts Building a social media platform without going bankrupt Part III\u2013Reading posts Building a social media platform without going bankrupt Part IV\u2013Caching and distribution Building a social media platform without going bankrupt Part V\u2013Handling the timeline Building a social media platform without going bankrupt Part VI\u2013Dealing with edits and deletions Building a social media platform without going bankrupt Part VII\u2013Counting views, replies and likes Building a social media platform without going bankrupt Part VIII\u2013Tagging and searching Building a social media platform without going bankrupt Part IX\u2013Dealing with the past Books \u00b6 Microsoft .Net Ebooks \u21a5 Back To Top","title":"Others"},{"location":"others/#others","text":"","title":"Others"},{"location":"others/#resources","text":"bharatdwarkani/awesome-libraries-to-build-sass-application-dotnet-core bharatdwarkani/awesome-dotnet-core-applications thangchung/awesome-dotnet-core .NET Open Source Developer Projects tallesl/net-libraries-that-make-your-life-easier","title":"Resources"},{"location":"others/#samples","text":"Samples for ASP.NET Core 5.0 (331)","title":"Samples"},{"location":"others/#articles","text":"Building a social media platform without going bankrupt Part I\u2013Laying the numbers Building a social media platform without going bankrupt Part II\u2013Accepting posts Building a social media platform without going bankrupt Part III\u2013Reading posts Building a social media platform without going bankrupt Part IV\u2013Caching and distribution Building a social media platform without going bankrupt Part V\u2013Handling the timeline Building a social media platform without going bankrupt Part VI\u2013Dealing with edits and deletions Building a social media platform without going bankrupt Part VII\u2013Counting views, replies and likes Building a social media platform without going bankrupt Part VIII\u2013Tagging and searching Building a social media platform without going bankrupt Part IX\u2013Dealing with the past","title":"\ud83d\udcdd Articles"},{"location":"others/#books","text":"Microsoft .Net Ebooks \u21a5 Back To Top","title":"Books"},{"location":"package-versioning/","text":"Package Versioning \u00b6 Articles \u00b6 Practical vs. Strict Semantic Versioning \ud83d\udcf9 Videos \u00b6 Streamlining package versioning with MinVer","title":"Package Versioning"},{"location":"package-versioning/#package-versioning","text":"","title":"Package Versioning"},{"location":"package-versioning/#articles","text":"Practical vs. Strict Semantic Versioning","title":"Articles"},{"location":"package-versioning/#videos","text":"Streamlining package versioning with MinVer","title":"\ud83d\udcf9 Videos"},{"location":"performance/","text":"Performance \u00b6 Resources \u00b6 awesome-dot-net-performance Adam Sitnik Blog Marc Gravell Blog SERIES: WRITING HIGH-PERFORMANCE C# AND .NET CODE \ud83d\udcdd Articles \u00b6 ASP.NET Core Performance Best Practices Memory management and garbage collection (GC) in ASP.NET Core ASP.NET Core load/stress testing Span Part 1: Motivations for Writing High-Performance C# Code Part 2: Introduction to Benchmarking C# Code with Benchmark .NET Part 3: An Introduction to Optimising Code Using Span Part 4: Creating Strings with No Allocation Overhead Using String.Create Part 5: Profiling .NET Core Memory Traffic using JetBrains dotMemory Part 6: Interpreting the .NET Core Memory Timeline in JetBrains dotMemory Part 7: Analysing the Large Object Heap in JetBrains dotMemory Why is your ASP.NET server so slow? 10 problems and solutions 14 to 2 seconds: how I improved the performance of an endpoint by 82% - part 2 14 to 2 seconds: how I improved the performance of an endpoint by 82% - part 2 Find, Fix, and Avoid Memory Leaks in C# .NET: 8 Best Practices Top 5 .NET memory management fundamentals .NET Memory Management Concepts Scalable and Performant ASP.NET Core Web APIs: Asynchronous Code Scalable and Performant ASP.NET Core Web APIs: Profiling and Monitoring Scalable and Performant ASP.NET Core Web APIs: Server Caching Investigate memory issues with ease \u2013 Introducing real-time inspections in dotMemory Allocation Analysis How to use Span and Memory Improving .NET Application Performance - Series Improving .NET Application Performance Improving .NET Application Performance Part 2: Application Engineering and Design Improving .NET Application Performance Part 3: Class Design Considerations Improving .NET Application Performance Part 4: Garbage Collection Exceptions and Performance Performance Tuning for .NET Core Performance best practices in C# Videos \u00b6 We Should Become Good at Optimizing our Code - Denis Bakhvalov C# 7.2: Understanding Span Turbocharged: Writing High-performance C# and .NET code, by Steve Gordon Connect; 2017 C# 7 2 Understanding Span A (brief) overview of Span\u2264T\u2265 - David Wengier Jeffrey Richter \u00abEfficient Buffer Manipulation using C# 7.2\u2019s Span\u00bb High-performance code design patterns in C#. Konrad Kokosa .NET Fest 2019 Writing Allocation Free Code in C# - Matt Ellis Writing Allocation Free Code in C# The hidden cost of Exceptions in .NET https://www.youtube.com/watch?v=isK8Cel3HP0 Library \u00b6 stackify-prefix Books \u00b6 Pro .NET Memory Management: For Better Code, Performance, and Scalability Writing High-Performance .NET Code \u21a5 Back To Top","title":"Performance"},{"location":"performance/#performance","text":"","title":"Performance"},{"location":"performance/#resources","text":"awesome-dot-net-performance Adam Sitnik Blog Marc Gravell Blog SERIES: WRITING HIGH-PERFORMANCE C# AND .NET CODE","title":"Resources"},{"location":"performance/#articles","text":"ASP.NET Core Performance Best Practices Memory management and garbage collection (GC) in ASP.NET Core ASP.NET Core load/stress testing Span Part 1: Motivations for Writing High-Performance C# Code Part 2: Introduction to Benchmarking C# Code with Benchmark .NET Part 3: An Introduction to Optimising Code Using Span Part 4: Creating Strings with No Allocation Overhead Using String.Create Part 5: Profiling .NET Core Memory Traffic using JetBrains dotMemory Part 6: Interpreting the .NET Core Memory Timeline in JetBrains dotMemory Part 7: Analysing the Large Object Heap in JetBrains dotMemory Why is your ASP.NET server so slow? 10 problems and solutions 14 to 2 seconds: how I improved the performance of an endpoint by 82% - part 2 14 to 2 seconds: how I improved the performance of an endpoint by 82% - part 2 Find, Fix, and Avoid Memory Leaks in C# .NET: 8 Best Practices Top 5 .NET memory management fundamentals .NET Memory Management Concepts Scalable and Performant ASP.NET Core Web APIs: Asynchronous Code Scalable and Performant ASP.NET Core Web APIs: Profiling and Monitoring Scalable and Performant ASP.NET Core Web APIs: Server Caching Investigate memory issues with ease \u2013 Introducing real-time inspections in dotMemory Allocation Analysis How to use Span and Memory Improving .NET Application Performance - Series Improving .NET Application Performance Improving .NET Application Performance Part 2: Application Engineering and Design Improving .NET Application Performance Part 3: Class Design Considerations Improving .NET Application Performance Part 4: Garbage Collection Exceptions and Performance Performance Tuning for .NET Core Performance best practices in C#","title":"\ud83d\udcdd Articles"},{"location":"performance/#videos","text":"We Should Become Good at Optimizing our Code - Denis Bakhvalov C# 7.2: Understanding Span Turbocharged: Writing High-performance C# and .NET code, by Steve Gordon Connect; 2017 C# 7 2 Understanding Span A (brief) overview of Span\u2264T\u2265 - David Wengier Jeffrey Richter \u00abEfficient Buffer Manipulation using C# 7.2\u2019s Span\u00bb High-performance code design patterns in C#. Konrad Kokosa .NET Fest 2019 Writing Allocation Free Code in C# - Matt Ellis Writing Allocation Free Code in C# The hidden cost of Exceptions in .NET https://www.youtube.com/watch?v=isK8Cel3HP0","title":"Videos"},{"location":"performance/#library","text":"stackify-prefix","title":"Library"},{"location":"performance/#books","text":"Pro .NET Memory Management: For Better Code, Performance, and Scalability Writing High-Performance .NET Code \u21a5 Back To Top","title":"Books"},{"location":"razor-pages/","text":"Razor Pages \u00b6 \ud83d\udcdd Articles \u00b6 Razor Pages for HTML Controllers for APIs - Scott Allen Separating concerns using Razor Pages - Jon Hilton MVC vs Razor Pages A quick comparison - Jon Hilton Applying the MVC design pattern to Razor Pages - Andrew Lock MSDN \u2013 Feature Slices for ASPNET Core MVC - Steve Smith Feature Slices for ASP.NET Core MVC - Steve Smith ASPNET Core Razor Pages \u2013 Worth Checking Out? Simpler ASP.NET MVC Apps with Razor Pages \ud83d\udcf9 Videos \u00b6 Introduction to ASP.NET Core Razor Pages ASP.NET Core Series MVC and Razor Pages \ud83d\udd16 Samples \u00b6 https://github.com/ardalis/OrganizingAspNetCore - Steve Smith https://github.com/jbogard/ContosoUniversityDotNetCore-Pages","title":"Razor Pages"},{"location":"razor-pages/#razor-pages","text":"","title":"Razor Pages"},{"location":"razor-pages/#articles","text":"Razor Pages for HTML Controllers for APIs - Scott Allen Separating concerns using Razor Pages - Jon Hilton MVC vs Razor Pages A quick comparison - Jon Hilton Applying the MVC design pattern to Razor Pages - Andrew Lock MSDN \u2013 Feature Slices for ASPNET Core MVC - Steve Smith Feature Slices for ASP.NET Core MVC - Steve Smith ASPNET Core Razor Pages \u2013 Worth Checking Out? Simpler ASP.NET MVC Apps with Razor Pages","title":"\ud83d\udcdd Articles"},{"location":"razor-pages/#videos","text":"Introduction to ASP.NET Core Razor Pages ASP.NET Core Series MVC and Razor Pages","title":"\ud83d\udcf9 Videos"},{"location":"razor-pages/#samples","text":"https://github.com/ardalis/OrganizingAspNetCore - Steve Smith https://github.com/jbogard/ContosoUniversityDotNetCore-Pages","title":"\ud83d\udd16 Samples"},{"location":"resiliency/","text":"Resiliency \u00b6 Articles \u00b6 Simmy, the monkey for making chaos Building resilient applications with Polly Simmy Chaos Engine for .NET \u2013 Part 1, Injecting Faults Simmy Chaos Engine for .NET \u2013 Part 2, Resilience and Injected Faults Simmy Chaos Engine for .NET \u2013 Part 3, Adding Latency Chaos Engineering your .NET applications using Simmy Library \u00b6 App-vNext/Polly - Polly is a .NET resilience and transient-fault-handling library that allows developers to express policies such as Retry, Circuit Breaker, Timeout, Bulkhead Isolation, and Fallback in a fluent and thread-safe manner. From version 6.0.1, Polly targets .NET Standard 1.1 and 2.0+. Polly-Contrib/Simmy - Simmy is a chaos-engineering and fault-injection tool, integrating with the Polly resilience project for .NET","title":"Resiliency"},{"location":"resiliency/#resiliency","text":"","title":"Resiliency"},{"location":"resiliency/#articles","text":"Simmy, the monkey for making chaos Building resilient applications with Polly Simmy Chaos Engine for .NET \u2013 Part 1, Injecting Faults Simmy Chaos Engine for .NET \u2013 Part 2, Resilience and Injected Faults Simmy Chaos Engine for .NET \u2013 Part 3, Adding Latency Chaos Engineering your .NET applications using Simmy","title":"Articles"},{"location":"resiliency/#library","text":"App-vNext/Polly - Polly is a .NET resilience and transient-fault-handling library that allows developers to express policies such as Retry, Circuit Breaker, Timeout, Bulkhead Isolation, and Fallback in a fluent and thread-safe manner. From version 6.0.1, Polly targets .NET Standard 1.1 and 2.0+. Polly-Contrib/Simmy - Simmy is a chaos-engineering and fault-injection tool, integrating with the Polly resilience project for .NET","title":"Library"},{"location":"rest/","text":"REST \u00b6 Resources \u00b6 https://restfulapi.net whitehouse/api-standards \ud83d\udcdd Articles \u00b6 What is REST Microsoft REST API Guidelines Design Guidelines Web API design Richardson Maturity Model RESTful API Design: 13 Best Practices to Make Your Users Happy Best Practices for Designing a Pragmatic RESTful API Design Guidelines The Web API Checklist \u2013 43 Things To Think About When Designing, Testing, and Releasing your API Design Topics OpenAPI Specification REST lessons learned REST Architectural Constraints Caching REST API Response REST Resource Representation Compression Content Negotiation in REST APIs HATEOAS Driven REST APIs Idempotent REST APIs REST API Security Essentials REST API Versioning Statelessness in REST APIs Comparing SOAP vs REST APIs HTTP Methods HTTP Status Codes What is an API? REST \u2013 PUT vs POST HTTP Status Codes Cheatsheet Zalando RESTful API and Event Guidelines CRUD API Design & CRUD API Recommendations Videos \u00b6 How to build RESTful APIs the right way \u21a5 Back To Top","title":"REST"},{"location":"rest/#rest","text":"","title":"REST"},{"location":"rest/#resources","text":"https://restfulapi.net whitehouse/api-standards","title":"Resources"},{"location":"rest/#articles","text":"What is REST Microsoft REST API Guidelines Design Guidelines Web API design Richardson Maturity Model RESTful API Design: 13 Best Practices to Make Your Users Happy Best Practices for Designing a Pragmatic RESTful API Design Guidelines The Web API Checklist \u2013 43 Things To Think About When Designing, Testing, and Releasing your API Design Topics OpenAPI Specification REST lessons learned REST Architectural Constraints Caching REST API Response REST Resource Representation Compression Content Negotiation in REST APIs HATEOAS Driven REST APIs Idempotent REST APIs REST API Security Essentials REST API Versioning Statelessness in REST APIs Comparing SOAP vs REST APIs HTTP Methods HTTP Status Codes What is an API? REST \u2013 PUT vs POST HTTP Status Codes Cheatsheet Zalando RESTful API and Event Guidelines CRUD API Design & CRUD API Recommendations","title":"\ud83d\udcdd Articles"},{"location":"rest/#videos","text":"How to build RESTful APIs the right way \u21a5 Back To Top","title":"Videos"},{"location":"roslyn/","text":"Roslyn \u00b6 Articles \u00b6 GETTING STARTED WITH THE ROSLYN APIS: WRITING CODE WITH CODE The Roslyn analyzers I use in my projects Videos \u00b6 How to write better code in C# using Source Code Analyzers (Roslyn) A basic expression evaluator Building a Compiler Playlist - Immo Landwerth Tools \u00b6 KirillOsenkov/RoslynQuoter - Roslyn tool that for a given C# program shows syntax tree API calls to construct its syntax tree meziantou/Meziantou.Analyzer - A Roslyn analyzer to enforce some good practices in C#. chsienki/kittitas - An In-Memory version of the Roslyn compiler that can be used to debug components in the Roslyn pipeline","title":"Roslyn"},{"location":"roslyn/#roslyn","text":"","title":"Roslyn"},{"location":"roslyn/#articles","text":"GETTING STARTED WITH THE ROSLYN APIS: WRITING CODE WITH CODE The Roslyn analyzers I use in my projects","title":"Articles"},{"location":"roslyn/#videos","text":"How to write better code in C# using Source Code Analyzers (Roslyn) A basic expression evaluator Building a Compiler Playlist - Immo Landwerth","title":"Videos"},{"location":"roslyn/#tools","text":"KirillOsenkov/RoslynQuoter - Roslyn tool that for a given C# program shows syntax tree API calls to construct its syntax tree meziantou/Meziantou.Analyzer - A Roslyn analyzer to enforce some good practices in C#. chsienki/kittitas - An In-Memory version of the Roslyn compiler that can be used to debug components in the Roslyn pipeline","title":"Tools"},{"location":"routing/","text":"Routing \u00b6 \ud83d\udcdd Articles \u00b6 Routing in ASP.NET Core Generate Links To ASP.NET Core Map Endpoints Getting resource location with CreatedAtAction and CreatedAtRoute action results Web API Routing Routing in ASP.NET Web API Routing and Action Selection in ASP.NET Web API Attribute Routing in ASP.NET Web API 2 Create a REST API with Attribute Routing in ASP.NET Web API 2 Inserting middleware between UseRouting() and UseEndpoints() as a library author - Part 1 Inserting middleware between UseRouting() and UseEndpoints() as a library author - Part 2 Use ASP.NET Core route-to-code for simple JSON APIs Basic JSON APIs with Route-to-code in ASP.NET Core Using action results and content negotiation with \u201croute-to-code\u201d APIs ASP.NET Core 5 Route to Code: Taking advantage of Microsoft.AspNetCore.Http json extensions Videos \u00b6 ASP.NET Core Series: Route To Code ASP.NET Core Series: Endpoint Routing \u21a5 Back To Top","title":"Routing"},{"location":"routing/#routing","text":"","title":"Routing"},{"location":"routing/#articles","text":"Routing in ASP.NET Core Generate Links To ASP.NET Core Map Endpoints Getting resource location with CreatedAtAction and CreatedAtRoute action results Web API Routing Routing in ASP.NET Web API Routing and Action Selection in ASP.NET Web API Attribute Routing in ASP.NET Web API 2 Create a REST API with Attribute Routing in ASP.NET Web API 2 Inserting middleware between UseRouting() and UseEndpoints() as a library author - Part 1 Inserting middleware between UseRouting() and UseEndpoints() as a library author - Part 2 Use ASP.NET Core route-to-code for simple JSON APIs Basic JSON APIs with Route-to-code in ASP.NET Core Using action results and content negotiation with \u201croute-to-code\u201d APIs ASP.NET Core 5 Route to Code: Taking advantage of Microsoft.AspNetCore.Http json extensions","title":"\ud83d\udcdd Articles"},{"location":"routing/#videos","text":"ASP.NET Core Series: Route To Code ASP.NET Core Series: Endpoint Routing \u21a5 Back To Top","title":"Videos"},{"location":"rx/","text":"Rx.Net \u00b6 Articles \u00b6 Reactive Extensions (Rx) - Part 1 - Replacing C# Events","title":"Rx.Net"},{"location":"rx/#rxnet","text":"","title":"Rx.Net"},{"location":"rx/#articles","text":"Reactive Extensions (Rx) - Part 1 - Replacing C# Events","title":"Articles"},{"location":"serialization/","text":"Serialization \u00b6 \ud83d\udcdd Articles \u00b6 Use Newtonsoft\u2019s Json.NET instead of System.Text.Json in ASP.NET Core 3+ MVC projects The Battle of C# to JSON Serializers in .NET Core 3 Try the new System.Text.Json APIs How to serialize and deserialize (marshal and unmarshal) JSON in .NET How to migrate from Newtonsoft.Json to System.Text.Json Polymorphic deserialization with System.Text.Json Using MessagePack with ASP.NET Core MVC Using MessagePack with ASP.NET Core WebAPI Fixing JSON Self Referencing Loop Exceptions A Brief Comparison Between Newtonsoft.Json and System.Text.Json What Those Benchmarks Of System.Text.Json Don\u2019t Mention How to migrate from Newtonsoft.Json to System.Text.Json How To Parse JSON In .NET Core Using Newtonsoft.Json In .NET Core 3+ Projects A comparison of Newtonsoft.Json and System.Text.Json Private setters in Json.Net Working with private setters in Json.NET How to use private setters with NewtonSoftJson Newtonsoft Json \u2013 Deserializing objects that have private setters Private setters in Json.Net Json.Net - private setters JSON.NET\u2013Resolve private setters Serialize a string value without quotes in ASP.NET with Json.NET JsonSerializationException: Self referencing loop detected error \u2013 How to fix Adding Newtonsoft JSON serialization and deserialization in ASP.NET Core How to create Custom Converters for JSON serialization in .NET with example System.Text.Json \u2013 Serialization and Deserialization in .NET Core SENDING AND RECEIVING JSON USING HTTPCLIENT WITH SYSTEM.NET.HTTP.JSON System.Text.Json and Newtonsoft.Json side-by-side in ASP.NET Core JSON.net: how to deserialize without using the default constructor? Utf8Json Media Formatters for ASP.Net Core Json.net also tricked me Try the new System.Text.Json source generator Videos \u00b6 Fast and efficient data serialisation with Protocol buffers (protobuf) in .NET The fastest way to work with JSON in .NET Step by Step Tutorial: Deserializing JSON using c# and json.net Library \u00b6 MessagePack-CSharp - Extremely Fast MessagePack Serializer for C#(.NET, .NET Core, Unity, Xamarin). / msgpack.org[C#] Utf8Json - Definitely Fastest and Zero Allocation JSON Serializer for C#(NET, .NET Core, Unity, Xamarin). neuecc/MessagePack-CSharp protobuf-net/protobuf-net - Protocol Buffers library for idiomatic .NET protocolbuffers/protobuf - Protocol Buffers - Google\u2019s data interchange format \u21a5 Back To Top","title":"Serialization"},{"location":"serialization/#serialization","text":"","title":"Serialization"},{"location":"serialization/#articles","text":"Use Newtonsoft\u2019s Json.NET instead of System.Text.Json in ASP.NET Core 3+ MVC projects The Battle of C# to JSON Serializers in .NET Core 3 Try the new System.Text.Json APIs How to serialize and deserialize (marshal and unmarshal) JSON in .NET How to migrate from Newtonsoft.Json to System.Text.Json Polymorphic deserialization with System.Text.Json Using MessagePack with ASP.NET Core MVC Using MessagePack with ASP.NET Core WebAPI Fixing JSON Self Referencing Loop Exceptions A Brief Comparison Between Newtonsoft.Json and System.Text.Json What Those Benchmarks Of System.Text.Json Don\u2019t Mention How to migrate from Newtonsoft.Json to System.Text.Json How To Parse JSON In .NET Core Using Newtonsoft.Json In .NET Core 3+ Projects A comparison of Newtonsoft.Json and System.Text.Json Private setters in Json.Net Working with private setters in Json.NET How to use private setters with NewtonSoftJson Newtonsoft Json \u2013 Deserializing objects that have private setters Private setters in Json.Net Json.Net - private setters JSON.NET\u2013Resolve private setters Serialize a string value without quotes in ASP.NET with Json.NET JsonSerializationException: Self referencing loop detected error \u2013 How to fix Adding Newtonsoft JSON serialization and deserialization in ASP.NET Core How to create Custom Converters for JSON serialization in .NET with example System.Text.Json \u2013 Serialization and Deserialization in .NET Core SENDING AND RECEIVING JSON USING HTTPCLIENT WITH SYSTEM.NET.HTTP.JSON System.Text.Json and Newtonsoft.Json side-by-side in ASP.NET Core JSON.net: how to deserialize without using the default constructor? Utf8Json Media Formatters for ASP.Net Core Json.net also tricked me Try the new System.Text.Json source generator","title":"\ud83d\udcdd Articles"},{"location":"serialization/#videos","text":"Fast and efficient data serialisation with Protocol buffers (protobuf) in .NET The fastest way to work with JSON in .NET Step by Step Tutorial: Deserializing JSON using c# and json.net","title":"Videos"},{"location":"serialization/#library","text":"MessagePack-CSharp - Extremely Fast MessagePack Serializer for C#(.NET, .NET Core, Unity, Xamarin). / msgpack.org[C#] Utf8Json - Definitely Fastest and Zero Allocation JSON Serializer for C#(NET, .NET Core, Unity, Xamarin). neuecc/MessagePack-CSharp protobuf-net/protobuf-net - Protocol Buffers library for idiomatic .NET protocolbuffers/protobuf - Protocol Buffers - Google\u2019s data interchange format \u21a5 Back To Top","title":"Library"},{"location":"signalr/","text":"SignalR \u00b6 \ud83d\udcdd Articles \u00b6 Use streaming in ASP.NET Core SignalR Real-time Web Applications with SignalR in ASP.NET Core 3.1 \ud83d\udcf9 Videos \u00b6 Asp.Net Core WebSockets Vs SignalR. Which should you use? \u21a5 Back To Top","title":"SignalR"},{"location":"signalr/#signalr","text":"","title":"SignalR"},{"location":"signalr/#articles","text":"Use streaming in ASP.NET Core SignalR Real-time Web Applications with SignalR in ASP.NET Core 3.1","title":"\ud83d\udcdd Articles"},{"location":"signalr/#videos","text":"Asp.Net Core WebSockets Vs SignalR. Which should you use? \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"source-generators/","text":"Source Generators \u00b6 Resources \u00b6 amis92/csharp-source-generators - A list of C# Source Generators (not necessarily awesome) and associated resources: articles, talks, demos. Source Generators Cookbook Source Generators davidwengier/SourceGeneratorPlayground - The source code for https://sourcegen.dev - The C# Source Generator Playground \ud83d\udcdd Articles \u00b6 Strongly-typed Ids using C# Source Generators - G\u00e9rald Barr\u00e9 Introducing C# Source Generators - DevBlogs Source Generators - real world example .NET 5 Source Generators Jump Start Source Generators in .NET 5 with ReSharper API Client with C# Source Generators Try the new System.Text.Json source generator Videos \u00b6 How to bend reality to your will with C# Source Generators C# Source Generators - Write code that writes code - David Wengier C# Source Generators - Write Code that Writes Code C# Source Generators Better C# - Source Generators Episode 21: Roslyn Source Generators C# Source Generators in Action, by Andrey Dyatlov Samples \u00b6 davidwengier/SourceGeneratorTemplate - A basic template for writing a C# source generator dotnet/roslyn-sdk/tree/main/samples/CSharp/SourceGenerators edumentab/SourceGenerator-MediatR-CQRS Libraries \u00b6 YairHalberstadt/stronginject - compile time dependency injection for .NET pakrym/jab - C# Source Generator based dependency injection container implementation. martinothamar/WrapperValueObject - A .NET source generator for creating simple value objects wrapping primitive types. excubo-ag/Generators.Blazor martinothamar/Mediator - A high performance implementation of Mediator pattern in .NET using source generators. chsienki/kittitas - An In-Memory version of the Roslyn compiler that can be used to debug components in the Roslyn pipeline ashmind/SharpLab - .NET language playground kostya9/ApiClientGenerator meziantou/Meziantou.Framework.StronglyTypedId \u21a5 Back To Top","title":"Source Generators"},{"location":"source-generators/#source-generators","text":"","title":"Source Generators"},{"location":"source-generators/#resources","text":"amis92/csharp-source-generators - A list of C# Source Generators (not necessarily awesome) and associated resources: articles, talks, demos. Source Generators Cookbook Source Generators davidwengier/SourceGeneratorPlayground - The source code for https://sourcegen.dev - The C# Source Generator Playground","title":"Resources"},{"location":"source-generators/#articles","text":"Strongly-typed Ids using C# Source Generators - G\u00e9rald Barr\u00e9 Introducing C# Source Generators - DevBlogs Source Generators - real world example .NET 5 Source Generators Jump Start Source Generators in .NET 5 with ReSharper API Client with C# Source Generators Try the new System.Text.Json source generator","title":"\ud83d\udcdd Articles"},{"location":"source-generators/#videos","text":"How to bend reality to your will with C# Source Generators C# Source Generators - Write code that writes code - David Wengier C# Source Generators - Write Code that Writes Code C# Source Generators Better C# - Source Generators Episode 21: Roslyn Source Generators C# Source Generators in Action, by Andrey Dyatlov","title":"Videos"},{"location":"source-generators/#samples","text":"davidwengier/SourceGeneratorTemplate - A basic template for writing a C# source generator dotnet/roslyn-sdk/tree/main/samples/CSharp/SourceGenerators edumentab/SourceGenerator-MediatR-CQRS","title":"Samples"},{"location":"source-generators/#libraries","text":"YairHalberstadt/stronginject - compile time dependency injection for .NET pakrym/jab - C# Source Generator based dependency injection container implementation. martinothamar/WrapperValueObject - A .NET source generator for creating simple value objects wrapping primitive types. excubo-ag/Generators.Blazor martinothamar/Mediator - A high performance implementation of Mediator pattern in .NET using source generators. chsienki/kittitas - An In-Memory version of the Roslyn compiler that can be used to debug components in the Roslyn pipeline ashmind/SharpLab - .NET language playground kostya9/ApiClientGenerator meziantou/Meziantou.Framework.StronglyTypedId \u21a5 Back To Top","title":"Libraries"},{"location":"validation/","text":"Validation \u00b6 \ud83d\udcdd Articles \u00b6 Cool validation with FluentValidation Custom Validation in ASP.NET Web API with FluentValidation Library \u00b6 GuardClauses > A simple package with guard clause extensions.","title":"Validation"},{"location":"validation/#validation","text":"","title":"Validation"},{"location":"validation/#articles","text":"Cool validation with FluentValidation Custom Validation in ASP.NET Web API with FluentValidation","title":"\ud83d\udcdd Articles"},{"location":"validation/#library","text":"GuardClauses > A simple package with guard clause extensions.","title":"Library"},{"location":"web-api/","text":"WEB API \u00b6 Resources \u00b6 oskardudycz/WebApiWith.NETCore - Samples and resources of how to design WebApi with .NET Core REST API Tutorial Let\u2019s Learn .NET - Web API .NET 5 REST API Tutorial Beginner\u2019s Series to: Web APIs marmelab/awesome-rest ASP.NET CORE Web API / REST API \ud83d\udcdd Articles \u00b6 Microsoft REST API Guidelines Web API design ASP.NET Core 5 Route to Code: Taking advantage of Microsoft.AspNetCore.Http json extensions Use ASP.NET Core route-to-code for simple JSON APIs Nano services with ASP.NET Core or how to build a light API Basic JSON APIs with Route-to-code in ASP.NET Core Using action results and content negotiation with \u201croute-to-code\u201d APIs Model Binding - ASP.NET Core Demystified Beautiful and compact Web APIs with C# 9, .NET 5.0 and ASP.NET Core Building microservices with ASP.NET Core (without MVC) Finally the ASP.NET 5 Web API Blog Series! ASP.NET Core in .NET 5 \u2013 pass parameters to actions Model Binding in ASP.NET Core Custom Model Binding in ASP.NET Core Asp.Net Core Model Binding: Controlling The Binding Source Use ASP.NET Core route-to-code for simple JSON APIs Using action results and content negotiation with route-to-code APIs Creating Discoverable HTTP APIs with ASP.NET Core 5 Web API Open source HTTP API packages and tools - Microsoft MVC Controllers are Dinosaurs Embrace API Endpoints Moving from Controllers and Actions to Endpoints with MediatR - Steve Smith MVC Controllers are Dinosaurs - Embrace API Endpoints - Steve Smith Feature Slices for ASP.NET Core MVC - Steve Smith API Feature Folders What is the difference between a DTO and a POCO (or POJO) Give better names to your DTOs Immutability in DTOs? Immutability in C# Trying the REST Client extension for VSCode ASPNET Core Razor Pages \u2013 Worth Checking Out? How To Build A Basic HTTP API With ASP.NET Core Richardson Maturity Model RESTful API Design: 13 Best Practices to Make Your Users Happy Best Practices for Designing a Pragmatic RESTful API The Web API Checklist \u2013 43 Things To Think About When Designing, Testing, and Releasing your API Design Topics Design Guidelines 14 to 2 seconds: how I improved the performance of an endpoint by 82% - part 1 14 to 2 seconds: how I improved the performance of an endpoint by 82% - part 2 How to Ping an endpoint with C# Generic and dynamically generated controllers in ASP.NET Core MVC Using HTTP Methods (GET, POST, PUT, etc.) in Web API Routing in ASP.NET Web API Routing and Action Selection in ASP.NET Web API Attribute Routing in ASP.NET Web API 2 Create a REST API with Attribute Routing in ASP.NET Web API 2 The ASP.NET Web API 2 HTTP Message Lifecycle in 43 Easy Steps HTTP Status Codes in ASP.NET Web API - A Guided Tour Preventing fat/bloated/god controllers by following a simple endpoint pattern Scalable and Performant ASP.NET Core Web APIs: Asynchronous Code Scalable and Performant ASP.NET Core Web APIs: Introduction Scalable and Performant ASP.NET Core Web APIs: Profiling and Monitoring Scalable and Performant ASP.NET Core Web APIs: Server Caching Enabling [ApiController] globally in ASP.NET Core 2.2 Elegant way of producing HTTP responses in ASP.NET Core outside of MVC controllers Fetch API, Streams API, NDJSON, and ASP.NET Core MVC Accepting Raw Request Body Content in ASP.NET Core API Controllers Passing correlation id across requests ASP.NET CORE CORRELATION IDS Asynchronous Programming with Async and Await in ASP.NET Core Preventing Duplicate Web Requests To ASP.NET Core Using Refit in ASP.NET Core to remove boilerplate code when consuming REST endpoints Refit Basics Idempotency for Fault-Tolerant Web APIs \ud83d\udcf9 Videos \u00b6 ASP.NET Core Series Route to Code NET Core 3.1 MVC REST API - Full Course Updating ASP.NET Core ApiEndpoints package and Fixing Dependent Projects - Steve Smith ASP.NET Community Standup Flexible HTTP APIs Let\u2019s Learn .NET - Web API ASP.NET Community Standup - Building HTTP APIs Integrating PowerApps with .NET Web APIs BEYOND Status Codes! Better REST HTTP API Error Responses Build an API Gateway with Envoy and use with .NET Core APIs Hiding ASP.NET API Endpoints MVC REST API Tutorial in 5 Hours | ASP.NET CORE Web API | Tutorial | .NET 5 Why Asynchronous Web API Endpoints | RESTful | async await ASP.NET CORE Web API / REST API - Frank Liu, Yuotube Playlist Best Practices for Building Async APIs with ASP.NET Core Building an Async API with ASP.NET Core ASP.NET Core Series: Route To Code ASP.NET Core Series: Endpoint Routing .NET 5 REST API Tutorial - Build From Scratch With C# .NET 5 REST API Tutorial Creating an API SDK with Refit | ASP.NET Core 5 REST API Tutorial 23 How to build RESTful APIs the right way \ud83d\udce6 Libraries \u00b6 featherhttp/framework - A lightweight low ceremony API for web services. ardalis/ApiEndpoints - A project for supporting API Endpoints in ASP.NET Core web applications. CarterCommunity/Carter - Carter is framework that is a thin layer of extension methods and functionality over ASP.NET Core allowing code to be more explicit and most importantly more enjoyable. reactiveui/refit - The automatic type-safe REST library for .NET Core, Xamarin and .NET. Heavily inspired by Square\u2019s Retrofit library, Refit turns your REST API into a live interface. canton7/RestEase - Easy-to-use typesafe REST API client library for .NET Standard 1.1 and .NET Framework 4.5 and higher, which is simple and customisable. Inspired by Refit StefH/RestEase-Client-Generator - A Visual Studio Extension to generate a RestEase compatible client based on a Swagger / OpenAPI specification files HttpRepl - The HTTP Read-Eval-Print Loop (REPL) is a lightweight, cross-platform command-line tool that\u2019s supported everywhere .NET Core is supported and is used for making HTTP requests to test ASP.NET Core web APIs and view their results. rest-client - REST Client allows you to send HTTP request and view the response in Visual Studio Code directly. Swashbuckle.AspNetCore - Swagger tools for documenting API\u2019s built on ASP.NET Core OpenAPI.NET - The OpenAPI.NET SDK contains a useful object model for OpenAPI documents in .NET along with common serializers to extract raw OpenAPI JSON and YAML documents from the model. NSwag - The Swagger/OpenAPI toolchain for .NET, ASP.NET Core and TypeScript. Crunch.vscode-openapi - This Visual Studio Code (VS Code) extension adds rich support for the OpenAPI Specification (OAS) (formerly known as Swagger Specification) in JSON or YAML format httpstat.us - Easily generate different HTTP responses for testing beetlex-io/FastHttpApi davidfowl/uController - Code generated Web API framework for .NET Core khellang/Middleware/problemdetails - Various ASP.NET Core middleware json-api-dotnet/JsonApiDotNetCore - JSON:API Framework for ASP.NET Core dasiths/SimpleEndpoints - A simple, convention-based, endpoint per action pattern implementation for AspNetCore 3.0+ with full support for Swagge GeorgDangl/LightQuery - Lightweight solution for sorting and paging Asp.Net Core API results hassanhabib/InvisibleApi - ASP.NET Library that allows developers to add an extra layer of security on top of their existing endpoints Kahbazi/MediatR.AspNetCore.Endpoints \ud83d\udd16 Samples \u00b6 filipw/apress-recipes-webapi - Samples from ASP.NET Web API 2: Recipes book. featherhttp/tutorial - Quick tutorials on how you you can build easy web applications with FeatherHttp. Learn how to build lightweight server-side web applications filipw/net50-webapi-samples ardalis/MediatRAspNetCore - Sample showing MediatR with ASP.NET Core eShopOnWeb/PublicApi Templates \u00b6 ApiBoilerPlate - A simple yet organized project template for building ASP.NET Core APIs in .NET Core 3.1 CleanArchitecture - Clean Architecture Template for Blazor WebAssembly Built with MudBlazor Components. pdevito3/craftsman - Craftsman is the workhorse behind the Wrapt framework and provides a suite of CLI commands for quickly scaffolding out new files and projects for your .NET Web APIs with simple CLI commands and configuration files. Books \u00b6 REST API Design Rulebook The Design of Web APIs ASP.NET Web API 2: Building a REST Service from Start to Finish 2 nd ed. Edition ASP.NET Web API 2 Recipes: A Problem-Solution Approach \u21a5 Back To Top","title":"WEB API"},{"location":"web-api/#web-api","text":"","title":"WEB API"},{"location":"web-api/#resources","text":"oskardudycz/WebApiWith.NETCore - Samples and resources of how to design WebApi with .NET Core REST API Tutorial Let\u2019s Learn .NET - Web API .NET 5 REST API Tutorial Beginner\u2019s Series to: Web APIs marmelab/awesome-rest ASP.NET CORE Web API / REST API","title":"Resources"},{"location":"web-api/#articles","text":"Microsoft REST API Guidelines Web API design ASP.NET Core 5 Route to Code: Taking advantage of Microsoft.AspNetCore.Http json extensions Use ASP.NET Core route-to-code for simple JSON APIs Nano services with ASP.NET Core or how to build a light API Basic JSON APIs with Route-to-code in ASP.NET Core Using action results and content negotiation with \u201croute-to-code\u201d APIs Model Binding - ASP.NET Core Demystified Beautiful and compact Web APIs with C# 9, .NET 5.0 and ASP.NET Core Building microservices with ASP.NET Core (without MVC) Finally the ASP.NET 5 Web API Blog Series! ASP.NET Core in .NET 5 \u2013 pass parameters to actions Model Binding in ASP.NET Core Custom Model Binding in ASP.NET Core Asp.Net Core Model Binding: Controlling The Binding Source Use ASP.NET Core route-to-code for simple JSON APIs Using action results and content negotiation with route-to-code APIs Creating Discoverable HTTP APIs with ASP.NET Core 5 Web API Open source HTTP API packages and tools - Microsoft MVC Controllers are Dinosaurs Embrace API Endpoints Moving from Controllers and Actions to Endpoints with MediatR - Steve Smith MVC Controllers are Dinosaurs - Embrace API Endpoints - Steve Smith Feature Slices for ASP.NET Core MVC - Steve Smith API Feature Folders What is the difference between a DTO and a POCO (or POJO) Give better names to your DTOs Immutability in DTOs? Immutability in C# Trying the REST Client extension for VSCode ASPNET Core Razor Pages \u2013 Worth Checking Out? How To Build A Basic HTTP API With ASP.NET Core Richardson Maturity Model RESTful API Design: 13 Best Practices to Make Your Users Happy Best Practices for Designing a Pragmatic RESTful API The Web API Checklist \u2013 43 Things To Think About When Designing, Testing, and Releasing your API Design Topics Design Guidelines 14 to 2 seconds: how I improved the performance of an endpoint by 82% - part 1 14 to 2 seconds: how I improved the performance of an endpoint by 82% - part 2 How to Ping an endpoint with C# Generic and dynamically generated controllers in ASP.NET Core MVC Using HTTP Methods (GET, POST, PUT, etc.) in Web API Routing in ASP.NET Web API Routing and Action Selection in ASP.NET Web API Attribute Routing in ASP.NET Web API 2 Create a REST API with Attribute Routing in ASP.NET Web API 2 The ASP.NET Web API 2 HTTP Message Lifecycle in 43 Easy Steps HTTP Status Codes in ASP.NET Web API - A Guided Tour Preventing fat/bloated/god controllers by following a simple endpoint pattern Scalable and Performant ASP.NET Core Web APIs: Asynchronous Code Scalable and Performant ASP.NET Core Web APIs: Introduction Scalable and Performant ASP.NET Core Web APIs: Profiling and Monitoring Scalable and Performant ASP.NET Core Web APIs: Server Caching Enabling [ApiController] globally in ASP.NET Core 2.2 Elegant way of producing HTTP responses in ASP.NET Core outside of MVC controllers Fetch API, Streams API, NDJSON, and ASP.NET Core MVC Accepting Raw Request Body Content in ASP.NET Core API Controllers Passing correlation id across requests ASP.NET CORE CORRELATION IDS Asynchronous Programming with Async and Await in ASP.NET Core Preventing Duplicate Web Requests To ASP.NET Core Using Refit in ASP.NET Core to remove boilerplate code when consuming REST endpoints Refit Basics Idempotency for Fault-Tolerant Web APIs","title":"\ud83d\udcdd Articles"},{"location":"web-api/#videos","text":"ASP.NET Core Series Route to Code NET Core 3.1 MVC REST API - Full Course Updating ASP.NET Core ApiEndpoints package and Fixing Dependent Projects - Steve Smith ASP.NET Community Standup Flexible HTTP APIs Let\u2019s Learn .NET - Web API ASP.NET Community Standup - Building HTTP APIs Integrating PowerApps with .NET Web APIs BEYOND Status Codes! Better REST HTTP API Error Responses Build an API Gateway with Envoy and use with .NET Core APIs Hiding ASP.NET API Endpoints MVC REST API Tutorial in 5 Hours | ASP.NET CORE Web API | Tutorial | .NET 5 Why Asynchronous Web API Endpoints | RESTful | async await ASP.NET CORE Web API / REST API - Frank Liu, Yuotube Playlist Best Practices for Building Async APIs with ASP.NET Core Building an Async API with ASP.NET Core ASP.NET Core Series: Route To Code ASP.NET Core Series: Endpoint Routing .NET 5 REST API Tutorial - Build From Scratch With C# .NET 5 REST API Tutorial Creating an API SDK with Refit | ASP.NET Core 5 REST API Tutorial 23 How to build RESTful APIs the right way","title":"\ud83d\udcf9 Videos"},{"location":"web-api/#libraries","text":"featherhttp/framework - A lightweight low ceremony API for web services. ardalis/ApiEndpoints - A project for supporting API Endpoints in ASP.NET Core web applications. CarterCommunity/Carter - Carter is framework that is a thin layer of extension methods and functionality over ASP.NET Core allowing code to be more explicit and most importantly more enjoyable. reactiveui/refit - The automatic type-safe REST library for .NET Core, Xamarin and .NET. Heavily inspired by Square\u2019s Retrofit library, Refit turns your REST API into a live interface. canton7/RestEase - Easy-to-use typesafe REST API client library for .NET Standard 1.1 and .NET Framework 4.5 and higher, which is simple and customisable. Inspired by Refit StefH/RestEase-Client-Generator - A Visual Studio Extension to generate a RestEase compatible client based on a Swagger / OpenAPI specification files HttpRepl - The HTTP Read-Eval-Print Loop (REPL) is a lightweight, cross-platform command-line tool that\u2019s supported everywhere .NET Core is supported and is used for making HTTP requests to test ASP.NET Core web APIs and view their results. rest-client - REST Client allows you to send HTTP request and view the response in Visual Studio Code directly. Swashbuckle.AspNetCore - Swagger tools for documenting API\u2019s built on ASP.NET Core OpenAPI.NET - The OpenAPI.NET SDK contains a useful object model for OpenAPI documents in .NET along with common serializers to extract raw OpenAPI JSON and YAML documents from the model. NSwag - The Swagger/OpenAPI toolchain for .NET, ASP.NET Core and TypeScript. Crunch.vscode-openapi - This Visual Studio Code (VS Code) extension adds rich support for the OpenAPI Specification (OAS) (formerly known as Swagger Specification) in JSON or YAML format httpstat.us - Easily generate different HTTP responses for testing beetlex-io/FastHttpApi davidfowl/uController - Code generated Web API framework for .NET Core khellang/Middleware/problemdetails - Various ASP.NET Core middleware json-api-dotnet/JsonApiDotNetCore - JSON:API Framework for ASP.NET Core dasiths/SimpleEndpoints - A simple, convention-based, endpoint per action pattern implementation for AspNetCore 3.0+ with full support for Swagge GeorgDangl/LightQuery - Lightweight solution for sorting and paging Asp.Net Core API results hassanhabib/InvisibleApi - ASP.NET Library that allows developers to add an extra layer of security on top of their existing endpoints Kahbazi/MediatR.AspNetCore.Endpoints","title":"\ud83d\udce6 Libraries"},{"location":"web-api/#samples","text":"filipw/apress-recipes-webapi - Samples from ASP.NET Web API 2: Recipes book. featherhttp/tutorial - Quick tutorials on how you you can build easy web applications with FeatherHttp. Learn how to build lightweight server-side web applications filipw/net50-webapi-samples ardalis/MediatRAspNetCore - Sample showing MediatR with ASP.NET Core eShopOnWeb/PublicApi","title":"\ud83d\udd16 Samples"},{"location":"web-api/#templates","text":"ApiBoilerPlate - A simple yet organized project template for building ASP.NET Core APIs in .NET Core 3.1 CleanArchitecture - Clean Architecture Template for Blazor WebAssembly Built with MudBlazor Components. pdevito3/craftsman - Craftsman is the workhorse behind the Wrapt framework and provides a suite of CLI commands for quickly scaffolding out new files and projects for your .NET Web APIs with simple CLI commands and configuration files.","title":"Templates"},{"location":"web-api/#books","text":"REST API Design Rulebook The Design of Web APIs ASP.NET Web API 2: Building a REST Service from Start to Finish 2 nd ed. Edition ASP.NET Web API 2 Recipes: A Problem-Solution Approach \u21a5 Back To Top","title":"Books"},{"location":"web-sockets/","text":"WebSockets \u00b6 \ud83d\udcdd Articles \u00b6 Understanding WebSockets with ASP.NET Core Using Web Sockets with ASP.NET Core WebSockets support in ASP.NET Core \u21a5 Back To Top","title":"WebSockets"},{"location":"web-sockets/#websockets","text":"","title":"WebSockets"},{"location":"web-sockets/#articles","text":"Understanding WebSockets with ASP.NET Core Using Web Sockets with ASP.NET Core WebSockets support in ASP.NET Core \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"ci-cd/azure-devops/","text":"Azure Devops \u00b6 \ud83d\udcdd Articles \u00b6 Manage release flow using pipelines in Azure DevOps Videos \u00b6 Step by Step - Use Azure DevOps to Test, Build and Deploy an API Azure DevOps Playlist - Rahul Nath","title":"Azure Devops"},{"location":"ci-cd/azure-devops/#azure-devops","text":"","title":"Azure Devops"},{"location":"ci-cd/azure-devops/#articles","text":"Manage release flow using pipelines in Azure DevOps","title":"\ud83d\udcdd Articles"},{"location":"ci-cd/azure-devops/#videos","text":"Step by Step - Use Azure DevOps to Test, Build and Deploy an API Azure DevOps Playlist - Rahul Nath","title":"Videos"},{"location":"ci-cd/github-actions/","text":"GitHub Actions \u00b6 \ud83d\udcdd Articles \u00b6 Automate Azure AD B2C policies release with GitHub Actions Create your own GitHub Action with .NET GETTING STARTED WITH GITHUB ACTIONS FOR .NET DEVELOPERS","title":"GitHub Actions"},{"location":"ci-cd/github-actions/#github-actions","text":"","title":"GitHub Actions"},{"location":"ci-cd/github-actions/#articles","text":"Automate Azure AD B2C policies release with GitHub Actions Create your own GitHub Action with .NET GETTING STARTED WITH GITHUB ACTIONS FOR .NET DEVELOPERS","title":"\ud83d\udcdd Articles"},{"location":"ci-cd/jenkins/","text":"Jenkins \u00b6 Articles \u00b6 Up and running Jenkins on local Kubernetes cluster","title":"Jenkins"},{"location":"ci-cd/jenkins/#jenkins","text":"","title":"Jenkins"},{"location":"ci-cd/jenkins/#articles","text":"Up and running Jenkins on local Kubernetes cluster","title":"Articles"},{"location":"csharp/","text":"C# Closure Collections & Data Structures Constant Versions C# 7 C# 8 C# 9 Reflection LINQ Boxing Null Check Implicit & Explicit Operators Types","title":"Index"},{"location":"csharp/boxing/","text":"Boxing \u00b6 Videos \u00b6 What is Boxing in C# and how it affects memory and speed","title":"Boxing"},{"location":"csharp/boxing/#boxing","text":"","title":"Boxing"},{"location":"csharp/boxing/#videos","text":"What is Boxing in C# and how it affects memory and speed","title":"Videos"},{"location":"csharp/closure/","text":"Closure \u00b6 Articles \u00b6 Delegates, Lambda Expressions & Closures in C# Understanding Closures in C# A Simple Explanation of C# Closures Understanding C# Features (6) Closure The Intuitive Guide to Understanding Closures in C# C# \u2013 Closures capture variables, not values Closures and the Lambdas What\u2019s In A Closure? Videos \u00b6 What are Closures in C# and why you NEED to know about them","title":"Closure"},{"location":"csharp/closure/#closure","text":"","title":"Closure"},{"location":"csharp/closure/#articles","text":"Delegates, Lambda Expressions & Closures in C# Understanding Closures in C# A Simple Explanation of C# Closures Understanding C# Features (6) Closure The Intuitive Guide to Understanding Closures in C# C# \u2013 Closures capture variables, not values Closures and the Lambdas What\u2019s In A Closure?","title":"Articles"},{"location":"csharp/closure/#videos","text":"What are Closures in C# and why you NEED to know about them","title":"Videos"},{"location":"csharp/constant/","text":"Constant \u00b6 Articles \u00b6 Group Your Constants and Enums","title":"Constant"},{"location":"csharp/constant/#constant","text":"","title":"Constant"},{"location":"csharp/constant/#articles","text":"Group Your Constants and Enums","title":"Articles"},{"location":"csharp/csharp/","text":"C \u00b6 Articles \u00b6 Simulating Return Type Inference in C# Fluent Generics in C#","title":"C#"},{"location":"csharp/csharp/#c","text":"","title":"C"},{"location":"csharp/csharp/#articles","text":"Simulating Return Type Inference in C# Fluent Generics in C#","title":"Articles"},{"location":"csharp/enum/","text":"Enum \u00b6 Articles \u00b6 Smart enums / Type-safe enums in .NET Series: Enumeration Classes \u2013 DDD and beyond Enumeration classes Use enumeration classes instead of enum types Introduction to Enumeration Classes Enumeration class and JSON Serialization Reference data as code Enum Alternatives in C# Listing Strongly Typed Enum Options in C# \ud83d\udce6 Libraries \u00b6 ardalis/SmartEnum - A base class for quickly and easily creating strongly typed enum replacements in C#.","title":"Enum"},{"location":"csharp/enum/#enum","text":"","title":"Enum"},{"location":"csharp/enum/#articles","text":"Smart enums / Type-safe enums in .NET Series: Enumeration Classes \u2013 DDD and beyond Enumeration classes Use enumeration classes instead of enum types Introduction to Enumeration Classes Enumeration class and JSON Serialization Reference data as code Enum Alternatives in C# Listing Strongly Typed Enum Options in C#","title":"Articles"},{"location":"csharp/enum/#libraries","text":"ardalis/SmartEnum - A base class for quickly and easily creating strongly typed enum replacements in C#.","title":"\ud83d\udce6 Libraries"},{"location":"csharp/extension-methods/","text":"Extension Methods \u00b6 Articles \u00b6 Extension Methods Best Practices (Extension Methods Part 6) Extension Methods Guidelines in C# .NET EXTENSION METHOD NAMING CONVENTIONS BEST PRACTICES The 6 best practices for writing LINQ extension methods","title":"Extension Methods"},{"location":"csharp/extension-methods/#extension-methods","text":"","title":"Extension Methods"},{"location":"csharp/extension-methods/#articles","text":"Extension Methods Best Practices (Extension Methods Part 6) Extension Methods Guidelines in C# .NET EXTENSION METHOD NAMING CONVENTIONS BEST PRACTICES The 6 best practices for writing LINQ extension methods","title":"Articles"},{"location":"csharp/implicit-explicit-operators/","text":"Implicit & Explicit Operators \u00b6 Videos \u00b6 Automatic type conversion with Implicit and Explicit operators in C#","title":"Operator"},{"location":"csharp/implicit-explicit-operators/#implicit-explicit-operators","text":"","title":"Implicit &amp; Explicit Operators"},{"location":"csharp/implicit-explicit-operators/#videos","text":"Automatic type conversion with Implicit and Explicit operators in C#","title":"Videos"},{"location":"csharp/linq/","text":"LINQ \u00b6 Articles \u00b6 Monadic Comprehension Syntax via LINQ in C# Evolution of An Async LINQ operator Calling functions in LINQ queries LINQ: Building an IQueryable provider series Videos \u00b6 When LINQ is not LINQ Libraries \u00b6 NetFabric/NetFabric.Hyperlinq - High performance LINQ implementation with minimal heap allocations. Supports enumerables, async enumerables, arrays and Span . dotnet/reactive - The Reactive Extensions for .NET reegeek/StructLinq - Implementation in C# of LINQ concept with struct nessos/Streams - A lightweight F#/C# library for efficient functional-style pipelines on streams of data. YairHalberstadt/SpanLinq - Linq for Span using SourceGenerators kevin-montrose/LinqAF - Low allocation re-implementation of LINQ-to-Objects Zaczero/LinqFasterer - Set of fast LINQ-like extension methods for arrays and lists. Fine-tune your code for the maximum performance. jackmott/LinqFaster - Linq-like extension functions for Arrays, Span , and List that are faster and allocate less. manofstick/Cistern.ValueLinq mattwar/iqtoolkit - A Toolkit for building LINQ IQueryable providers. This is the official move of my IQToolkit project from CodePlex. Samples \u00b6 NetFabric/LinqBenchmarks - Benchmarking LINQ and alternative implementations","title":"Linq"},{"location":"csharp/linq/#linq","text":"","title":"LINQ"},{"location":"csharp/linq/#articles","text":"Monadic Comprehension Syntax via LINQ in C# Evolution of An Async LINQ operator Calling functions in LINQ queries LINQ: Building an IQueryable provider series","title":"Articles"},{"location":"csharp/linq/#videos","text":"When LINQ is not LINQ","title":"Videos"},{"location":"csharp/linq/#libraries","text":"NetFabric/NetFabric.Hyperlinq - High performance LINQ implementation with minimal heap allocations. Supports enumerables, async enumerables, arrays and Span . dotnet/reactive - The Reactive Extensions for .NET reegeek/StructLinq - Implementation in C# of LINQ concept with struct nessos/Streams - A lightweight F#/C# library for efficient functional-style pipelines on streams of data. YairHalberstadt/SpanLinq - Linq for Span using SourceGenerators kevin-montrose/LinqAF - Low allocation re-implementation of LINQ-to-Objects Zaczero/LinqFasterer - Set of fast LINQ-like extension methods for arrays and lists. Fine-tune your code for the maximum performance. jackmott/LinqFaster - Linq-like extension functions for Arrays, Span , and List that are faster and allocate less. manofstick/Cistern.ValueLinq mattwar/iqtoolkit - A Toolkit for building LINQ IQueryable providers. This is the official move of my IQToolkit project from CodePlex.","title":"Libraries"},{"location":"csharp/linq/#samples","text":"NetFabric/LinqBenchmarks - Benchmarking LINQ and alternative implementations","title":"Samples"},{"location":"csharp/null-check/","text":"Null Check \u00b6 Articles \u00b6 C#: Different ways to Check for Null Different ways to check if a value is null in C# Nullable Reference types in C# - Best practices Nullable reference types (C# reference) Tutorial: Express your design intent more clearly with nullable and non-nullable reference types","title":"Null Checking"},{"location":"csharp/null-check/#null-check","text":"","title":"Null Check"},{"location":"csharp/null-check/#articles","text":"C#: Different ways to Check for Null Different ways to check if a value is null in C# Nullable Reference types in C# - Best practices Nullable reference types (C# reference) Tutorial: Express your design intent more clearly with nullable and non-nullable reference types","title":"Articles"},{"location":"csharp/reflection/","text":"Reflection \u00b6 Resources \u00b6 Reflection - RIP Tutorial Articles \u00b6 Dynamic Programming in the .NET Framework Reflection in .NET Reflection and Generic Types How to: Examine and Instantiate Generic Types with Reflection Dynamically Loading and Using Types Emitting Dynamic Methods and Assemblies Walkthrough: Emitting Code in Partial Trust Scenarios How to: Define a Generic Type with Reflection Emit How to: Define a Generic Method with Reflection Emit How to: Define and Execute Dynamic Methods Compile and generate dynamic source cod Using the CodeDOM Generating and Compiling Source Code from a CodeDOM Graph How to: Create a Class Using CodeDOM Dynamic Language Runtime Overview Is the era of reflection-heavy C# libraries at an end? .NET, REFLECTION AND MULTIPLE ASSEMBLIES Dynamically Loading Types in .NET Core with a Custom Assembly Load Context Using Type.GetType with .NET Core / Dynamically Loading .NET Standard Assemblies in .NET Core Collectible assemblies in .NET Core 3.0 DLR using Reflection.Emit (In Depth) Part 1 DLR using Reflection.Emit (In Depth) Part 2 Dynamically loading types from assembly files in .NET Core and Standard Dynamically compile and run code using .NET Core 3.0 .NET Core Plugins Understanding System.Runtime.Loader.AssemblyLoadContext Create a .NET Core application with plugins Instantiating a C# object from a string using Activator.CreateInstance in .NET AssemblyBuilder Class System.Reflection.Emit Namespace Reflection and Reflection.Emit in C# Chapter 5. Generating code with Reflection.Emit Reflection Part 1: Discovery and Execution Reflection Part 2: Emit Benchmarking 4 reflection methods for calling a constructor in .NET Get All C# Classes Implementing an Interface Create an instance of a Generic Type and invoke it\u2019s method Get a generic method and invoke it Instantiating classes that implement an interface (e.g. plugin activation) IL Generation in .NET with Sigil How to: Define a Generic Method with Reflection Emit How do I use reflection to call a generic method? How to call a generic async method using reflection Videos \u00b6 Achieving compile-time performance with Reflection in C# Dynamically invoking a generic method with Reflection in .NET C# C# Reflection Explained (Claim generation example) Libraries \u00b6 natemcmaster/DotNetCorePlugins - .NET Core library for dynamically loading code kevin-montrose/Sigil - A fail-fast validating helper for .NET CIL generation skbkontur/gremit - .NET Reflection.Emit extensions ekonbenefits/dynamitey - (pronounced dyna-mighty) flexes DLR muscle to do meta-mazing things in .net Books \u00b6 MetaProgramming in .Net","title":"Reflection"},{"location":"csharp/reflection/#reflection","text":"","title":"Reflection"},{"location":"csharp/reflection/#resources","text":"Reflection - RIP Tutorial","title":"Resources"},{"location":"csharp/reflection/#articles","text":"Dynamic Programming in the .NET Framework Reflection in .NET Reflection and Generic Types How to: Examine and Instantiate Generic Types with Reflection Dynamically Loading and Using Types Emitting Dynamic Methods and Assemblies Walkthrough: Emitting Code in Partial Trust Scenarios How to: Define a Generic Type with Reflection Emit How to: Define a Generic Method with Reflection Emit How to: Define and Execute Dynamic Methods Compile and generate dynamic source cod Using the CodeDOM Generating and Compiling Source Code from a CodeDOM Graph How to: Create a Class Using CodeDOM Dynamic Language Runtime Overview Is the era of reflection-heavy C# libraries at an end? .NET, REFLECTION AND MULTIPLE ASSEMBLIES Dynamically Loading Types in .NET Core with a Custom Assembly Load Context Using Type.GetType with .NET Core / Dynamically Loading .NET Standard Assemblies in .NET Core Collectible assemblies in .NET Core 3.0 DLR using Reflection.Emit (In Depth) Part 1 DLR using Reflection.Emit (In Depth) Part 2 Dynamically loading types from assembly files in .NET Core and Standard Dynamically compile and run code using .NET Core 3.0 .NET Core Plugins Understanding System.Runtime.Loader.AssemblyLoadContext Create a .NET Core application with plugins Instantiating a C# object from a string using Activator.CreateInstance in .NET AssemblyBuilder Class System.Reflection.Emit Namespace Reflection and Reflection.Emit in C# Chapter 5. Generating code with Reflection.Emit Reflection Part 1: Discovery and Execution Reflection Part 2: Emit Benchmarking 4 reflection methods for calling a constructor in .NET Get All C# Classes Implementing an Interface Create an instance of a Generic Type and invoke it\u2019s method Get a generic method and invoke it Instantiating classes that implement an interface (e.g. plugin activation) IL Generation in .NET with Sigil How to: Define a Generic Method with Reflection Emit How do I use reflection to call a generic method? How to call a generic async method using reflection","title":"Articles"},{"location":"csharp/reflection/#videos","text":"Achieving compile-time performance with Reflection in C# Dynamically invoking a generic method with Reflection in .NET C# C# Reflection Explained (Claim generation example)","title":"Videos"},{"location":"csharp/reflection/#libraries","text":"natemcmaster/DotNetCorePlugins - .NET Core library for dynamically loading code kevin-montrose/Sigil - A fail-fast validating helper for .NET CIL generation skbkontur/gremit - .NET Reflection.Emit extensions ekonbenefits/dynamitey - (pronounced dyna-mighty) flexes DLR muscle to do meta-mazing things in .net","title":"Libraries"},{"location":"csharp/reflection/#books","text":"MetaProgramming in .Net","title":"Books"},{"location":"csharp/span/","text":"Span \u00b6 Videos \u00b6 What is Span in C# and why you should be using it","title":"Span"},{"location":"csharp/span/#span","text":"","title":"Span"},{"location":"csharp/span/#videos","text":"What is Span in C# and why you should be using it","title":"Videos"},{"location":"csharp/types/","text":"Types \u00b6 Articles \u00b6 Videos \u00b6 Where are types allocated in .NET and why people get it so wrong","title":"Types"},{"location":"csharp/types/#types","text":"","title":"Types"},{"location":"csharp/types/#articles","text":"","title":"Articles"},{"location":"csharp/types/#videos","text":"Where are types allocated in .NET and why people get it so wrong","title":"Videos"},{"location":"csharp/async/","text":".Net Async Async And Await Async Best Practice Async Collections Async Stream And IEnumerableAsync Blocking Collection Iterators Lazy Initialization Asynchronous Messaging Async Local Awaiter Cancellation Channels Concurrency Vs Parallelism Configure Await Continuations.md Cpu Bound Exception Handling Io Bound Synchronization Context State Machine TaskCompletionSource Task ThreadPool Thread Safty Thread ValueTask Recources","title":"Index"},{"location":"csharp/async/async-and-await/","text":"Async and Await \u00b6 Resources \u00b6 Async-Await - RIP Tutorial \ud83d\udcdd Articles \u00b6 Async Overview Asynchronous programming patterns Task-based asynchronous pattern - TAP Event-based Asynchronous Pattern - EAP Asynchronous Programming Model - APM Task asynchronous programming model Async return types (C#) When to Use Async and Await and How it Works Asynchrony in C# 5 Part Six: Whither async? Exploring the async/await State Machine \u2013 Series Overview Exploring the async/await State Machine \u2013 The Awaitable Pattern Exploring the async/await State Machine \u2013 Main Workflow and State Transitions Exploring the async/await State Machine \u2013 Conceptual Implementation Dissecting the async methods in C# Extending the async methods in C# The performance characteristics of the async methods in C# Understanding async/await State Machine in .NET Fixing the Sync over Async antipattern Parallel Programming BY examples Async/Await FAQ Are deadlocks still possible with await? The Ultimate Guide to Async and Await in C# and ASP.NET Explaining Async and Await in ASP.NET A Practical Example Of Asynchronous Programming in C# and ASP.NET The Ultimate Guide to Async and Await in C# and ASP.NET ConfigureAwait FAQ - Stephen Toub Async/Await Calls Gotcha with the CSharp ? Null Propagator Asynchronous C#: Making a simple Cup of Tea Asynchronous C#: Making a simple Cup of Tea (Part 2) Asynchronous Programming with Async and Await in ASP.NET Core Introducing AsyncUtilities \ud83d\udcf9 Videos \u00b6 Why Asynchronous Web API Endpoints | RESTful | async await Best Practices for Using async and await, by Damir Arh Making async code run faster in C# Why is Async Code Hard to Debug? Async Debugging Part 2 Libraries \u00b6 Nito.AsyncEx - A helper library for the Task-Based Asynchronous Pattern (TAP). Microsoft.VisualStudio.Threading - Async synchronization primitives, async collections, TPL and dataflow extensions. The JoinableTaskFactory allows synchronously blocking the UI thread for async work. AsyncEnumerator - Introduces IAsyncEnumerable , IAsyncEnumerator , ForEachAsync() , and ParallelForEachAsync() and other useful stuff to use with async-await AsyncIO.DotNet - Easy-to-use library for common async IO file system operations. NeoSmart.AsyncLock - A C# lock replacement for async/await, supporting recursion/re-entrance and asynchronous waits.","title":"Async And Await"},{"location":"csharp/async/async-and-await/#async-and-await","text":"","title":"Async and Await"},{"location":"csharp/async/async-and-await/#resources","text":"Async-Await - RIP Tutorial","title":"Resources"},{"location":"csharp/async/async-and-await/#articles","text":"Async Overview Asynchronous programming patterns Task-based asynchronous pattern - TAP Event-based Asynchronous Pattern - EAP Asynchronous Programming Model - APM Task asynchronous programming model Async return types (C#) When to Use Async and Await and How it Works Asynchrony in C# 5 Part Six: Whither async? Exploring the async/await State Machine \u2013 Series Overview Exploring the async/await State Machine \u2013 The Awaitable Pattern Exploring the async/await State Machine \u2013 Main Workflow and State Transitions Exploring the async/await State Machine \u2013 Conceptual Implementation Dissecting the async methods in C# Extending the async methods in C# The performance characteristics of the async methods in C# Understanding async/await State Machine in .NET Fixing the Sync over Async antipattern Parallel Programming BY examples Async/Await FAQ Are deadlocks still possible with await? The Ultimate Guide to Async and Await in C# and ASP.NET Explaining Async and Await in ASP.NET A Practical Example Of Asynchronous Programming in C# and ASP.NET The Ultimate Guide to Async and Await in C# and ASP.NET ConfigureAwait FAQ - Stephen Toub Async/Await Calls Gotcha with the CSharp ? Null Propagator Asynchronous C#: Making a simple Cup of Tea Asynchronous C#: Making a simple Cup of Tea (Part 2) Asynchronous Programming with Async and Await in ASP.NET Core Introducing AsyncUtilities","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/async-and-await/#videos","text":"Why Asynchronous Web API Endpoints | RESTful | async await Best Practices for Using async and await, by Damir Arh Making async code run faster in C# Why is Async Code Hard to Debug? Async Debugging Part 2","title":"\ud83d\udcf9 Videos"},{"location":"csharp/async/async-and-await/#libraries","text":"Nito.AsyncEx - A helper library for the Task-Based Asynchronous Pattern (TAP). Microsoft.VisualStudio.Threading - Async synchronization primitives, async collections, TPL and dataflow extensions. The JoinableTaskFactory allows synchronously blocking the UI thread for async work. AsyncEnumerator - Introduces IAsyncEnumerable , IAsyncEnumerator , ForEachAsync() , and ParallelForEachAsync() and other useful stuff to use with async-await AsyncIO.DotNet - Easy-to-use library for common async IO file system operations. NeoSmart.AsyncLock - A C# lock replacement for async/await, supporting recursion/re-entrance and asynchronous waits.","title":"Libraries"},{"location":"csharp/async/async-best-practice/","text":"Async Best Practice \u00b6 Resources \u00b6 davidfowl/AspNetCoreDiagnosticScenarios - This repository has examples of broken patterns in ASP.NET Core applications ## Articles - Async Guidance - Async and Await: Here be dragons - Top 7 Common Async Mistakes - Async/Await - Best Practices in Asynchronous Programming - Common C# async and await misconceptions - Cancel Asynchronous Operation In Csharp - John Thiriet - C# Async Tips and Tricks - Chris Pratt - Eliding Async and Await - Stephen Cleary - Async code smells and how to track them down with analyzers - Part I - Async code smells and how to track them down with analyzers - Part II - Two Ways to Do Async/Await in ASP.NET Wrong (and How to Fix Them) - Asynchronous C#: Cherry on the top \ud83c\udf52 (Tips and Tricks) Videos \u00b6 Is awaiting a Task instead of returning it directly in C# actually slower? Best Practices for Using async and await, by Damir Arh","title":"Async Best Practice"},{"location":"csharp/async/async-best-practice/#async-best-practice","text":"","title":"Async Best Practice"},{"location":"csharp/async/async-best-practice/#resources","text":"davidfowl/AspNetCoreDiagnosticScenarios - This repository has examples of broken patterns in ASP.NET Core applications ## Articles - Async Guidance - Async and Await: Here be dragons - Top 7 Common Async Mistakes - Async/Await - Best Practices in Asynchronous Programming - Common C# async and await misconceptions - Cancel Asynchronous Operation In Csharp - John Thiriet - C# Async Tips and Tricks - Chris Pratt - Eliding Async and Await - Stephen Cleary - Async code smells and how to track them down with analyzers - Part I - Async code smells and how to track them down with analyzers - Part II - Two Ways to Do Async/Await in ASP.NET Wrong (and How to Fix Them) - Asynchronous C#: Cherry on the top \ud83c\udf52 (Tips and Tricks)","title":"Resources"},{"location":"csharp/async/async-best-practice/#videos","text":"Is awaiting a Task instead of returning it directly in C# actually slower? Best Practices for Using async and await, by Damir Arh","title":"Videos"},{"location":"csharp/async/asynchronous-messaging/","text":"Asynchronous Messaging \u00b6 \ud83d\udcdd Articles \u00b6 Asynchronous Messaging, Part 1: Basic Distributed Architecture Asynchronous Messaging, Part 2: Durable Queues Asynchronous Messaging, Part 3: Backend Service","title":"Asynchronous Messaging"},{"location":"csharp/async/asynchronous-messaging/#asynchronous-messaging","text":"","title":"Asynchronous Messaging"},{"location":"csharp/async/asynchronous-messaging/#articles","text":"Asynchronous Messaging, Part 1: Basic Distributed Architecture Asynchronous Messaging, Part 2: Durable Queues Asynchronous Messaging, Part 3: Backend Service","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/asynclocal/","text":"AsyncLocal \u00b6 \ud83d\udcdd Articles \u00b6 AsyncLocalT in .NET 4.6 Implicit Async Context (\u201cAsyncLocal\u201d) Multithreaded shared variables and AsyncLocal","title":"Async Local"},{"location":"csharp/async/asynclocal/#asynclocal","text":"","title":"AsyncLocal"},{"location":"csharp/async/asynclocal/#articles","text":"AsyncLocalT in .NET 4.6 Implicit Async Context (\u201cAsyncLocal\u201d) Multithreaded shared variables and AsyncLocal","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/awaiter/","text":"Awaiter \u00b6 \ud83d\udcdd Articles \u00b6 A Tour of Task, Part 6: Results Task.Wait() Vs Task.GetAwaiter().GetResult() Avoid GetAwaiter().GetResult() at all cost Understanding C# async / await (2) The Awaitable-Awaiter Pattern","title":"Awaiter"},{"location":"csharp/async/awaiter/#awaiter","text":"","title":"Awaiter"},{"location":"csharp/async/awaiter/#articles","text":"A Tour of Task, Part 6: Results Task.Wait() Vs Task.GetAwaiter().GetResult() Avoid GetAwaiter().GetResult() at all cost Understanding C# async / await (2) The Awaitable-Awaiter Pattern","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/cancellation/","text":"Cancellation \u00b6 \ud83d\udcdd Articles \u00b6 Task cancellation in C# and things you should know about it Cancel asynchronous operation in csharp Aborting Thread Vs Cancelling Task Task cancellation Cancellation in Managed Threads Destroying threads How to: Cancel a Task and Its Children Using CancellationTokens in ASP.NET Core MVC controllers Canceling HTTP Requests in ASP.NET Core with CancellationToken Videos \u00b6 Stop wasting server resources by properly using CancellationToken in .NET How to Cancel Tasks in C# - Using CancellationTokenSource and CancellationToken \ud83d\udd16 Samples \u00b6 https://github.com/johnthiriet/AsyncTips","title":"Cancellation"},{"location":"csharp/async/cancellation/#cancellation","text":"","title":"Cancellation"},{"location":"csharp/async/cancellation/#articles","text":"Task cancellation in C# and things you should know about it Cancel asynchronous operation in csharp Aborting Thread Vs Cancelling Task Task cancellation Cancellation in Managed Threads Destroying threads How to: Cancel a Task and Its Children Using CancellationTokens in ASP.NET Core MVC controllers Canceling HTTP Requests in ASP.NET Core with CancellationToken","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/cancellation/#videos","text":"Stop wasting server resources by properly using CancellationToken in .NET How to Cancel Tasks in C# - Using CancellationTokenSource and CancellationToken","title":"Videos"},{"location":"csharp/async/cancellation/#samples","text":"https://github.com/johnthiriet/AsyncTips","title":"\ud83d\udd16 Samples"},{"location":"csharp/async/channels/","text":"Channels \u00b6 \ud83d\udcdd Articles \u00b6 An Introduction to System.Threading.Channels - Stephen Toub Using Channels In C# .NET Core \u2013 Part 1 \u2013 Getting Started Using Channels In C# .NET Core \u2013 Part 2 \u2013 Advanced Channels Using Channels In C# .NET Core \u2013 Part 3 \u2013 Understanding Back Pressure AN INTRODUCTION TO SYSTEM.THREADING.CHANNELS Producer/consumer pipelines with System.Threading.Channels C# Channels - Publish / Subscribe Workflows C# Channels - Timeout and Cancellation C# Channels - Async Data Pipelines How to implement Producer/Consumer with System.Threading.Channels How to implement Producer/Consumer with System.Threading.Channels What\u2019s the Difference between Channel and ConcurrentQueue in C#? Producer/consumer pipelines with System.Threading.Channels \ud83d\udcf9 Videos \u00b6 C# Channels Explained (System.Threading.Channels) Working with Channels in .NET \ud83d\udd16 Samples \u00b6 deniskyashif/trydotnet-channels - Interactive examples of common C# concurrency patterns using channels.","title":"Channels"},{"location":"csharp/async/channels/#channels","text":"","title":"Channels"},{"location":"csharp/async/channels/#articles","text":"An Introduction to System.Threading.Channels - Stephen Toub Using Channels In C# .NET Core \u2013 Part 1 \u2013 Getting Started Using Channels In C# .NET Core \u2013 Part 2 \u2013 Advanced Channels Using Channels In C# .NET Core \u2013 Part 3 \u2013 Understanding Back Pressure AN INTRODUCTION TO SYSTEM.THREADING.CHANNELS Producer/consumer pipelines with System.Threading.Channels C# Channels - Publish / Subscribe Workflows C# Channels - Timeout and Cancellation C# Channels - Async Data Pipelines How to implement Producer/Consumer with System.Threading.Channels How to implement Producer/Consumer with System.Threading.Channels What\u2019s the Difference between Channel and ConcurrentQueue in C#? Producer/consumer pipelines with System.Threading.Channels","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/channels/#videos","text":"C# Channels Explained (System.Threading.Channels) Working with Channels in .NET","title":"\ud83d\udcf9 Videos"},{"location":"csharp/async/channels/#samples","text":"deniskyashif/trydotnet-channels - Interactive examples of common C# concurrency patterns using channels.","title":"\ud83d\udd16 Samples"},{"location":"csharp/async/concurrency%20-vs-parallelism/","text":"Concurrency Vs Parallelism \u00b6 \ud83d\udcdd Articles \u00b6 Concurrency Vs Parallelism Concurrency, part 1: Parallelism, Asynchrony, and Multi-threading Explained","title":"Concurrency Vs Parallelism"},{"location":"csharp/async/concurrency%20-vs-parallelism/#concurrency-vs-parallelism","text":"","title":"Concurrency Vs Parallelism"},{"location":"csharp/async/concurrency%20-vs-parallelism/#articles","text":"Concurrency Vs Parallelism Concurrency, part 1: Parallelism, Asynchrony, and Multi-threading Explained","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/configure-await/","text":"Configure Await \u00b6 \ud83d\udcdd Articles \u00b6 ConfigureAwait FAQ - Stephen Toub Videos \u00b6 Which do I use, ConfigureAwait True or False?","title":"Configure Await"},{"location":"csharp/async/configure-await/#configure-await","text":"","title":"Configure Await"},{"location":"csharp/async/configure-await/#articles","text":"ConfigureAwait FAQ - Stephen Toub","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/configure-await/#videos","text":"Which do I use, ConfigureAwait True or False?","title":"Videos"},{"location":"csharp/async/continuations/","text":"Continuations \u00b6 \ud83d\udcdd Articles \u00b6 A Tour of Task, Part 7: Continuations Chaining tasks using continuation tasks","title":"Continuations.md"},{"location":"csharp/async/continuations/#continuations","text":"","title":"Continuations"},{"location":"csharp/async/continuations/#articles","text":"A Tour of Task, Part 7: Continuations Chaining tasks using continuation tasks","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/cpu-bound/","text":"Cpu-Bound \u00b6 \ud83d\udcdd Articles \u00b6 Compute-bound tasks Task.Run Etiquette and Proper Usage Should I expose asynchronous wrappers for synchronous methods? Task.Run Vs TaskCompletionSource Vs Task.Factory.FromAsync Task.Run vs Task.Factory.StartNew","title":"Cpu Bound"},{"location":"csharp/async/cpu-bound/#cpu-bound","text":"","title":"Cpu-Bound"},{"location":"csharp/async/cpu-bound/#articles","text":"Compute-bound tasks Task.Run Etiquette and Proper Usage Should I expose asynchronous wrappers for synchronous methods? Task.Run Vs TaskCompletionSource Vs Task.Factory.FromAsync Task.Run vs Task.Factory.StartNew","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/exception-handling/","text":"Exception Handling \u00b6 \ud83d\udcdd Articles \u00b6 Exception Handling In Asynchronous Code Exception Handling in C# Asynchronous Programming Exception handling (Task Parallel Library) Asynchrony in C# 5, Part Seven: Exceptions Extreme programming meets systematic testing using Coyote Finding concurrency bugs in a .NET application using Coyote","title":"Exception Handling"},{"location":"csharp/async/exception-handling/#exception-handling","text":"","title":"Exception Handling"},{"location":"csharp/async/exception-handling/#articles","text":"Exception Handling In Asynchronous Code Exception Handling in C# Asynchronous Programming Exception handling (Task Parallel Library) Asynchrony in C# 5, Part Seven: Exceptions Extreme programming meets systematic testing using Coyote Finding concurrency bugs in a .NET application using Coyote","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/io-bound/","text":"Io-Bound \u00b6 \ud83d\udcdd Articles \u00b6 Deeper Dive into Tasks for an I/O-Bound Operation I/O-bound tasks Why you should not create asynchronous wrappers with Task.Run() Asynchronous file access (C#) C# : TASK PARALLEL LIBRARY (TPL) WITH ASYNC AWAIT AND TASKCOMPLETIONSOURCE FOR ASYNC I/O OPERATIONS There Is No Thread Wrapping Other Asynchronous Patterns in Awaitable Tasks Task.Factory.StartNew vs Task.Factory.FromAsync Task.Run vs Task.Factory.StartNew","title":"Io Bound"},{"location":"csharp/async/io-bound/#io-bound","text":"","title":"Io-Bound"},{"location":"csharp/async/io-bound/#articles","text":"Deeper Dive into Tasks for an I/O-Bound Operation I/O-bound tasks Why you should not create asynchronous wrappers with Task.Run() Asynchronous file access (C#) C# : TASK PARALLEL LIBRARY (TPL) WITH ASYNC AWAIT AND TASKCOMPLETIONSOURCE FOR ASYNC I/O OPERATIONS There Is No Thread Wrapping Other Asynchronous Patterns in Awaitable Tasks Task.Factory.StartNew vs Task.Factory.FromAsync Task.Run vs Task.Factory.StartNew","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/recources/","text":"Resources \u00b6 Stephen Toub Blog Links about async/await in C# Marc Gravell Blog","title":"Resources"},{"location":"csharp/async/recources/#resources","text":"Stephen Toub Blog Links about async/await in C# Marc Gravell Blog","title":"Resources"},{"location":"csharp/async/state-machine/","text":"State Machine \u00b6 Articles \u00b6 Exploring the async/await State Machine \u2013 The Awaitable Pattern Exploring the async/await State Machine \u2013 Main Workflow and State Transitions Exploring the async/await State Machine \u2013 Conceptual Implementation Exploring the async/await State Machine \u2013 Concrete Implementation Exploring the async/await State Machine \u2013 Series Overview Exploring the async/await State Machine \u2013 Synchronization Context Dissecting the async methods in C#","title":"State Machine"},{"location":"csharp/async/state-machine/#state-machine","text":"","title":"State Machine"},{"location":"csharp/async/state-machine/#articles","text":"Exploring the async/await State Machine \u2013 The Awaitable Pattern Exploring the async/await State Machine \u2013 Main Workflow and State Transitions Exploring the async/await State Machine \u2013 Conceptual Implementation Exploring the async/await State Machine \u2013 Concrete Implementation Exploring the async/await State Machine \u2013 Series Overview Exploring the async/await State Machine \u2013 Synchronization Context Dissecting the async methods in C#","title":"Articles"},{"location":"csharp/async/synchronization-context/","text":"SynchronizationContext \u00b6 \ud83d\udcdd Articles \u00b6 What Is SynchronizationContext","title":"Synchronization Context"},{"location":"csharp/async/synchronization-context/#synchronizationcontext","text":"","title":"SynchronizationContext"},{"location":"csharp/async/synchronization-context/#articles","text":"What Is SynchronizationContext","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/task-completion-source/","text":"TaskCompletionSource \u00b6 \ud83d\udcdd Articles \u00b6 Should I expose asynchronous wrappers for synchronous methods? Using TaskCompletionSource to change the semantics of async calls TaskCompletionSource in real life (part 1 of 2) TaskCompletionSource in real life (part 2 of 2) C# : TASK PARALLEL LIBRARY (TPL) WITH ASYNC AWAIT AND TASKCOMPLETIONSOURCE FOR ASYNC I/O OPERATIONS Task.Run Vs TaskCompletionSource Vs Task.Factory.FromAsync The Nature of TaskCompletionSource - Stephen Toub When should TaskCompletionSourceT be used? Instance of Task class (Task.Factory.StartNew or TaskCompletionSource) Wrapping Other Asynchronous Patterns in Awaitable Tasks The danger of TaskCompletionSource class Mechanisms for Creating Tasks","title":"TaskCompletionSource"},{"location":"csharp/async/task-completion-source/#taskcompletionsource","text":"","title":"TaskCompletionSource"},{"location":"csharp/async/task-completion-source/#articles","text":"Should I expose asynchronous wrappers for synchronous methods? Using TaskCompletionSource to change the semantics of async calls TaskCompletionSource in real life (part 1 of 2) TaskCompletionSource in real life (part 2 of 2) C# : TASK PARALLEL LIBRARY (TPL) WITH ASYNC AWAIT AND TASKCOMPLETIONSOURCE FOR ASYNC I/O OPERATIONS Task.Run Vs TaskCompletionSource Vs Task.Factory.FromAsync The Nature of TaskCompletionSource - Stephen Toub When should TaskCompletionSourceT be used? Instance of Task class (Task.Factory.StartNew or TaskCompletionSource) Wrapping Other Asynchronous Patterns in Awaitable Tasks The danger of TaskCompletionSource class Mechanisms for Creating Tasks","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/task/","text":"Task \u00b6 Articles \u00b6 Mechanisms for Creating Tasks - Stephen Toub Task Class New Task APIs in .NET 4.6 - Stephen Toub Tasks, Monads, and LINQ - Stephen Toub","title":"Task"},{"location":"csharp/async/task/#task","text":"","title":"Task"},{"location":"csharp/async/task/#articles","text":"Mechanisms for Creating Tasks - Stephen Toub Task Class New Task APIs in .NET 4.6 - Stephen Toub Tasks, Monads, and LINQ - Stephen Toub","title":"Articles"},{"location":"csharp/async/thread-pool/","text":"ThreadPool \u00b6 Articles \u00b6 Thread Pooling Step By Step Asynchronous Programming with Async and Await in ASP.NET Core Videos \u00b6 https://www.youtube.com/watch?v=isK8Cel3HP0","title":"ThreadPool"},{"location":"csharp/async/thread-pool/#threadpool","text":"","title":"ThreadPool"},{"location":"csharp/async/thread-pool/#articles","text":"Thread Pooling Step By Step Asynchronous Programming with Async and Await in ASP.NET Core","title":"Articles"},{"location":"csharp/async/thread-pool/#videos","text":"https://www.youtube.com/watch?v=isK8Cel3HP0","title":"Videos"},{"location":"csharp/async/thread-safty/","text":"Thread Safey \u00b6 \ud83d\udcdd Articles \u00b6 Thread Safety","title":"Thread Safty"},{"location":"csharp/async/thread-safty/#thread-safey","text":"","title":"Thread Safey"},{"location":"csharp/async/thread-safty/#articles","text":"Thread Safety","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/thread/","text":"Thread \u00b6 \ud83d\udcdd Articles \u00b6 Multithreading Basics","title":"Thread"},{"location":"csharp/async/thread/#thread","text":"","title":"Thread"},{"location":"csharp/async/thread/#articles","text":"Multithreading Basics","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/valuetask/","text":"ValueTask \u00b6 \ud83d\udcdd Articles \u00b6 ValueTask Restrictions - Stephen Cleary How to use ValueTask in C# Task, Async Await, ValueTask, IValueTaskSource and how to keep your sanity in modern .NET world .NET 5 and pooling for ValueTasks - Scooletz \ud83d\udcf9 Videos \u00b6 Understanding how to use Task and ValueTask When to use ValueTask instead of Task and save precious memory in C# Task vs ValueTask: When Should I use ValueTask?","title":"ValueTask"},{"location":"csharp/async/valuetask/#valuetask","text":"","title":"ValueTask"},{"location":"csharp/async/valuetask/#articles","text":"ValueTask Restrictions - Stephen Cleary How to use ValueTask in C# Task, Async Await, ValueTask, IValueTaskSource and how to keep your sanity in modern .NET world .NET 5 and pooling for ValueTasks - Scooletz","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/valuetask/#videos","text":"Understanding how to use Task and ValueTask When to use ValueTask instead of Task and save precious memory in C# Task vs ValueTask: When Should I use ValueTask?","title":"\ud83d\udcf9 Videos"},{"location":"csharp/async/async-collections/async-collections/","text":"Async Collections \u00b6","title":"Async Collections"},{"location":"csharp/async/async-collections/async-collections/#async-collections","text":"","title":"Async Collections"},{"location":"csharp/async/async-collections/async-stream-and-iEnumerableAsync/","text":"Async Stream And IEnumerableAsync \u00b6 \ud83d\udcdd Articles \u00b6 Use streaming in ASP.NET Core SignalR Async Streams Iterating with Async Enumerables in C# 8 Async Streams with IAsyncEnumerable in .NET Core 3 IAsyncEnumerable Is Your Friend, Even In .NET Core 2.x Asynchronous streams in C# 8.0 gRPC and C# 8 Async stream gRPC and C# 8 Async stream cancellation Videos \u00b6 C# Async Yield Return: IAsyncEnumerable will change your life!!! Is Parallel.For/ForEach in C# actually worth it? (and how to modernize it)","title":"Async Stream And IEnumerableAsync"},{"location":"csharp/async/async-collections/async-stream-and-iEnumerableAsync/#async-stream-and-ienumerableasync","text":"","title":"Async Stream And IEnumerableAsync"},{"location":"csharp/async/async-collections/async-stream-and-iEnumerableAsync/#articles","text":"Use streaming in ASP.NET Core SignalR Async Streams Iterating with Async Enumerables in C# 8 Async Streams with IAsyncEnumerable in .NET Core 3 IAsyncEnumerable Is Your Friend, Even In .NET Core 2.x Asynchronous streams in C# 8.0 gRPC and C# 8 Async stream gRPC and C# 8 Async stream cancellation","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/async-collections/async-stream-and-iEnumerableAsync/#videos","text":"C# Async Yield Return: IAsyncEnumerable will change your life!!! Is Parallel.For/ForEach in C# actually worth it? (and how to modernize it)","title":"Videos"},{"location":"csharp/async/async-collections/blocking-collection/","text":"BlockingCollection \u00b6 \ud83d\udcdd Articles \u00b6 BlockingCollection Overview Event-driven .NET: Concurrent Producer/Consumer using BlockingCollection An introduction to BlockingCollection","title":"Blocking Collection"},{"location":"csharp/async/async-collections/blocking-collection/#blockingcollection","text":"","title":"BlockingCollection"},{"location":"csharp/async/async-collections/blocking-collection/#articles","text":"BlockingCollection Overview Event-driven .NET: Concurrent Producer/Consumer using BlockingCollection An introduction to BlockingCollection","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/async-collections/iterators/","text":"Iterators \u00b6 \ud83d\udcdd Articles \u00b6 Iterators Iterators (C#) yield (C# Reference) Iterators, iterator blocks and data pipelines IEnumerator Interface IEnumerableT Interface Videos \u00b6 C# Yield Return: What is it and how does it work?","title":"Iterators"},{"location":"csharp/async/async-collections/iterators/#iterators","text":"","title":"Iterators"},{"location":"csharp/async/async-collections/iterators/#articles","text":"Iterators Iterators (C#) yield (C# Reference) Iterators, iterator blocks and data pipelines IEnumerator Interface IEnumerableT Interface","title":"\ud83d\udcdd Articles"},{"location":"csharp/async/async-collections/iterators/#videos","text":"C# Yield Return: What is it and how does it work?","title":"Videos"},{"location":"csharp/async/async-collections/lazy-initialization/","text":"Lazy Initialization \u00b6 \ud83d\udcdd Articles \u00b6 Lazy Initialization","title":"Lazy Initialization"},{"location":"csharp/async/async-collections/lazy-initialization/#lazy-initialization","text":"","title":"Lazy Initialization"},{"location":"csharp/async/async-collections/lazy-initialization/#articles","text":"Lazy Initialization","title":"\ud83d\udcdd Articles"},{"location":"csharp/collections/collection-data-structure/","text":"Collections & Data Structures \u00b6 Resources \u00b6 An overview of c# collections - RIP Tutorial Articles \u00b6 Selecting a Collection Class Know your data structures \u2013 List vs Dictionary vs HashSet Collections and Data Structures Thread-Safe Collections","title":"Collections & Data Structure"},{"location":"csharp/collections/collection-data-structure/#collections-data-structures","text":"","title":"Collections &amp; Data Structures"},{"location":"csharp/collections/collection-data-structure/#resources","text":"An overview of c# collections - RIP Tutorial","title":"Resources"},{"location":"csharp/collections/collection-data-structure/#articles","text":"Selecting a Collection Class Know your data structures \u2013 List vs Dictionary vs HashSet Collections and Data Structures Thread-Safe Collections","title":"Articles"},{"location":"csharp/collections/enumerable/","text":"Enumerable \u00b6 Articles \u00b6 Enumeration in .NET Enumeration in .NET II \u2014 Count() Enumeration in .NET III \u2014 Enumerable.Empty () Enumeration in .NET IV \u2014 Finding an item Enumeration in .NET V ToList() or not ToList()? Array iteration performance in C# \u2014 Branching and parallelization Array iteration performance in C#","title":"Enumerable"},{"location":"csharp/collections/enumerable/#enumerable","text":"","title":"Enumerable"},{"location":"csharp/collections/enumerable/#articles","text":"Enumeration in .NET Enumeration in .NET II \u2014 Count() Enumeration in .NET III \u2014 Enumerable.Empty () Enumeration in .NET IV \u2014 Finding an item Enumeration in .NET V ToList() or not ToList()? Array iteration performance in C# \u2014 Branching and parallelization Array iteration performance in C#","title":"Articles"},{"location":"csharp/collections/hashset/","text":"HashSet \u00b6","title":"HashSet"},{"location":"csharp/collections/hashset/#hashset","text":"","title":"HashSet"},{"location":"csharp/versions/","text":"C# \u00b6 C# 7 C# 8 C# 9 C# 10","title":"[C#](index.md)"},{"location":"csharp/versions/#c","text":"C# 7 C# 8 C# 9 C# 10","title":"C#"},{"location":"csharp/versions/10/","text":"C# 10 \u00b6 Articles \u00b6 C# 10.0: Introducing Global Usings A Closer Look at 5 New Features in C# 10 Introducing C# 10 Samples \u00b6 khalidabuhakmeh/CsharpTenFeatures - C# 10 Features in one console application","title":"C# 10"},{"location":"csharp/versions/10/#c-10","text":"","title":"C# 10"},{"location":"csharp/versions/10/#articles","text":"C# 10.0: Introducing Global Usings A Closer Look at 5 New Features in C# 10 Introducing C# 10","title":"Articles"},{"location":"csharp/versions/10/#samples","text":"khalidabuhakmeh/CsharpTenFeatures - C# 10 Features in one console application","title":"Samples"},{"location":"csharp/versions/7/","text":"C# 7 \u00b6 \ud83d\udcdd Articles \u00b6 What\u2019s new in C# 7.0 through C# 7.3 Pattern Matching for C# 7 AN INTRODUCTION TO OPTIMISING CODE USING SPAN How to use Span and Memory Videos \u00b6 Connect; 2017 C# 7 2 Understanding Span A (brief) overview of Span\u2264T\u2265 - David Wengier Jeffrey Richter \u00abEfficient Buffer Manipulation using C# 7.2\u2019s Span\u00bb \u21a5 Back To Top","title":"C# 7"},{"location":"csharp/versions/7/#c-7","text":"","title":"C# 7"},{"location":"csharp/versions/7/#articles","text":"What\u2019s new in C# 7.0 through C# 7.3 Pattern Matching for C# 7 AN INTRODUCTION TO OPTIMISING CODE USING SPAN How to use Span and Memory","title":"\ud83d\udcdd Articles"},{"location":"csharp/versions/7/#videos","text":"Connect; 2017 C# 7 2 Understanding Span A (brief) overview of Span\u2264T\u2265 - David Wengier Jeffrey Richter \u00abEfficient Buffer Manipulation using C# 7.2\u2019s Span\u00bb \u21a5 Back To Top","title":"Videos"},{"location":"csharp/versions/8/","text":"C# 8 \u00b6 \ud83d\udcdd Articles \u00b6 What\u2019s new in C# 8.0 The 8 most missing features in C# Nullable reference types Tutorial: Migrate existing code with nullable reference types How Do C#\u2019s Nullable Reference Types Work? Nullable Reference types in C# \u2013 Best practices Videos \u00b6 C# Nullable reference types \u2013 No more null reference exceptions! \u21a5 Back To Top","title":"C# 8"},{"location":"csharp/versions/8/#c-8","text":"","title":"C# 8"},{"location":"csharp/versions/8/#articles","text":"What\u2019s new in C# 8.0 The 8 most missing features in C# Nullable reference types Tutorial: Migrate existing code with nullable reference types How Do C#\u2019s Nullable Reference Types Work? Nullable Reference types in C# \u2013 Best practices","title":"\ud83d\udcdd Articles"},{"location":"csharp/versions/8/#videos","text":"C# Nullable reference types \u2013 No more null reference exceptions! \u21a5 Back To Top","title":"Videos"},{"location":"csharp/versions/9/","text":"C# 9 \u00b6 \ud83d\udcdd Articles \u00b6 What\u2019s new in C# 9.0 Top-level programs in C# 9.0 Explore ideas using top-level statements to build code as you learn - Microsoft PLAYING WITH C#9 TOP-LEVEL PROGRAMS, RECORDS AND ELASTICSEARCH.NET Using Tuples in C# to Initialize Properties in the Constructor and to Deconstruct Your Object C# 9 new features for methods and functions How to use configuration with C# 9 top-level programs C# 9 Deep Dive: Top-Level Programs C# 9 Deep Dive: Pattern Matching C# 9 Deep Dive: Records C# 9 Deep Dive: Init-only features C# 9 Deep Dive: Target Typing and Covariant Returns Avoid C# 9 Record Gotchas C# 9.0 on the record C# 9.0 Features and Expectations of C# 10 C# 9.0: Init-only Properties \u2013 Create Immutable Properties Without Constructor Boilerplate C# 9.0: Top-level Statements. Or Should I Say: Hey, Where\u2019s the Main Method? C# 9.0: Covariant Return Types \u2013 Specify More Specific Return Types in Overridden Methods and Properties C# 9.0: Pattern Matching in Switch Expressions C# 9.0: Target-typed New Expressions \u2013 Make Your Initialization Code Less Verbose C# 9.0: Records \u2013 Work With Immutable Data Classes C# 9.0: Improved Pattern Matching C# 9.0: Init-only properties ICYMI C# 9 New Features: Top-level Statements Pattern-matching changes for C# 9.0 Record Types in C# 9.0 Videos \u00b6 The Top 10 Best New Features in C# Version 6 to 9, by Chris Klug C# 9 New Features - Top level code, Records, Init Setters C# 9.0: Record types C# 9 Language Highlights The top 10 best new features in C# version 6 to 9 - Chris Klug What\u2019s new in .NET 5 and C# 9 \u21a5 Back To Top","title":"C# 9"},{"location":"csharp/versions/9/#c-9","text":"","title":"C# 9"},{"location":"csharp/versions/9/#articles","text":"What\u2019s new in C# 9.0 Top-level programs in C# 9.0 Explore ideas using top-level statements to build code as you learn - Microsoft PLAYING WITH C#9 TOP-LEVEL PROGRAMS, RECORDS AND ELASTICSEARCH.NET Using Tuples in C# to Initialize Properties in the Constructor and to Deconstruct Your Object C# 9 new features for methods and functions How to use configuration with C# 9 top-level programs C# 9 Deep Dive: Top-Level Programs C# 9 Deep Dive: Pattern Matching C# 9 Deep Dive: Records C# 9 Deep Dive: Init-only features C# 9 Deep Dive: Target Typing and Covariant Returns Avoid C# 9 Record Gotchas C# 9.0 on the record C# 9.0 Features and Expectations of C# 10 C# 9.0: Init-only Properties \u2013 Create Immutable Properties Without Constructor Boilerplate C# 9.0: Top-level Statements. Or Should I Say: Hey, Where\u2019s the Main Method? C# 9.0: Covariant Return Types \u2013 Specify More Specific Return Types in Overridden Methods and Properties C# 9.0: Pattern Matching in Switch Expressions C# 9.0: Target-typed New Expressions \u2013 Make Your Initialization Code Less Verbose C# 9.0: Records \u2013 Work With Immutable Data Classes C# 9.0: Improved Pattern Matching C# 9.0: Init-only properties ICYMI C# 9 New Features: Top-level Statements Pattern-matching changes for C# 9.0 Record Types in C# 9.0","title":"\ud83d\udcdd Articles"},{"location":"csharp/versions/9/#videos","text":"The Top 10 Best New Features in C# Version 6 to 9, by Chris Klug C# 9 New Features - Top level code, Records, Init Setters C# 9.0: Record types C# 9 Language Highlights The top 10 best new features in C# version 6 to 9 - Chris Klug What\u2019s new in .NET 5 and C# 9 \u21a5 Back To Top","title":"Videos"},{"location":"dotnet/dotnet-core-architecture/","text":"DotNet Core Architecture \u00b6 \ud83d\udcdd Articles \u00b6 ASP.NET CORE ANATOMY \u2013 HOW DOES USESTARTUP WORK? ASP.NET CORE ANATOMY (PART 2) \u2013 ADDMVC ASP.NET CORE ANATOMY (PART 3) \u2013 USEMVC ASP.NET CORE ANATOMY (PART 4) \u2013 INVOKING THE MVC MIDDLEWARE Deep-dive into .NET Core primitives: deps.json, runtimeconfig.json, and dll\u2019s Deep-dive into .NET Core primitives, part 2: the shared framework Deep-dive into .NET Core primitives, part 3: runtimeconfig.json in depth \ud83d\udcf9 Videos \u00b6 ASP.NET Community Standup - ASP.NET Core Architecture with David Fowler ASP.NET Core Architecture: Part 3 ASP.NET Community Standup - ASP.NET Core Architecture: Part 2 Munich .NET Meetup: Anatomy of ASP.NET Core Requests by Steve Gordon \u21a5 Back To Top","title":"DotNet Core Architecture"},{"location":"dotnet/dotnet-core-architecture/#dotnet-core-architecture","text":"","title":"DotNet Core Architecture"},{"location":"dotnet/dotnet-core-architecture/#articles","text":"ASP.NET CORE ANATOMY \u2013 HOW DOES USESTARTUP WORK? ASP.NET CORE ANATOMY (PART 2) \u2013 ADDMVC ASP.NET CORE ANATOMY (PART 3) \u2013 USEMVC ASP.NET CORE ANATOMY (PART 4) \u2013 INVOKING THE MVC MIDDLEWARE Deep-dive into .NET Core primitives: deps.json, runtimeconfig.json, and dll\u2019s Deep-dive into .NET Core primitives, part 2: the shared framework Deep-dive into .NET Core primitives, part 3: runtimeconfig.json in depth","title":"\ud83d\udcdd Articles"},{"location":"dotnet/dotnet-core-architecture/#videos","text":"ASP.NET Community Standup - ASP.NET Core Architecture with David Fowler ASP.NET Core Architecture: Part 3 ASP.NET Community Standup - ASP.NET Core Architecture: Part 2 Munich .NET Meetup: Anatomy of ASP.NET Core Requests by Steve Gordon \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"dotnet/dotnet-core-tips/","text":".Net Core Tips \u00b6 \ud83d\udcdd Articles \u00b6 davidfowl/AspNetCoreGuidance \ud83d\udd16 Samples \u00b6 davidfowl/AspNetCoreDiagnosticScenarios This repository has examples of broken patterns in ASP.NET Core applications davidfowl/DotNetCodingPatterns A collection of coding patterns in no particular order","title":".Net Core Tips"},{"location":"dotnet/dotnet-core-tips/#net-core-tips","text":"","title":".Net Core Tips"},{"location":"dotnet/dotnet-core-tips/#articles","text":"davidfowl/AspNetCoreGuidance","title":"\ud83d\udcdd Articles"},{"location":"dotnet/dotnet-core-tips/#samples","text":"davidfowl/AspNetCoreDiagnosticScenarios This repository has examples of broken patterns in ASP.NET Core applications davidfowl/DotNetCodingPatterns A collection of coding patterns in no particular order","title":"\ud83d\udd16 Samples"},{"location":"dotnet/dotnet-core/","text":"ASP.Net Core \u00b6 Resources \u00b6 ASP.NET Core Application Architecture ASP.NET Core architecture e-book Porting existing ASP.NET Apps to .NET Core e-book \ud83d\udcdd Articles \u00b6 What\u2019s new in ASP.NET Core 2.1 What\u2019s new in ASP.NET Core 2.2 What\u2019s new in ASP.NET Core 3.0 What\u2019s new in ASP.NET Core 3.1 What\u2019s new in ASP.NET Core 5.0 ASP.NET Core updates in .NET 6 Preview 4 ASP.NET Core updates in .NET 6 Preview 5 ASP.NET Core updates in .NET 6 Preview 6 Migrate from ASP.NET Core 2.2 to 3.0 Migrate from ASP.NET Core 3.0 to 3.1 Migrate from ASP.NET Core 3.1 to 5.0 .NET Core Transitive Dependencies and how to block them What is a Transitive dependency in .NET Core Framework Reference Deep-dive into .NET Core primitives: deps.json, runtimeconfig.json, and dll\u2019s Deep-dive into .NET Core primitives, part 2: the shared framework Deep-dive into .NET Core primitives, part 3: runtimeconfig.json in depth When ASP.NET Core can\u2019t find your controller: debugging application parts Share controllers, views, Razor Pages and more with Application Parts Work with the application model in ASP.NET Core ASP.NET CORE MVC ANATOMY (PART 1) \u2013 ADDMVCCORE \ud83d\udcf9 Videos \u00b6 Migrating to .NET Core 3 | ASP.NET Core 2.2 & 3 REST API Tutorial 16 Upgrading to .NET Core 3.1 (Real Life Project) Upgrading to .NET 5.0 RC w/ C# 9.0 Cleanup Transitive Dependencies in .NET with Snitch- CodeWithStu ASP.NET Community Standup - ASP.NET Core updates in .NET 6 Upgrading ASP.NET Core API to .NET 6 The next 5 years of ASP.NET Core - Ryan Nowak Samples \u00b6 dodyg/practical-aspnetcore - Practical samples of ASP.NET Core 2.1, 2.2, 3.1, 5.0 and 6.0 Preview 5 projects you can use. Readme contains explanations on all projects. \ud83d\udce6 Libraries \u00b6 dotnet/try-convert - Helping .NET developers port their projects to .NET Core! \u21a5 Back To Top","title":"ASP.Net Core"},{"location":"dotnet/dotnet-core/#aspnet-core","text":"","title":"ASP.Net Core"},{"location":"dotnet/dotnet-core/#resources","text":"ASP.NET Core Application Architecture ASP.NET Core architecture e-book Porting existing ASP.NET Apps to .NET Core e-book","title":"Resources"},{"location":"dotnet/dotnet-core/#articles","text":"What\u2019s new in ASP.NET Core 2.1 What\u2019s new in ASP.NET Core 2.2 What\u2019s new in ASP.NET Core 3.0 What\u2019s new in ASP.NET Core 3.1 What\u2019s new in ASP.NET Core 5.0 ASP.NET Core updates in .NET 6 Preview 4 ASP.NET Core updates in .NET 6 Preview 5 ASP.NET Core updates in .NET 6 Preview 6 Migrate from ASP.NET Core 2.2 to 3.0 Migrate from ASP.NET Core 3.0 to 3.1 Migrate from ASP.NET Core 3.1 to 5.0 .NET Core Transitive Dependencies and how to block them What is a Transitive dependency in .NET Core Framework Reference Deep-dive into .NET Core primitives: deps.json, runtimeconfig.json, and dll\u2019s Deep-dive into .NET Core primitives, part 2: the shared framework Deep-dive into .NET Core primitives, part 3: runtimeconfig.json in depth When ASP.NET Core can\u2019t find your controller: debugging application parts Share controllers, views, Razor Pages and more with Application Parts Work with the application model in ASP.NET Core ASP.NET CORE MVC ANATOMY (PART 1) \u2013 ADDMVCCORE","title":"\ud83d\udcdd Articles"},{"location":"dotnet/dotnet-core/#videos","text":"Migrating to .NET Core 3 | ASP.NET Core 2.2 & 3 REST API Tutorial 16 Upgrading to .NET Core 3.1 (Real Life Project) Upgrading to .NET 5.0 RC w/ C# 9.0 Cleanup Transitive Dependencies in .NET with Snitch- CodeWithStu ASP.NET Community Standup - ASP.NET Core updates in .NET 6 Upgrading ASP.NET Core API to .NET 6 The next 5 years of ASP.NET Core - Ryan Nowak","title":"\ud83d\udcf9 Videos"},{"location":"dotnet/dotnet-core/#samples","text":"dodyg/practical-aspnetcore - Practical samples of ASP.NET Core 2.1, 2.2, 3.1, 5.0 and 6.0 Preview 5 projects you can use. Readme contains explanations on all projects.","title":"Samples"},{"location":"dotnet/dotnet-core/#libraries","text":"dotnet/try-convert - Helping .NET developers port their projects to .NET Core! \u21a5 Back To Top","title":"\ud83d\udce6 Libraries"},{"location":"dotnet/dotnet-standard/","text":".Net Standard \u00b6 \ud83d\udcdd Articles \u00b6 .NET Standard - Microsoft \ud83d\udcf9 Videos \u00b6 Big Changes in .NET 5, C# 9, and Visual Studio 2019 - IAmTimCorey \u21a5 Back To Top","title":".Net Standard"},{"location":"dotnet/dotnet-standard/#net-standard","text":"","title":".Net Standard"},{"location":"dotnet/dotnet-standard/#articles","text":".NET Standard - Microsoft","title":"\ud83d\udcdd Articles"},{"location":"dotnet/dotnet-standard/#videos","text":"Big Changes in .NET 5, C# 9, and Visual Studio 2019 - IAmTimCorey \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"dotnet/dotnet-template/","text":".Net Template \u00b6 Articles \u00b6 Custom templates for dotnet new HOW TO CREATE NEW MICROSERVICES EASILY WITH DOTNET CUSTOM TEMPLATES How to create your own templates for dotnet new Reference for template.json How to create your .NET project template to use with .NET CLI and Visual Studio Videos \u00b6 On .NET Live - Creating your own .NET Project Templates Templates \u00b6 pereiren/dotnet-template-onion - Onion Architecture with .NET 5/.NET Core and CQRS/Event Sourcing following a DDD approach Dotnet-Boxed/Framework - .NET Core Extensions and Helper NuGet packages. Dotnet-Boxed/Templates - .NET project templates with batteries included, providing the minimum amount of code required to get you going faster. blazorhero/CleanArchitecture - Clean Architecture Template for Blazor WebAssembly Built with MudBlazor Components. iammukeshm/OnionArchitecture - The onion architecture, introduced by Jeffrey Palermo, overcomes the issues of the layered architecture with great ease. With Onion Architecture, the game-changer is that the Domain Layer (Entities and Validation Rules that are common to the business case ) is at the Core of the Entire Application. This means higher flexibility and lesser coupling iammukeshm/CleanArchitecture.WebApi - An implementation of Clean Architecture for ASP.NET Core 3.1 WebAPI. Built with loosely coupled architecture and clean-code practices in mind. ardalis/CleanArchitecture - A starting point for Clean Architecture with ASP.NET Core Amitpnk/Clean-Architecture-ASP.NET-Core - Complete solution template which is built on Clean Architecture with all essential feature, CI/CD, best practice, testing Strategy using the testing pyramid and documentation using .NET 5! Amitpnk/Onion-architecture-ASP.NET-Core - WhiteApp API solution template which is built on Onion Architecture with all essential feature using .NET 5! jasontaylordev/CleanArchitecture - Clean Architecture Solution Template for Angular 10 and .NET 5 aspnet-core-react-template - ASP.NET Core 3.1 / React SPA Template App NickMaev/react-core-boilerplate - Powerful ASP.NET Core 3 templates with React, true server-side rendering and Docker support CodAffection/React-CRUD-with-Asp.Net-Core-Web-API - Full Stack React js CRUD with Asp.Net Core Web microsoft/AspNetCore-React-WebApp - ASP.NET Core backend + React frontend + Entity Framework Core + automated testing based-ghost/aspnet-core-react-redux-playground-template - SPA template built with ASP.NET Core 5.0 + React + Redux + TypeScript + Hot Module Replacement (HMR) NetCoreTemplates/react-spa - .NET 5.0 React Create App CLI Bootstrap App TrilonIO/aspnetcore-Vue-starter - Asp.net Core & Vue.js (ES6) SPA Starter kit - Vuex, webpack, Web API, Docker, and more! SoftwareAteliers/asp-net-core-vue-starter - ASP.NET Core + Vue.js starter project danijelh/aspnetcore-vue-typescript-template - Template AspNetCore with Vue, Vue router, Vuex, TypeScript, Bulma, Sass and Jest NetCoreTemplates/vue-spa - .NET 5.0 Vue CLI Bootstrap App damienbod/AspNetCoreMvcVueJs - ASP.NET Core with Vue.js based-ghost/aspnet-core-vue-vuex-playground-template - SPA template built with ASP.NET Core 5.0 + Vue + Vuex + TypeScript + Hot Module Replacement (HMR) TrilonIO/aspnetcore-angular-universal - ASP.NET Core & Angular Universal advanced starter - PWA w/ server-side rendering for SEO, Bootstrap, i18n internationalization, TypeScript, unit testing, WebAPI REST setup, SignalR, Swagger docs, and more! emonney/QuickApp - ASP.NET Core 3.1 / Angular 9 startup project template with complete login, user and role management. Plus other useful services for Quick Application Development FabianGosebrink/ASPNETCore-Angular-Ngrx - An ASP.NET Core WebAPI Demo with an Angular Client using Ngrx store and effects and Signalr jasontaylordev/SecureSpa - ASP.NET Core 3 + Angular 8 + ASP.NET Identity generated using .NET Core SDK DanWahlin/AngularCLI-ASPNET-Core-CustomersService - Example of integrating Angular with ASP.NET Core RESTful Services NetCoreTemplates/angular-spa - .NET 5.0 Angular 9 CLI Bootstrap App \u21a5 Back To Top","title":".Net Template"},{"location":"dotnet/dotnet-template/#net-template","text":"","title":".Net Template"},{"location":"dotnet/dotnet-template/#articles","text":"Custom templates for dotnet new HOW TO CREATE NEW MICROSERVICES EASILY WITH DOTNET CUSTOM TEMPLATES How to create your own templates for dotnet new Reference for template.json How to create your .NET project template to use with .NET CLI and Visual Studio","title":"Articles"},{"location":"dotnet/dotnet-template/#videos","text":"On .NET Live - Creating your own .NET Project Templates","title":"Videos"},{"location":"dotnet/dotnet-template/#templates","text":"pereiren/dotnet-template-onion - Onion Architecture with .NET 5/.NET Core and CQRS/Event Sourcing following a DDD approach Dotnet-Boxed/Framework - .NET Core Extensions and Helper NuGet packages. Dotnet-Boxed/Templates - .NET project templates with batteries included, providing the minimum amount of code required to get you going faster. blazorhero/CleanArchitecture - Clean Architecture Template for Blazor WebAssembly Built with MudBlazor Components. iammukeshm/OnionArchitecture - The onion architecture, introduced by Jeffrey Palermo, overcomes the issues of the layered architecture with great ease. With Onion Architecture, the game-changer is that the Domain Layer (Entities and Validation Rules that are common to the business case ) is at the Core of the Entire Application. This means higher flexibility and lesser coupling iammukeshm/CleanArchitecture.WebApi - An implementation of Clean Architecture for ASP.NET Core 3.1 WebAPI. Built with loosely coupled architecture and clean-code practices in mind. ardalis/CleanArchitecture - A starting point for Clean Architecture with ASP.NET Core Amitpnk/Clean-Architecture-ASP.NET-Core - Complete solution template which is built on Clean Architecture with all essential feature, CI/CD, best practice, testing Strategy using the testing pyramid and documentation using .NET 5! Amitpnk/Onion-architecture-ASP.NET-Core - WhiteApp API solution template which is built on Onion Architecture with all essential feature using .NET 5! jasontaylordev/CleanArchitecture - Clean Architecture Solution Template for Angular 10 and .NET 5 aspnet-core-react-template - ASP.NET Core 3.1 / React SPA Template App NickMaev/react-core-boilerplate - Powerful ASP.NET Core 3 templates with React, true server-side rendering and Docker support CodAffection/React-CRUD-with-Asp.Net-Core-Web-API - Full Stack React js CRUD with Asp.Net Core Web microsoft/AspNetCore-React-WebApp - ASP.NET Core backend + React frontend + Entity Framework Core + automated testing based-ghost/aspnet-core-react-redux-playground-template - SPA template built with ASP.NET Core 5.0 + React + Redux + TypeScript + Hot Module Replacement (HMR) NetCoreTemplates/react-spa - .NET 5.0 React Create App CLI Bootstrap App TrilonIO/aspnetcore-Vue-starter - Asp.net Core & Vue.js (ES6) SPA Starter kit - Vuex, webpack, Web API, Docker, and more! SoftwareAteliers/asp-net-core-vue-starter - ASP.NET Core + Vue.js starter project danijelh/aspnetcore-vue-typescript-template - Template AspNetCore with Vue, Vue router, Vuex, TypeScript, Bulma, Sass and Jest NetCoreTemplates/vue-spa - .NET 5.0 Vue CLI Bootstrap App damienbod/AspNetCoreMvcVueJs - ASP.NET Core with Vue.js based-ghost/aspnet-core-vue-vuex-playground-template - SPA template built with ASP.NET Core 5.0 + Vue + Vuex + TypeScript + Hot Module Replacement (HMR) TrilonIO/aspnetcore-angular-universal - ASP.NET Core & Angular Universal advanced starter - PWA w/ server-side rendering for SEO, Bootstrap, i18n internationalization, TypeScript, unit testing, WebAPI REST setup, SignalR, Swagger docs, and more! emonney/QuickApp - ASP.NET Core 3.1 / Angular 9 startup project template with complete login, user and role management. Plus other useful services for Quick Application Development FabianGosebrink/ASPNETCore-Angular-Ngrx - An ASP.NET Core WebAPI Demo with an Angular Client using Ngrx store and effects and Signalr jasontaylordev/SecureSpa - ASP.NET Core 3 + Angular 8 + ASP.NET Identity generated using .NET Core SDK DanWahlin/AngularCLI-ASPNET-Core-CustomersService - Example of integrating Angular with ASP.NET Core RESTful Services NetCoreTemplates/angular-spa - .NET 5.0 Angular 9 CLI Bootstrap App \u21a5 Back To Top","title":"Templates"},{"location":"dotnet/dotnet/","text":".NET \u00b6 Resources \u00b6 Introducing The .NET Coding Pack for VS Code - Getting Started with C# for Beginners \ud83d\udcdd Articles \u00b6 The Many Flavors of .NET - Sean Killeen .NET Basics \ud83d\udcf9 Videos \u00b6 What is .NET? What\u2019s C# and F#? What\u2019s the .NET Ecosystem? .NET Core Explained, what can .NET build? .NET Hot Reload; Update Code While Running","title":".Net"},{"location":"dotnet/dotnet/#net","text":"","title":".NET"},{"location":"dotnet/dotnet/#resources","text":"Introducing The .NET Coding Pack for VS Code - Getting Started with C# for Beginners","title":"Resources"},{"location":"dotnet/dotnet/#articles","text":"The Many Flavors of .NET - Sean Killeen .NET Basics","title":"\ud83d\udcdd Articles"},{"location":"dotnet/dotnet/#videos","text":"What is .NET? What\u2019s C# and F#? What\u2019s the .NET Ecosystem? .NET Core Explained, what can .NET build? .NET Hot Reload; Update Code While Running","title":"\ud83d\udcf9 Videos"},{"location":"dotnet/dotnet5/","text":".Net 5 \u00b6 \ud83d\udcdd Articles \u00b6 Announcing .NET 5.0 - DevBlogs Announcing ASP.NET Core in .NET 5 What\u2019s new in .NET 5 - Microsoft Performance Improvements in .NET 5 - DevBlogs Videos \u00b6 What\u2019s new in .NET 5 and C# 9 \u21a5 Back To Top","title":".Net 5"},{"location":"dotnet/dotnet5/#net-5","text":"","title":".Net 5"},{"location":"dotnet/dotnet5/#articles","text":"Announcing .NET 5.0 - DevBlogs Announcing ASP.NET Core in .NET 5 What\u2019s new in .NET 5 - Microsoft Performance Improvements in .NET 5 - DevBlogs","title":"\ud83d\udcdd Articles"},{"location":"dotnet/dotnet5/#videos","text":"What\u2019s new in .NET 5 and C# 9 \u21a5 Back To Top","title":"Videos"},{"location":"dotnet/dotnet6/","text":".Net 6 \u00b6 Articles \u00b6 Announcing .NET 6 Preview 4 Announcing .NET 6 Preview 5 Date, Time, and Time Zone Enhancements in .NET 6 .NET 6: Collections Improvements Videos \u00b6 ASP.NET Community Standup - ASP.NET Core updates in .NET 6 The future of modern application development with .NET Upgrading ASP.NET Core API to .NET 6 Languages & Runtime Community Standup - Breaking changes & .NET 6 Preview 6 and 7 Samples \u00b6 dodyg/practical-aspnetcore/tree/net5.0/projects/net6","title":".Net 6"},{"location":"dotnet/dotnet6/#net-6","text":"","title":".Net 6"},{"location":"dotnet/dotnet6/#articles","text":"Announcing .NET 6 Preview 4 Announcing .NET 6 Preview 5 Date, Time, and Time Zone Enhancements in .NET 6 .NET 6: Collections Improvements","title":"Articles"},{"location":"dotnet/dotnet6/#videos","text":"ASP.NET Community Standup - ASP.NET Core updates in .NET 6 The future of modern application development with .NET Upgrading ASP.NET Core API to .NET 6 Languages & Runtime Community Standup - Breaking changes & .NET 6 Preview 6 and 7","title":"Videos"},{"location":"dotnet/dotnet6/#samples","text":"dodyg/practical-aspnetcore/tree/net5.0/projects/net6","title":"Samples"},{"location":"dotnet/il/","text":".Net IL \u00b6 Articles \u00b6 .NET IL Generation - Writing DeepCopy [C#] How method calling works Tools \u00b6 SharpLab DotPeek Libraries \u00b6 kevin-montrose/Sigil - A fail-fast validating helper for .NET CIL generation","title":".Net IL"},{"location":"dotnet/il/#net-il","text":"","title":".Net IL"},{"location":"dotnet/il/#articles","text":".NET IL Generation - Writing DeepCopy [C#] How method calling works","title":"Articles"},{"location":"dotnet/il/#tools","text":"SharpLab DotPeek","title":"Tools"},{"location":"dotnet/il/#libraries","text":"kevin-montrose/Sigil - A fail-fast validating helper for .NET CIL generation","title":"Libraries"},{"location":"dotnet/metapack/","text":"MetaPack \u00b6 \ud83d\udcdd Articles \u00b6 Microsoft.AspNetCore.App for ASP.NET Core Microsoft.AspNetCore.All metapackage for ASP.NET Core 2.0 Deep-dive into .NET Core primitives, part 2: the shared framework Framework Reference Deep-dive into .NET Core primitives: deps.json, runtimeconfig.json, and dll\u2019s Deep-dive into .NET Core primitives, part 2: the shared framework Deep-dive into .NET Core primitives, part 3: runtimeconfig.json in depth \u21a5 Back To Top","title":"MetaPack"},{"location":"dotnet/metapack/#metapack","text":"","title":"MetaPack"},{"location":"dotnet/metapack/#articles","text":"Microsoft.AspNetCore.App for ASP.NET Core Microsoft.AspNetCore.All metapackage for ASP.NET Core 2.0 Deep-dive into .NET Core primitives, part 2: the shared framework Framework Reference Deep-dive into .NET Core primitives: deps.json, runtimeconfig.json, and dll\u2019s Deep-dive into .NET Core primitives, part 2: the shared framework Deep-dive into .NET Core primitives, part 3: runtimeconfig.json in depth \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"dotnet-cli/dotnet-cli/","text":".Net CLI \u00b6 \ud83d\udcdd Articles \u00b6 .NET CLI overview Custom templates for dotnet new \u21a5 Back To Top","title":".Net CLI"},{"location":"dotnet-cli/dotnet-cli/#net-cli","text":"","title":".Net CLI"},{"location":"dotnet-cli/dotnet-cli/#articles","text":".NET CLI overview Custom templates for dotnet new \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"dotnet-cli/dotnet-tools/","text":".Net Tools \u00b6 \ud83d\udcdd Articles \u00b6 Using .NET Core Tools to Create Reusable and Shareable Tools & Apps How to manage .NET tools dotnet tool search dotnet tool install dotnet tool list Tutorial: Create a .NET tool using the .NET CLI Collect diagnostics in containers \ud83d\udce6 Libraries \u00b6 dotnet-tools - A list of tools to extend the .NET Core command line (dotnet) Investigate performance counters (dotnet-counters) - .NET Core Performance Counter Tool lowleveldesign/dotnet-wtrace - A command-line tool for live tracing .NET applications, based on Event Pipes. \u21a5 Back To Top","title":".Net Tools"},{"location":"dotnet-cli/dotnet-tools/#net-tools","text":"","title":".Net Tools"},{"location":"dotnet-cli/dotnet-tools/#articles","text":"Using .NET Core Tools to Create Reusable and Shareable Tools & Apps How to manage .NET tools dotnet tool search dotnet tool install dotnet tool list Tutorial: Create a .NET tool using the .NET CLI Collect diagnostics in containers","title":"\ud83d\udcdd Articles"},{"location":"dotnet-cli/dotnet-tools/#libraries","text":"dotnet-tools - A list of tools to extend the .NET Core command line (dotnet) Investigate performance counters (dotnet-counters) - .NET Core Performance Counter Tool lowleveldesign/dotnet-wtrace - A command-line tool for live tracing .NET applications, based on Event Pipes. \u21a5 Back To Top","title":"\ud83d\udce6 Libraries"},{"location":"dotnet-cli/dotnet-watch/","text":".Net Watch \u00b6 Articles \u00b6 Introducing the .NET Hot Reload experience for editing code at runtime Live Coding In .NET Core Using \u201cdotnet watch\u201d Watching More Files With Dotnet Watch For Static Sites Using dotnet watch run with JetBrains Rider","title":".Net Watch"},{"location":"dotnet-cli/dotnet-watch/#net-watch","text":"","title":".Net Watch"},{"location":"dotnet-cli/dotnet-watch/#articles","text":"Introducing the .NET Hot Reload experience for editing code at runtime Live Coding In .NET Core Using \u201cdotnet watch\u201d Watching More Files With Dotnet Watch For Static Sites Using dotnet watch run with JetBrains Rider","title":"Articles"},{"location":"dotnet-cli/upgrade-assistant/","text":"Upgrade Assistant \u00b6 Articles \u00b6 Overview of the .NET Upgrade Assistant Meet the .NET Upgrade Assistant, Your .NET 5 Moving Company","title":"Upgrade Assistant"},{"location":"dotnet-cli/upgrade-assistant/#upgrade-assistant","text":"","title":"Upgrade Assistant"},{"location":"dotnet-cli/upgrade-assistant/#articles","text":"Overview of the .NET Upgrade Assistant Meet the .NET Upgrade Assistant, Your .NET 5 Moving Company","title":"Articles"},{"location":"ef-core/ef-core-migration/","text":"EF Core Migration \u00b6 Articles \u00b6 EF7 EnsureCreated vs. Migrate Methods Create Database From Model Using Entity Framework Core And ASP.NET Core DatabaseFacade.EnsureCreated Method Using Database Project and DbUp for database management Database change management Converting a Visual Studio database project to use DbUp migrations Using a Separate Migrations Project Migrations Overview Applying Migrations Moving EF Core migrations to their own assembly EF CORE MIGRATIONS WITH DBCONTEXT IN SEPARATE LIBRARY Handling Entity Framework Core database migrations in production \u2013 Part 1 Handling Entity Framework Core database migrations in production \u2013 Part 2 Adding Entity Framework Core 5 migrations to .NET 5 project Merging migrations in Entity Framework Core 5 Handling EF Core migrations in a team How and where to call Database.EnsureCreated and Database.Migrate? Videos \u00b6 Getting Started With DbUp And Setting Up Azure DEVOPS Pipeline | Deploy Changes to SQL Server","title":"EF Core Migrations"},{"location":"ef-core/ef-core-migration/#ef-core-migration","text":"","title":"EF Core Migration"},{"location":"ef-core/ef-core-migration/#articles","text":"EF7 EnsureCreated vs. Migrate Methods Create Database From Model Using Entity Framework Core And ASP.NET Core DatabaseFacade.EnsureCreated Method Using Database Project and DbUp for database management Database change management Converting a Visual Studio database project to use DbUp migrations Using a Separate Migrations Project Migrations Overview Applying Migrations Moving EF Core migrations to their own assembly EF CORE MIGRATIONS WITH DBCONTEXT IN SEPARATE LIBRARY Handling Entity Framework Core database migrations in production \u2013 Part 1 Handling Entity Framework Core database migrations in production \u2013 Part 2 Adding Entity Framework Core 5 migrations to .NET 5 project Merging migrations in Entity Framework Core 5 Handling EF Core migrations in a team How and where to call Database.EnsureCreated and Database.Migrate?","title":"Articles"},{"location":"ef-core/ef-core-migration/#videos","text":"Getting Started With DbUp And Setting Up Azure DEVOPS Pipeline | Deploy Changes to SQL Server","title":"Videos"},{"location":"ef-core/ef-core/","text":"EF Core \u00b6 \ud83d\udcdd Articles \u00b6 Entity Framework Core health check Entity Framework Core 3.0: A Foundation for the Future How to call stored procedures with OUTPUT parameters with FromSqlRaw in EF Core Query non-table classes using ad-hoc (raw) SQL with EF Core 3.1 Mapping and using SQL Server stored procedures with EF Core Power Tools Avoiding SQL Server plan cache pollution with EF Core 3 and Enumerable.Contains How to pass a dynamic/variable list of values as SqlParameters with FromSqlRaw in EF Core EF Core Power Tools database reverse engineering: renaming of entities and properties Change Tracking in EF Core Expression and Projection Magic for Entity Framework Core Database Providers Designing for Related Data without Foreign Keys Automate Database Deployments Efficient querying with LINQ, AutoMapper and Future queries CQRS with Entity Framework Core Entity Framework Exceptions Triggers for Entity Framework Core A robust event-driven architecture for using with Entity Framework Core EfCore.GenericEventRunner: an event-driven library that works with EF Core How slow is LINQ? LINQ: Beware of deferred execution A Cleaner Way To Do Entity Configuration With EF Core Fluent API Configuration Configuring DBContext in Entity framework ASP.NET Core \u2013 Best Practices EF Projections on computed properties and methods without a hassle! EFCore.Projectables and the curious case of an unexpected performance boost Calling functions in LINQ queries LINQ: Building an IQueryable provider series \ud83d\udcf9 Videos \u00b6 Typed Exceptions for Entity Framework Core - Microsoft Entity Framework Community Standup - Performance Tuning an EF Core App Entity Framework Community Standup - Julie Lerman and EF Core Ask Me Anything (AMA) Entity Framework Community Standup - Open Source Contributions: How to Add a Feature to EF Core Entity Framework Community Standup - Triggers for EF Core Entity Framework Community Standup - Introducing EF Core Compiled Models Entity Framework Core In-Depth Part 1 Entity Framework Core In-Depth Part 2 Entity Framework Core In-Depth Part 3 Entity Framework Core In-Depth Part 4 Entity Framework Community Standup - Visualizing database query plans \ud83d\udce6 Libraries \u00b6 scottksmith95/LINQKit - LINQKit is a free set of extensions for LINQ to SQL and Entity Framework power users. linq2db.EntityFrameworkCore ErikEJ/EFCorePowerTools - reverse engineering, migrations and model visualization for EF Core EntityFramework.Exceptions - Handle database errors easily when working with Entity Framework Core. Supports SQLServer, PostgreSQL, SQLite, Oracle and MySql thepirat000/Audit.NET - An extensible framework to audit executing operations in .NET and .NET Core. NickStrupat/EntityFramework.Triggers - Adds events for entity inserting, inserted, updating, updated, deleting, and deleted koenbeuk/EntityFrameworkCore.Triggered - Triggers for EFCore. Respond to changes in your DbContext before and after they are committed to the database. koenbeuk/EntityFrameworkCore.Projections - WIP: Project over properties and functions in your linq query EFCore.BulkExtensions - Entity Framework Core Bulk Batch Extensions for Insert Update Delete and Read (CRUD) operations on SQL Server and SQLite DbUp - .NET library that helps you to deploy changes to SQL Server databases. It tracks which SQL scripts have been run already, and runs the change scripts that are needed to get your database up to date. lecaillon/Evolve - Simple database migration tool that uses plain SQL scripts. Inspired by Flyway. ErikEJ/EFCorePowerTools - Entity Framework Core Power Tools - reverse engineering, migrations and model visualization for EF Core. fluentmigrator/fluentmigrator - Fluent migrations framework for .NET SharpRepository/SharpRepository - C# Generic Repository for use with Entity Framework, RavenDB and more with built-in caching options. JonPSmith/EfCore.GenericEventRunner - A library to allow developer use events to update their database via Entity Framework Core (EF Core) Lex45x/QueryNinja - Framework for dynamic query building regardless of the source and target. jtheisen/reconciler - Update an entity graph in store to a given one by inserting, updating and removing the respective entities. koenbeuk/EntityFrameworkCore.Projectables - Project over properties and functions in your linq queries mattwar/iqtoolkit - A Toolkit for building LINQ IQueryable providers. This is the official move of my IQToolkit project from CodePlex. \u21a5 Back To Top","title":"EF Core"},{"location":"ef-core/ef-core/#ef-core","text":"","title":"EF Core"},{"location":"ef-core/ef-core/#articles","text":"Entity Framework Core health check Entity Framework Core 3.0: A Foundation for the Future How to call stored procedures with OUTPUT parameters with FromSqlRaw in EF Core Query non-table classes using ad-hoc (raw) SQL with EF Core 3.1 Mapping and using SQL Server stored procedures with EF Core Power Tools Avoiding SQL Server plan cache pollution with EF Core 3 and Enumerable.Contains How to pass a dynamic/variable list of values as SqlParameters with FromSqlRaw in EF Core EF Core Power Tools database reverse engineering: renaming of entities and properties Change Tracking in EF Core Expression and Projection Magic for Entity Framework Core Database Providers Designing for Related Data without Foreign Keys Automate Database Deployments Efficient querying with LINQ, AutoMapper and Future queries CQRS with Entity Framework Core Entity Framework Exceptions Triggers for Entity Framework Core A robust event-driven architecture for using with Entity Framework Core EfCore.GenericEventRunner: an event-driven library that works with EF Core How slow is LINQ? LINQ: Beware of deferred execution A Cleaner Way To Do Entity Configuration With EF Core Fluent API Configuration Configuring DBContext in Entity framework ASP.NET Core \u2013 Best Practices EF Projections on computed properties and methods without a hassle! EFCore.Projectables and the curious case of an unexpected performance boost Calling functions in LINQ queries LINQ: Building an IQueryable provider series","title":"\ud83d\udcdd Articles"},{"location":"ef-core/ef-core/#videos","text":"Typed Exceptions for Entity Framework Core - Microsoft Entity Framework Community Standup - Performance Tuning an EF Core App Entity Framework Community Standup - Julie Lerman and EF Core Ask Me Anything (AMA) Entity Framework Community Standup - Open Source Contributions: How to Add a Feature to EF Core Entity Framework Community Standup - Triggers for EF Core Entity Framework Community Standup - Introducing EF Core Compiled Models Entity Framework Core In-Depth Part 1 Entity Framework Core In-Depth Part 2 Entity Framework Core In-Depth Part 3 Entity Framework Core In-Depth Part 4 Entity Framework Community Standup - Visualizing database query plans","title":"\ud83d\udcf9 Videos"},{"location":"ef-core/ef-core/#libraries","text":"scottksmith95/LINQKit - LINQKit is a free set of extensions for LINQ to SQL and Entity Framework power users. linq2db.EntityFrameworkCore ErikEJ/EFCorePowerTools - reverse engineering, migrations and model visualization for EF Core EntityFramework.Exceptions - Handle database errors easily when working with Entity Framework Core. Supports SQLServer, PostgreSQL, SQLite, Oracle and MySql thepirat000/Audit.NET - An extensible framework to audit executing operations in .NET and .NET Core. NickStrupat/EntityFramework.Triggers - Adds events for entity inserting, inserted, updating, updated, deleting, and deleted koenbeuk/EntityFrameworkCore.Triggered - Triggers for EFCore. Respond to changes in your DbContext before and after they are committed to the database. koenbeuk/EntityFrameworkCore.Projections - WIP: Project over properties and functions in your linq query EFCore.BulkExtensions - Entity Framework Core Bulk Batch Extensions for Insert Update Delete and Read (CRUD) operations on SQL Server and SQLite DbUp - .NET library that helps you to deploy changes to SQL Server databases. It tracks which SQL scripts have been run already, and runs the change scripts that are needed to get your database up to date. lecaillon/Evolve - Simple database migration tool that uses plain SQL scripts. Inspired by Flyway. ErikEJ/EFCorePowerTools - Entity Framework Core Power Tools - reverse engineering, migrations and model visualization for EF Core. fluentmigrator/fluentmigrator - Fluent migrations framework for .NET SharpRepository/SharpRepository - C# Generic Repository for use with Entity Framework, RavenDB and more with built-in caching options. JonPSmith/EfCore.GenericEventRunner - A library to allow developer use events to update their database via Entity Framework Core (EF Core) Lex45x/QueryNinja - Framework for dynamic query building regardless of the source and target. jtheisen/reconciler - Update an entity graph in store to a given one by inserting, updating and removing the respective entities. koenbeuk/EntityFrameworkCore.Projectables - Project over properties and functions in your linq queries mattwar/iqtoolkit - A Toolkit for building LINQ IQueryable providers. This is the official move of my IQToolkit project from CodePlex. \u21a5 Back To Top","title":"\ud83d\udce6 Libraries"},{"location":"ef-core/ef-core5/","text":"EF Core 5 \u00b6 \ud83d\udcdd Articles \u00b6 Announcing the Release of EF Core 5.0 Getting Started With Entity Framework Core 5 Entity Framework Core 5 free resources What is New in EF Core 5.0 Calling Stored Procedures with the Entity Framework in .NET 5 EF Core 5: Building on the Foundation Entity Framework Core 5 Resources I have Created Recently Entity Framework Core 5 vs SQLBulkCopy Useful SQL statements when writing EF Core 5 migrations Adding Entity Framework Core 5 migrations to .NET 5 project Merging migrations in Entity Framework Core 5 Executing raw SQL with Entity Framework Core 5 PrimeHotel \u2013 adding Entity Framework Core 5 in .NET Working with views in Entity Framework Core 5 Adding an Entity Framework Core 5 to an existing database How to configure relationships in Entity Framework Core 5 Entity Framework Core \u2013 is it fast? Bulk copy with Entity Framework Core 5 Unit tests in Entity Framework Core 5 How not to pass parameters in Entity Framework Core 5 Select data with a stored procedure with Entity Framework Core 5 Execute a stored procedure with Entity Framework Core 5 Entity Framework Core 5 Value Converters Entity Framework Core 5 \u2014 Table-per-Type and Table-per-Hierarchy Entity Framework Core 5.0 \u2014 Many-to-Many Relationships Entity Framework Core 5 \u2014 Split Queries Split queries Entity Framework Core supports constructors with arguments Videos \u00b6 Intro to Entity Framework Core 5 - New features \ud83d\udcda Books \u00b6 Entity Framework Core in Action, Second Edition Beginning Entity Framework Core 5 \u21a5 Back To Top","title":"EF Core 5"},{"location":"ef-core/ef-core5/#ef-core-5","text":"","title":"EF Core 5"},{"location":"ef-core/ef-core5/#articles","text":"Announcing the Release of EF Core 5.0 Getting Started With Entity Framework Core 5 Entity Framework Core 5 free resources What is New in EF Core 5.0 Calling Stored Procedures with the Entity Framework in .NET 5 EF Core 5: Building on the Foundation Entity Framework Core 5 Resources I have Created Recently Entity Framework Core 5 vs SQLBulkCopy Useful SQL statements when writing EF Core 5 migrations Adding Entity Framework Core 5 migrations to .NET 5 project Merging migrations in Entity Framework Core 5 Executing raw SQL with Entity Framework Core 5 PrimeHotel \u2013 adding Entity Framework Core 5 in .NET Working with views in Entity Framework Core 5 Adding an Entity Framework Core 5 to an existing database How to configure relationships in Entity Framework Core 5 Entity Framework Core \u2013 is it fast? Bulk copy with Entity Framework Core 5 Unit tests in Entity Framework Core 5 How not to pass parameters in Entity Framework Core 5 Select data with a stored procedure with Entity Framework Core 5 Execute a stored procedure with Entity Framework Core 5 Entity Framework Core 5 Value Converters Entity Framework Core 5 \u2014 Table-per-Type and Table-per-Hierarchy Entity Framework Core 5.0 \u2014 Many-to-Many Relationships Entity Framework Core 5 \u2014 Split Queries Split queries Entity Framework Core supports constructors with arguments","title":"\ud83d\udcdd Articles"},{"location":"ef-core/ef-core5/#videos","text":"Intro to Entity Framework Core 5 - New features","title":"Videos"},{"location":"ef-core/ef-core5/#books","text":"Entity Framework Core in Action, Second Edition Beginning Entity Framework Core 5 \u21a5 Back To Top","title":"\ud83d\udcda Books"},{"location":"ef-core/ef-core6/","text":"EF Core 6 \u00b6 Articles \u00b6 Announcing Entity Framework Core 6.0 Preview 4: Performance Edition Announcing Entity Framework Core 6.0 Preview 5: Compiled Models","title":"EF Core 6"},{"location":"ef-core/ef-core6/#ef-core-6","text":"","title":"EF Core 6"},{"location":"ef-core/ef-core6/#articles","text":"Announcing Entity Framework Core 6.0 Preview 4: Performance Edition Announcing Entity Framework Core 6.0 Preview 5: Compiled Models","title":"Articles"},{"location":"ef-core/expression-tree/","text":"Expression Tree \u00b6 Articles \u00b6 Expression Trees Inspect and Mutate IQueryable Expression Trees Look Behind the IQueryable Curtain Dynamically Build LINQ Expressions Expression and Projection Magic for Entity Framework Core Dynamic Queries with Expressions Trees in C# Use of Expression Trees in .NET for Lambda Decomposition Build dynamic Linq filters (aka. where() predicates) Videos \u00b6 When LINQ is not LINQ Samples \u00b6 davidfowl/QueryInterceptor Libraries \u00b6 dbelmont/ExpressionBuilder - A library that provides a simple way to create lambda expressions to filter lists and database queries. castle-it/dynamic-linq-query-builder - A truly generic and dynamic linq query builder to compliment jQuery QueryBuilder and other dynamic linq query generation needs zzzprojects/System.Linq.Dynamic.Core - The .NET Standard / .NET Core version from the System Linq Dynamic functionality.","title":"Expression Tree"},{"location":"ef-core/expression-tree/#expression-tree","text":"","title":"Expression Tree"},{"location":"ef-core/expression-tree/#articles","text":"Expression Trees Inspect and Mutate IQueryable Expression Trees Look Behind the IQueryable Curtain Dynamically Build LINQ Expressions Expression and Projection Magic for Entity Framework Core Dynamic Queries with Expressions Trees in C# Use of Expression Trees in .NET for Lambda Decomposition Build dynamic Linq filters (aka. where() predicates)","title":"Articles"},{"location":"ef-core/expression-tree/#videos","text":"When LINQ is not LINQ","title":"Videos"},{"location":"ef-core/expression-tree/#samples","text":"davidfowl/QueryInterceptor","title":"Samples"},{"location":"ef-core/expression-tree/#libraries","text":"dbelmont/ExpressionBuilder - A library that provides a simple way to create lambda expressions to filter lists and database queries. castle-it/dynamic-linq-query-builder - A truly generic and dynamic linq query builder to compliment jQuery QueryBuilder and other dynamic linq query generation needs zzzprojects/System.Linq.Dynamic.Core - The .NET Standard / .NET Core version from the System Linq Dynamic functionality.","title":"Libraries"},{"location":"ef-core/performance/","text":"Performance \u00b6 Articles \u00b6 Improve Entity Framework Core Performance Five levels of performance tuning for an EF Core query Entity Framework Core \u2013 Projection Performance Building high performance database queries using Entity Framework Core and AutoMapper","title":"Performance"},{"location":"ef-core/performance/#performance","text":"","title":"Performance"},{"location":"ef-core/performance/#articles","text":"Improve Entity Framework Core Performance Five levels of performance tuning for an EF Core query Entity Framework Core \u2013 Projection Performance Building high performance database queries using Entity Framework Core and AutoMapper","title":"Articles"},{"location":"ef-core/transaction/","text":"Transaction \u00b6 Articles \u00b6 Entity Framework Core and LINQ to Entities in Depth (7) Data Changes and Transactions Database Connection Resiliency in Entity Framework ASP.NET Core Database Connection Resiliency in ASP.NET Core \u2013 Part II Connection Resiliency Execution strategies and explicit transactions using BeginTransaction and multiple DbContexts Using Resilient Entity Framework Core Sql Connections and Transactions: Retries with Exponential Backoff Using Transactions Transaction in Entity Framework EF Core Advanced Topics Transaction","title":"Transaction"},{"location":"ef-core/transaction/#transaction","text":"","title":"Transaction"},{"location":"ef-core/transaction/#articles","text":"Entity Framework Core and LINQ to Entities in Depth (7) Data Changes and Transactions Database Connection Resiliency in Entity Framework ASP.NET Core Database Connection Resiliency in ASP.NET Core \u2013 Part II Connection Resiliency Execution strategies and explicit transactions using BeginTransaction and multiple DbContexts Using Resilient Entity Framework Core Sql Connections and Transactions: Retries with Exponential Backoff Using Transactions Transaction in Entity Framework EF Core Advanced Topics Transaction","title":"Articles"},{"location":"ide-tools/","text":"IDE & Tools DotMemory GitHub Resharper & Rider Terminal Tools WSL","title":"Index"},{"location":"ide-tools/decompile/","text":"Decompile \u00b6 Tools \u00b6 https://sharplab.io","title":"Decompile"},{"location":"ide-tools/decompile/#decompile","text":"","title":"Decompile"},{"location":"ide-tools/decompile/#tools","text":"https://sharplab.io","title":"Tools"},{"location":"ide-tools/dotmemory/","text":"DotMemory \u00b6 Articles \u00b6 Investigate memory issues with ease \u2013 Introducing real-time inspections in dotMemory Allocation Analysis","title":"DotMemory"},{"location":"ide-tools/dotmemory/#dotmemory","text":"","title":"DotMemory"},{"location":"ide-tools/dotmemory/#articles","text":"Investigate memory issues with ease \u2013 Introducing real-time inspections in dotMemory Allocation Analysis","title":"Articles"},{"location":"ide-tools/dotnet-interactive/","text":".NET Interactive \u00b6 Resources \u00b6 GitHub Repository Articles \u00b6 .NET Interactive is here! | .NET Notebooks Preview 2 .NET Interactive Now Does .NET Notebooks with VS Code Announcing .NET Interactive - Try .NET includes .NET Notebooks and more Videos \u00b6 .NET Tooling Community Standup - .NET Interactive","title":".NET Interactive"},{"location":"ide-tools/dotnet-interactive/#net-interactive","text":"","title":".NET Interactive"},{"location":"ide-tools/dotnet-interactive/#resources","text":"GitHub Repository","title":"Resources"},{"location":"ide-tools/dotnet-interactive/#articles","text":".NET Interactive is here! | .NET Notebooks Preview 2 .NET Interactive Now Does .NET Notebooks with VS Code Announcing .NET Interactive - Try .NET includes .NET Notebooks and more","title":"Articles"},{"location":"ide-tools/dotnet-interactive/#videos","text":".NET Tooling Community Standup - .NET Interactive","title":"Videos"},{"location":"ide-tools/github/","text":"GitHub \u00b6 Articles \u00b6 Remote Repositories VS Code and GitHub Get Closer with Remote Repositories Videos \u00b6 How do I Navigate GitHub Code?","title":"GitHub"},{"location":"ide-tools/github/#github","text":"","title":"GitHub"},{"location":"ide-tools/github/#articles","text":"Remote Repositories VS Code and GitHub Get Closer with Remote Repositories","title":"Articles"},{"location":"ide-tools/github/#videos","text":"How do I Navigate GitHub Code?","title":"Videos"},{"location":"ide-tools/resharper-rider/","text":"Resharper Tips \u00b6 Articles \u00b6 Must-have JetBrains Rider Plugins For ASP.NET Core Developers Videos \u00b6 Navigation - ReSharper Essentials Shortcuts, Editing, Completion - ReSharper Essentials Refactoring - ReSharper Essentials Be More Productive with JetBrains Rider What can Rider do for me? Jetbrains Rider IDE - Introduction and Tips and Tricks - Dan Clarke Shortcuts, Editing, and Completion - Rider Essentials Debugging Tips & Tricks in Rider Code Formatting - ReSharper Essentials Inspections and Quick Fixes - ReSharper Essentials Debugging Tips and Tricks with JetBrains Rider, by Joseph Guadagno","title":"Reharper & Rider"},{"location":"ide-tools/resharper-rider/#resharper-tips","text":"","title":"Resharper Tips"},{"location":"ide-tools/resharper-rider/#articles","text":"Must-have JetBrains Rider Plugins For ASP.NET Core Developers","title":"Articles"},{"location":"ide-tools/resharper-rider/#videos","text":"Navigation - ReSharper Essentials Shortcuts, Editing, Completion - ReSharper Essentials Refactoring - ReSharper Essentials Be More Productive with JetBrains Rider What can Rider do for me? Jetbrains Rider IDE - Introduction and Tips and Tricks - Dan Clarke Shortcuts, Editing, and Completion - Rider Essentials Debugging Tips & Tricks in Rider Code Formatting - ReSharper Essentials Inspections and Quick Fixes - ReSharper Essentials Debugging Tips and Tricks with JetBrains Rider, by Joseph Guadagno","title":"Videos"},{"location":"ide-tools/terminal/","text":"Termonal Tools \u00b6 Articles \u00b6 Taking your PowerShell prompt to the next level with Windows Terminal and Oh my Posh 3 How to make a pretty prompt in Windows Terminal with Powerline, Nerd Fonts, Cascadia Code, WSL, and oh-my-posh 6 steps to pimp my terminal Adding Predictive IntelliSense to my Windows Terminal PowerShell Prompt with PSReadline Videos \u00b6 Customize the Windows Terminal with WSL2, Cascadia Code, Powerline, Nerd Fonts, Oh My Posh and more! How to set up an awesome prompt with your Git Branch, Windows Terminal, PowerShell, + Cascadia Code! How do you use the Command line? PowerShell, cmd, bash? - Computer Stuff They Didn\u2019t Teach You #13 Libraries \u00b6 minamarkham/yonce - Queen Bey-inspired themes for all your favs.","title":"Terminal Tools"},{"location":"ide-tools/terminal/#termonal-tools","text":"","title":"Termonal Tools"},{"location":"ide-tools/terminal/#articles","text":"Taking your PowerShell prompt to the next level with Windows Terminal and Oh my Posh 3 How to make a pretty prompt in Windows Terminal with Powerline, Nerd Fonts, Cascadia Code, WSL, and oh-my-posh 6 steps to pimp my terminal Adding Predictive IntelliSense to my Windows Terminal PowerShell Prompt with PSReadline","title":"Articles"},{"location":"ide-tools/terminal/#videos","text":"Customize the Windows Terminal with WSL2, Cascadia Code, Powerline, Nerd Fonts, Oh My Posh and more! How to set up an awesome prompt with your Git Branch, Windows Terminal, PowerShell, + Cascadia Code! How do you use the Command line? PowerShell, cmd, bash? - Computer Stuff They Didn\u2019t Teach You #13","title":"Videos"},{"location":"ide-tools/terminal/#libraries","text":"minamarkham/yonce - Queen Bey-inspired themes for all your favs.","title":"Libraries"},{"location":"ide-tools/wsl/","text":"WSL \u00b6 Articles \u00b6 Videos \u00b6 How to set up a Windows 10 machine for Linux Development w/ WSL! Can we convert a diehard machead? Developing on Windows with WSL2 (Subsystem for Linux), VS Code, Docker, and the Terminal WSL2, Visual Studio Code, Windows 10, Ubuntu/Linux + more - Computer Stuff They Didn\u2019t Teach You #19","title":"WSL"},{"location":"ide-tools/wsl/#wsl","text":"","title":"WSL"},{"location":"ide-tools/wsl/#articles","text":"","title":"Articles"},{"location":"ide-tools/wsl/#videos","text":"How to set up a Windows 10 machine for Linux Development w/ WSL! Can we convert a diehard machead? Developing on Windows with WSL2 (Subsystem for Linux), VS Code, Docker, and the Terminal WSL2, Visual Studio Code, Windows 10, Ubuntu/Linux + more - Computer Stuff They Didn\u2019t Teach You #19","title":"Videos"},{"location":"mapping/mapping/","text":"Mapping \u00b6 \ud83d\udcdd Articles \u00b6 Implement Automapper in ASP.NET Core 3.1 \u2013 Ultimate Guide Let\u2019s talk about mapping objects in c-sharp (C#) \u21a5 Back To Top \ud83d\udce6 Libraries \u00b6 Mapster A fast, fun and stimulating object to object Mapper. mrtaikandi/MapTo A convention based object to object mapper using Roslyn source generator \ud83d\udcf9 Videos \u00b6 Mapster, the best .NET mapper that you are (probably) not using Domain to Contract mapping with Automapper | ASP.NET Core 5 REST API Tutorial 20 \u21a5 Back To Top","title":"Mapping"},{"location":"mapping/mapping/#mapping","text":"","title":"Mapping"},{"location":"mapping/mapping/#articles","text":"Implement Automapper in ASP.NET Core 3.1 \u2013 Ultimate Guide Let\u2019s talk about mapping objects in c-sharp (C#) \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"mapping/mapping/#libraries","text":"Mapster A fast, fun and stimulating object to object Mapper. mrtaikandi/MapTo A convention based object to object mapper using Roslyn source generator","title":"\ud83d\udce6 Libraries"},{"location":"mapping/mapping/#videos","text":"Mapster, the best .NET mapper that you are (probably) not using Domain to Contract mapping with Automapper | ASP.NET Core 5 REST API Tutorial 20 \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"nosql/cosmosdb/","text":"CosmosDB \u00b6 Azure Cosmos DB - A fully-managed, globally distributed NoSQL database service - StackShare Articles \u00b6 An in-depth study of Cosmos DB and the EF Core 3 to 5 database provider Building a robust CQRS database with EF Core and Cosmos DB Cars Island ASP .NET Core API - integration with Azure Cosmos DB - part 3 Videos \u00b6 Going Real Time Using Azure CosmosDB and React, by Olena Borzenko","title":"CosmosDB"},{"location":"nosql/cosmosdb/#cosmosdb","text":"Azure Cosmos DB - A fully-managed, globally distributed NoSQL database service - StackShare","title":"CosmosDB"},{"location":"nosql/cosmosdb/#articles","text":"An in-depth study of Cosmos DB and the EF Core 3 to 5 database provider Building a robust CQRS database with EF Core and Cosmos DB Cars Island ASP .NET Core API - integration with Azure Cosmos DB - part 3","title":"Articles"},{"location":"nosql/cosmosdb/#videos","text":"Going Real Time Using Azure CosmosDB and React, by Olena Borzenko","title":"Videos"},{"location":"nosql/documentdb/","text":"DocumentDB \u00b6 Articles \u00b6 Introducing Amazon DocumentDB (with MongoDB compatibility) global clusters Using Azure Document DB in ASP.NET Core Using Azure DocumentDB and ASP.NET Core for extreme NoSQL performance","title":"DocumentDB"},{"location":"nosql/documentdb/#documentdb","text":"","title":"DocumentDB"},{"location":"nosql/documentdb/#articles","text":"Introducing Amazon DocumentDB (with MongoDB compatibility) global clusters Using Azure Document DB in ASP.NET Core Using Azure DocumentDB and ASP.NET Core for extreme NoSQL performance","title":"Articles"},{"location":"nosql/mongodb/","text":"MongoDB \u00b6 Resources \u00b6 MongoDB Docs Articles \u00b6 How to integrate MongoDB with C# Videos \u00b6 MongoDB In 30 Minutes Library \u00b6 TurnerSoftware/MongoFramework - An \u201cEntity Framework\u201d-like interface for MongoDB Mongo2Go/Mongo2Go - MongoDB for integration tests (.NET Core 3.0 and .NET 5.0)","title":"MongoDB"},{"location":"nosql/mongodb/#mongodb","text":"","title":"MongoDB"},{"location":"nosql/mongodb/#resources","text":"MongoDB Docs","title":"Resources"},{"location":"nosql/mongodb/#articles","text":"How to integrate MongoDB with C#","title":"Articles"},{"location":"nosql/mongodb/#videos","text":"MongoDB In 30 Minutes","title":"Videos"},{"location":"nosql/mongodb/#library","text":"TurnerSoftware/MongoFramework - An \u201cEntity Framework\u201d-like interface for MongoDB Mongo2Go/Mongo2Go - MongoDB for integration tests (.NET Core 3.0 and .NET 5.0)","title":"Library"},{"location":"nosql/nosql/","text":"NoSQL \u00b6 Videos \u00b6 Google I/O 2012 - SQL vs NoSQL: Battle of the Backends SQL vs NoSQL or MySQL vs MongoDB GOTO 2012 \u2022 Introduction to NoSQL \u2022 Martin Fowler Say YES! to NoSQL: A Guide on When to Ditch Relational Databases - Adrienne Tacke Migrating from SQL to NoSQL with .NET and Dapper, by Matthew Groves Introduction To NoSQL Databases What is Database Sharding? Database Design Tips | Choosing the Best Database in a System Design Interview SQL vs NoSQL or MySQL vs MongoDB Introduction to NoSQL Databases SQL vs NoSQL - Difference B/W SQL & NoSQL Databases | MySQL vs MongoDB Tutorial | Edureka Introduction to NoSQL databases Migrating from SQL to NoSQL with .NET and Dapper, by Matthew Groves An Introduction To NoSQL Databases Learn System design : Distributed datastores | RDBMS scaling problems | CAP theorem Horizontal Scaling in Azure SQL Database Introduction to NoSQL \u2022 Martin Fowler \u2022 GOTO 2012 Why and how NoSQL databases can scale \u201cinfinitely\u201d | Understanding NoSQL and partitioning Articles \u00b6 NOSQL vs SQL. Key differences and when to choose each How to choose between SQL and NoSQL databases","title":"NoSQL"},{"location":"nosql/nosql/#nosql","text":"","title":"NoSQL"},{"location":"nosql/nosql/#videos","text":"Google I/O 2012 - SQL vs NoSQL: Battle of the Backends SQL vs NoSQL or MySQL vs MongoDB GOTO 2012 \u2022 Introduction to NoSQL \u2022 Martin Fowler Say YES! to NoSQL: A Guide on When to Ditch Relational Databases - Adrienne Tacke Migrating from SQL to NoSQL with .NET and Dapper, by Matthew Groves Introduction To NoSQL Databases What is Database Sharding? Database Design Tips | Choosing the Best Database in a System Design Interview SQL vs NoSQL or MySQL vs MongoDB Introduction to NoSQL Databases SQL vs NoSQL - Difference B/W SQL & NoSQL Databases | MySQL vs MongoDB Tutorial | Edureka Introduction to NoSQL databases Migrating from SQL to NoSQL with .NET and Dapper, by Matthew Groves An Introduction To NoSQL Databases Learn System design : Distributed datastores | RDBMS scaling problems | CAP theorem Horizontal Scaling in Azure SQL Database Introduction to NoSQL \u2022 Martin Fowler \u2022 GOTO 2012 Why and how NoSQL databases can scale \u201cinfinitely\u201d | Understanding NoSQL and partitioning","title":"Videos"},{"location":"nosql/nosql/#articles","text":"NOSQL vs SQL. Key differences and when to choose each How to choose between SQL and NoSQL databases","title":"Articles"},{"location":"nosql/postgresql/","text":"PostgreSQL \u00b6 PostgreSQL - A powerful, open source object-relational database system - StackShare Articles \u00b6 PostgreSQL Vs. MongoDB \ud83d\udcf9 Videos \u00b6 Integrating ASP.NET Core API with Postgres & OData in Azure - Hassan Habib ASP.NET Core, C#, EF Core, PostgreSQL, WSL2 - PostreSQL Setup - Tricking Library Ep62 Comparison of PostgreSQL and MongoDB Learn PostgreSQL Tutorial - Full Course for Beginners","title":"PostgreSQL"},{"location":"nosql/postgresql/#postgresql","text":"PostgreSQL - A powerful, open source object-relational database system - StackShare","title":"PostgreSQL"},{"location":"nosql/postgresql/#articles","text":"PostgreSQL Vs. MongoDB","title":"Articles"},{"location":"nosql/postgresql/#videos","text":"Integrating ASP.NET Core API with Postgres & OData in Azure - Hassan Habib ASP.NET Core, C#, EF Core, PostgreSQL, WSL2 - PostreSQL Setup - Tricking Library Ep62 Comparison of PostgreSQL and MongoDB Learn PostgreSQL Tutorial - Full Course for Beginners","title":"\ud83d\udcf9 Videos"},{"location":"nosql/ravendb/","text":"RavenDB \u00b6 Resources \u00b6 RavenDB - A NoSQL Database that\u2019s fully transactional - StackShare","title":"RavenDB"},{"location":"nosql/ravendb/#ravendb","text":"","title":"RavenDB"},{"location":"nosql/ravendb/#resources","text":"RavenDB - A NoSQL Database that\u2019s fully transactional - StackShare","title":"Resources"},{"location":"security/authentication/","text":"Authentication \u00b6 \ud83d\udcdd Articles \u00b6 Introduction to Authentication with ASP.NET Core Exploring the cookie authentication middleware in ASP.NET Core Getting started with Securing APIs using JWT Bearer Authentication - Hands on JWT Authentication In ASP.NET Core Login Web Application using Cookie Authentication in ASP NET Core Build Secure ASP.NET Core API with JWT Authentication \u2013 Detailed Guide Canceling JWT tokens in .NET Core JWT refresh tokens and .NET Core JWT RSA & HMAC + ASP.NET Core An introduction to the Data Protection system in ASP.NET Core Secure ASP.NET Core Web API using API Key Authentication Secure ASP.NET Core Web API using JWT Authentication Introduction to JSON Web Tokens (JWT) Introduction to tokens Token based authentication and Identity framework in ASP.NET Core - Part 1 JWT Authentication Flow with Refresh Tokens in ASP.NET Core Web API User Authentication and Identity with Angular, Asp.Net Core and IdentityServer JWT Authentication with ASP.NET Core 2 Web API, Angular 5, .NET Core Identity and Facebook Login Secure an ASP.NET Core Web Api using Cookies Secure a Web Api in ASP.NET Core External Login Providers in ASP.NET Core .NET 5.0 - JWT Authentication Tutorial with Example API Build Secure ASP.NET Core API with JWT Authentication \u2013 Detailed Guide Manually validating a JWT using .NET Managing Cookie Lifetime with ASP.NET Core OAuth 2.0 providers Using Roles with the ASP.NET Core JWT middleware Role based JWT Tokens in ASP.NET Core APIs SECURE AN ANGULAR SPA AND AN ASP.NET CORE API USING AUTH0 ASP.NET Core using Proof Key for Code Exchange (PKCE) JWT Authentication in C# .NET Core example Get Access token from HttpContext in .NET Core Client Authentication vs. PKCE: Do you need both? JWT Auth in ASP.NET Core Stop using JWT for sessions Why JWTs Suck as Session Tokens Access Tokens ID Tokens Token Best Practices Useful ClaimsPrincipal extension methods I use in my projects Asp.Net Core 5 Rest API Step by Step Asp Net Core 5 Rest API Authentication with JWT Step by Step Secure your ASP.NET Core 2.0 API (part 1 - issuing a JWT) Secure your ASP.NET Core 2.0 API (part 2 - restrict access to JWT bearers only) Identify users and their permissions with JWTs and ASP.NET Core WebAPI Tackle more complex security policies for your ASP.NET Core app \ud83d\udcf9 Videos \u00b6 ASP.NET Core 3 - Authentication - Ep.1 Basics (Claims/ClaimsIdentity/ClaimsPrincipal/Authorization) ASP.NET Core 3 - Authentication - Ep.2 Identity Authentication Secure a .NET Core API with Bearer Authentication User Registration and Controller Auth | ASP.NET Core 5 REST API Tutorial 10 .NET Core - canceling JWT tokens Restricting endpoints with Claims | ASP.NET Core 5 REST API Tutorial 17 Setting up ApiKey-based Authentication | ASP.NET Core 5 REST API Tutorial 24 User specific content with JWT claims | ASP.NET Core 5 REST API Tutorial 12 User Login using JWT (Authentication) | ASP.NET Core 5 REST API Tutorial 11 What is a Refresh Token and why your REST API needs it? Refreshing JWTs with Refresh Tokens | ASP.NET Core 5 REST API Tutorial 13 Setting up JWT support (Authentication) | ASP.NET Core 5 REST API Tutorial 9 What is a JWT (JSON Web Token) and why your REST API needs it ASP.NET Core Security - Frank Liu, Youtube Playlist Deep Dive: Multi-Factor Authentication with .NET 5 Asp Net Core 5 Rest API Authentication with JWT Step by Step Intro to JWT - Step by Step Samples \u00b6 dotnet-labs/JwtAuthDemo - ASP.NET Core + Angular JWT auth demo; integration tests; login, logout, refresh token, impersonation, authentication, authorization; run on Docker Compose. iammukeshm/JWTAuthentication.WebApi - Security is a vital part of any kind of application. Since APIs can expose highly sensitive data like user details, email adressses , it is highly critical that these API endpoints are secured.In this Guide let\u2019s build a Secure ASP.NET Core API with JWT Authentication. Read my detailed blog post for implementation. spetz/jwt-hmac-rsa-aspnet-core-sample dejanstojanovic/dotnetcore-token-authentication - Token based authentication in ASP.NET Core using Identity Framework mmacneil/AspNetCoreApiStarter - An ASP.NET Core (v2.1) Web API project to quickly bootstrap new projects. Includes Identity, JWT authentication w/ refresh tokens. mmacneil/AngularASPNETCoreOAuth - Sample project demonstrating user authentication and identity with Angular, Asp.Net Core and IdentityServer4 cornflourblue/aspnet-core-3-signup-verification-api - ASP.NET Core 3.1 - Boilerplate API with Email Sign Up, Verification, Authentication & Forgot Password Amitpnk/Onion-architecture-ASP.NET-Core - WhiteApp API solution template which is built on Onion Architecture with all essential feature using .NET 5! Libraries \u00b6 fake-authentication-jwtbearer - Simple way to fake an authenticated user for integration test with ASP.Net Core framework \u21a5 Back To Top","title":"Authentication"},{"location":"security/authentication/#authentication","text":"","title":"Authentication"},{"location":"security/authentication/#articles","text":"Introduction to Authentication with ASP.NET Core Exploring the cookie authentication middleware in ASP.NET Core Getting started with Securing APIs using JWT Bearer Authentication - Hands on JWT Authentication In ASP.NET Core Login Web Application using Cookie Authentication in ASP NET Core Build Secure ASP.NET Core API with JWT Authentication \u2013 Detailed Guide Canceling JWT tokens in .NET Core JWT refresh tokens and .NET Core JWT RSA & HMAC + ASP.NET Core An introduction to the Data Protection system in ASP.NET Core Secure ASP.NET Core Web API using API Key Authentication Secure ASP.NET Core Web API using JWT Authentication Introduction to JSON Web Tokens (JWT) Introduction to tokens Token based authentication and Identity framework in ASP.NET Core - Part 1 JWT Authentication Flow with Refresh Tokens in ASP.NET Core Web API User Authentication and Identity with Angular, Asp.Net Core and IdentityServer JWT Authentication with ASP.NET Core 2 Web API, Angular 5, .NET Core Identity and Facebook Login Secure an ASP.NET Core Web Api using Cookies Secure a Web Api in ASP.NET Core External Login Providers in ASP.NET Core .NET 5.0 - JWT Authentication Tutorial with Example API Build Secure ASP.NET Core API with JWT Authentication \u2013 Detailed Guide Manually validating a JWT using .NET Managing Cookie Lifetime with ASP.NET Core OAuth 2.0 providers Using Roles with the ASP.NET Core JWT middleware Role based JWT Tokens in ASP.NET Core APIs SECURE AN ANGULAR SPA AND AN ASP.NET CORE API USING AUTH0 ASP.NET Core using Proof Key for Code Exchange (PKCE) JWT Authentication in C# .NET Core example Get Access token from HttpContext in .NET Core Client Authentication vs. PKCE: Do you need both? JWT Auth in ASP.NET Core Stop using JWT for sessions Why JWTs Suck as Session Tokens Access Tokens ID Tokens Token Best Practices Useful ClaimsPrincipal extension methods I use in my projects Asp.Net Core 5 Rest API Step by Step Asp Net Core 5 Rest API Authentication with JWT Step by Step Secure your ASP.NET Core 2.0 API (part 1 - issuing a JWT) Secure your ASP.NET Core 2.0 API (part 2 - restrict access to JWT bearers only) Identify users and their permissions with JWTs and ASP.NET Core WebAPI Tackle more complex security policies for your ASP.NET Core app","title":"\ud83d\udcdd Articles"},{"location":"security/authentication/#videos","text":"ASP.NET Core 3 - Authentication - Ep.1 Basics (Claims/ClaimsIdentity/ClaimsPrincipal/Authorization) ASP.NET Core 3 - Authentication - Ep.2 Identity Authentication Secure a .NET Core API with Bearer Authentication User Registration and Controller Auth | ASP.NET Core 5 REST API Tutorial 10 .NET Core - canceling JWT tokens Restricting endpoints with Claims | ASP.NET Core 5 REST API Tutorial 17 Setting up ApiKey-based Authentication | ASP.NET Core 5 REST API Tutorial 24 User specific content with JWT claims | ASP.NET Core 5 REST API Tutorial 12 User Login using JWT (Authentication) | ASP.NET Core 5 REST API Tutorial 11 What is a Refresh Token and why your REST API needs it? Refreshing JWTs with Refresh Tokens | ASP.NET Core 5 REST API Tutorial 13 Setting up JWT support (Authentication) | ASP.NET Core 5 REST API Tutorial 9 What is a JWT (JSON Web Token) and why your REST API needs it ASP.NET Core Security - Frank Liu, Youtube Playlist Deep Dive: Multi-Factor Authentication with .NET 5 Asp Net Core 5 Rest API Authentication with JWT Step by Step Intro to JWT - Step by Step","title":"\ud83d\udcf9 Videos"},{"location":"security/authentication/#samples","text":"dotnet-labs/JwtAuthDemo - ASP.NET Core + Angular JWT auth demo; integration tests; login, logout, refresh token, impersonation, authentication, authorization; run on Docker Compose. iammukeshm/JWTAuthentication.WebApi - Security is a vital part of any kind of application. Since APIs can expose highly sensitive data like user details, email adressses , it is highly critical that these API endpoints are secured.In this Guide let\u2019s build a Secure ASP.NET Core API with JWT Authentication. Read my detailed blog post for implementation. spetz/jwt-hmac-rsa-aspnet-core-sample dejanstojanovic/dotnetcore-token-authentication - Token based authentication in ASP.NET Core using Identity Framework mmacneil/AspNetCoreApiStarter - An ASP.NET Core (v2.1) Web API project to quickly bootstrap new projects. Includes Identity, JWT authentication w/ refresh tokens. mmacneil/AngularASPNETCoreOAuth - Sample project demonstrating user authentication and identity with Angular, Asp.Net Core and IdentityServer4 cornflourblue/aspnet-core-3-signup-verification-api - ASP.NET Core 3.1 - Boilerplate API with Email Sign Up, Verification, Authentication & Forgot Password Amitpnk/Onion-architecture-ASP.NET-Core - WhiteApp API solution template which is built on Onion Architecture with all essential feature using .NET 5!","title":"Samples"},{"location":"security/authentication/#libraries","text":"fake-authentication-jwtbearer - Simple way to fake an authenticated user for integration test with ASP.Net Core framework \u21a5 Back To Top","title":"Libraries"},{"location":"security/authorization/","text":"Authorization \u00b6 \ud83d\udcdd Articles \u00b6 Create an ASP.NET Core web app with user data protected by authorization ASP.NET Core Identity Roles based Authorization Role-based authorization in ASP.NET Core Policy-based authorization in ASP.NET Core Claims-based authorization in ASP.NET Core Resource-based authorization in ASP.NET Core ASP.NET Core - Claims Based Authentication: Claims vs Identities vs Principals Role-based and Claims-based Authorization in ASP.NET Core using Policies - Hands on Implementing Policy-Based Authorization in ASP.NET Core - Getting Started Policy-based Authorization in ASP.NET Core \u2013 A Deep Dive ASP.NET Core Identity Claims based Authorization Customizing Authorization Responses in .NET 5.0 Claim based Authorization in Asp.Net Core Episode 019 - Roles, claims and policies - ASP.NET Core: From 0 to overkill Creating Authorization Policies dynamically with ASP.NET Core Useful ClaimsPrincipal extension methods I use in my projects Filter user records using Global Query Filters Access the JWT bearer token when using the JWT middleware in ASP.NET Core Using Roles with the ASP.NET Core JWT middleware Authorization for ASP.NET Web APIs Using a middleware to build a permission-based identity in ASP.NET Core Deep dive into policy-based authorization in ASP.NET Core Protecting your API endpoints with dynamic policies in ASP.NET Core Creating a Basic Authorization Pipeline with MediatR and ASP.NET Core Handling Authorization In Clean Architecture with ASP.NET Core and MediatR Tackle more complex security policies for your ASP.NET Core app \ud83d\udcf9 Videos \u00b6 ASP.NET Core 3 - Authentication - Ep.3 Authorization (All about Policies and Claims) Implementing authorization in web applications and APIs - Dominick Baier & Brock Allen ASP.NET Core Security - Frank Liu, Youtube Playlist Samples \u00b6 joaopgrassi/authz-custom-middleware \u21a5 Back To Top","title":"Authorization"},{"location":"security/authorization/#authorization","text":"","title":"Authorization"},{"location":"security/authorization/#articles","text":"Create an ASP.NET Core web app with user data protected by authorization ASP.NET Core Identity Roles based Authorization Role-based authorization in ASP.NET Core Policy-based authorization in ASP.NET Core Claims-based authorization in ASP.NET Core Resource-based authorization in ASP.NET Core ASP.NET Core - Claims Based Authentication: Claims vs Identities vs Principals Role-based and Claims-based Authorization in ASP.NET Core using Policies - Hands on Implementing Policy-Based Authorization in ASP.NET Core - Getting Started Policy-based Authorization in ASP.NET Core \u2013 A Deep Dive ASP.NET Core Identity Claims based Authorization Customizing Authorization Responses in .NET 5.0 Claim based Authorization in Asp.Net Core Episode 019 - Roles, claims and policies - ASP.NET Core: From 0 to overkill Creating Authorization Policies dynamically with ASP.NET Core Useful ClaimsPrincipal extension methods I use in my projects Filter user records using Global Query Filters Access the JWT bearer token when using the JWT middleware in ASP.NET Core Using Roles with the ASP.NET Core JWT middleware Authorization for ASP.NET Web APIs Using a middleware to build a permission-based identity in ASP.NET Core Deep dive into policy-based authorization in ASP.NET Core Protecting your API endpoints with dynamic policies in ASP.NET Core Creating a Basic Authorization Pipeline with MediatR and ASP.NET Core Handling Authorization In Clean Architecture with ASP.NET Core and MediatR Tackle more complex security policies for your ASP.NET Core app","title":"\ud83d\udcdd Articles"},{"location":"security/authorization/#videos","text":"ASP.NET Core 3 - Authentication - Ep.3 Authorization (All about Policies and Claims) Implementing authorization in web applications and APIs - Dominick Baier & Brock Allen ASP.NET Core Security - Frank Liu, Youtube Playlist","title":"\ud83d\udcf9 Videos"},{"location":"security/authorization/#samples","text":"joaopgrassi/authz-custom-middleware \u21a5 Back To Top","title":"Samples"},{"location":"security/dotnet-identity/","text":".Net Core Identity \u00b6 \ud83d\udcdd Articles \u00b6 ASP.NET Core Identity \u2013 Getting Started Overview of ASP.NET Core authentication Introduction to Identity on ASP.NET Core Identity model customization in ASP.NET Core Make secure .NET Microservices and Web Applications ASP NET Core Identity Tutorial Login and Registration using Identity in ASP.NET Core 3.1 Custom User Management in ASP.NET Core MVC with Identity ASP.NET Core Identity with Patterns (Part 1 of 3) ASP.NET Core Identity with Patterns (Part 2 of 3) Building ASP.NET Core Web APIs with Clean Architecture Scaffold Your Clean DDD Web Application - Part 2: Authentication and Identity Identity model customization in ASP.NET Core Introduction to Identity on ASP.NET Core Add, download, and delete custom user data to Identity in an ASP.NET Core project Configure ASP.NET Core Identity Authentication and authorization for SPAs User Authentication and Identity with Angular, Asp.Net Core and IdentityServer How To Use ASP.NET Identity And IdentityServer4 In Your Solution How to Setup and Configure ASP.NET Core Identity How to work with Roles in ASP.NET Core Identity How to work with Policies in ASP.NET Core Identity How to do Authentication of Users in ASP.NET Core Identity Two-Factor Authentication in ASP.NET Core Identity Custom storage providers for ASP.NET Core Identity Identity Manager using ASP.NET Identity Implementing Medium\u2019s Passwordless Authentication using ASP.NET Core Identity Getting Started with IdentityManager2 Claim based Authorization in Asp.Net Core Episode 019 - Roles, claims and policies - ASP.NET Core: From 0 to overkill JWT Authentication Flow with Refresh Tokens in ASP.NET Core Web API ASP.NET Identity Core From Scratch .NET Core 2.1 Identity get all users with their associated roles How to include Roles in IdentityUser? Samples \u00b6 CustomUserManagement.MVC - Let\u2019s go in-depth and understand the functionalities you can achieve with the help of Microsoft Identity. We will build a small yet practical implementation of Custom User Management in ASP.NET Core MVC with Identity. IdentityManager/IdentityManager2 - Development tool for administering users and roles IdentityManager/IdentityManager2.AspNetIdentity scottbrady91/IdentityManager2-Example matteofabbri/AspNetCore.Identity.Mongo - This is a MongoDB provider for the ASP.NET Core 2 Identity framework gustavobigardi/IdentityServer.BlazorAdmin - Identity Server AdminUI using Blazor. timschreiber/ASP.NET-Core-Identity-Example - Source code for my ASP.NET Core Identity tutorial mmacneil/CleanAspNetCoreWebApi - Starter project for creating APIs built on ASP.NET Core using clean architecture. kimcu-on-thenet/dnc-identity-identityserver - An example of IdentityServer4 and ASP.NET Identity, Ocelot and Consul NetDevPack/Security.Identity - .NET DevPack Identity is a set of common implementations to help you implementing Identity, Jwt, claims validation and another facilities aruss/IdentityBase - IdentityBase is a Universal Identity Platform for web, mobile and IoT built on top of IdentityServer. kevinrjones/SettingUpIdentityServer cloudscribe/cloudscribe - ASP.NET Core multi-tenant web application foundation with management for sites, users, roles, claims and more Daniel-Krzyczkowski/Lost-In-Azure-Cloud-Identity - Tech Mind Factory Identity is a demo project to present how to use identity services available in the Azure cloud. mmacneil/AspNetCoreApiStarter - An ASP.NET Core (v2.1) Web API project to quickly bootstrap new projects. Includes Identity, JWT authentication w/ refresh tokens. dejanstojanovic/dotnetcore-token-authentication - Token based authentication in ASP.NET Core using Identity Framework \u21a5 Back To Top","title":".Net Core Identity"},{"location":"security/dotnet-identity/#net-core-identity","text":"","title":".Net Core Identity"},{"location":"security/dotnet-identity/#articles","text":"ASP.NET Core Identity \u2013 Getting Started Overview of ASP.NET Core authentication Introduction to Identity on ASP.NET Core Identity model customization in ASP.NET Core Make secure .NET Microservices and Web Applications ASP NET Core Identity Tutorial Login and Registration using Identity in ASP.NET Core 3.1 Custom User Management in ASP.NET Core MVC with Identity ASP.NET Core Identity with Patterns (Part 1 of 3) ASP.NET Core Identity with Patterns (Part 2 of 3) Building ASP.NET Core Web APIs with Clean Architecture Scaffold Your Clean DDD Web Application - Part 2: Authentication and Identity Identity model customization in ASP.NET Core Introduction to Identity on ASP.NET Core Add, download, and delete custom user data to Identity in an ASP.NET Core project Configure ASP.NET Core Identity Authentication and authorization for SPAs User Authentication and Identity with Angular, Asp.Net Core and IdentityServer How To Use ASP.NET Identity And IdentityServer4 In Your Solution How to Setup and Configure ASP.NET Core Identity How to work with Roles in ASP.NET Core Identity How to work with Policies in ASP.NET Core Identity How to do Authentication of Users in ASP.NET Core Identity Two-Factor Authentication in ASP.NET Core Identity Custom storage providers for ASP.NET Core Identity Identity Manager using ASP.NET Identity Implementing Medium\u2019s Passwordless Authentication using ASP.NET Core Identity Getting Started with IdentityManager2 Claim based Authorization in Asp.Net Core Episode 019 - Roles, claims and policies - ASP.NET Core: From 0 to overkill JWT Authentication Flow with Refresh Tokens in ASP.NET Core Web API ASP.NET Identity Core From Scratch .NET Core 2.1 Identity get all users with their associated roles How to include Roles in IdentityUser?","title":"\ud83d\udcdd Articles"},{"location":"security/dotnet-identity/#samples","text":"CustomUserManagement.MVC - Let\u2019s go in-depth and understand the functionalities you can achieve with the help of Microsoft Identity. We will build a small yet practical implementation of Custom User Management in ASP.NET Core MVC with Identity. IdentityManager/IdentityManager2 - Development tool for administering users and roles IdentityManager/IdentityManager2.AspNetIdentity scottbrady91/IdentityManager2-Example matteofabbri/AspNetCore.Identity.Mongo - This is a MongoDB provider for the ASP.NET Core 2 Identity framework gustavobigardi/IdentityServer.BlazorAdmin - Identity Server AdminUI using Blazor. timschreiber/ASP.NET-Core-Identity-Example - Source code for my ASP.NET Core Identity tutorial mmacneil/CleanAspNetCoreWebApi - Starter project for creating APIs built on ASP.NET Core using clean architecture. kimcu-on-thenet/dnc-identity-identityserver - An example of IdentityServer4 and ASP.NET Identity, Ocelot and Consul NetDevPack/Security.Identity - .NET DevPack Identity is a set of common implementations to help you implementing Identity, Jwt, claims validation and another facilities aruss/IdentityBase - IdentityBase is a Universal Identity Platform for web, mobile and IoT built on top of IdentityServer. kevinrjones/SettingUpIdentityServer cloudscribe/cloudscribe - ASP.NET Core multi-tenant web application foundation with management for sites, users, roles, claims and more Daniel-Krzyczkowski/Lost-In-Azure-Cloud-Identity - Tech Mind Factory Identity is a demo project to present how to use identity services available in the Azure cloud. mmacneil/AspNetCoreApiStarter - An ASP.NET Core (v2.1) Web API project to quickly bootstrap new projects. Includes Identity, JWT authentication w/ refresh tokens. dejanstojanovic/dotnetcore-token-authentication - Token based authentication in ASP.NET Core using Identity Framework \u21a5 Back To Top","title":"Samples"},{"location":"security/encryption/","text":"Encryption And Data Protection \u00b6 \ud83d\udcdd Articles \u00b6 Symmetric and Asymmetric Encryption in .NET Core ENCRYPTING TEXTS FOR AN IDENTITY IN ASP.NET CORE RAZOR PAGES USING AES AND RSA USING DIGITAL SIGNATURES TO CHECK INTEGRITY OF CIPHER TEXTS IN ASP.NET CORE RAZOR PAGES Configure ASP.NET Core Data Protection An introduction to the Data Protection system in ASP.NET Core \u21a5 Back To Top","title":"Encryption And Data Protection"},{"location":"security/encryption/#encryption-and-data-protection","text":"","title":"Encryption And Data Protection"},{"location":"security/encryption/#articles","text":"Symmetric and Asymmetric Encryption in .NET Core ENCRYPTING TEXTS FOR AN IDENTITY IN ASP.NET CORE RAZOR PAGES USING AES AND RSA USING DIGITAL SIGNATURES TO CHECK INTEGRITY OF CIPHER TEXTS IN ASP.NET CORE RAZOR PAGES Configure ASP.NET Core Data Protection An introduction to the Data Protection system in ASP.NET Core \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"security/identity-server/","text":"Identity Server \u00b6 Articles \u00b6 The OpenID Connect (OIDC) Architecture Map \ud83d\udd11 OAuth 2.0 flows explained in GIFs User Authentication and Identity with Angular, Asp.Net Core and IdentityServer How To Use ASP.NET Identity And IdentityServer4 In Your Solution Make secure .NET Microservices and Web Applications Episode 021 - Integrating IdentityServer4 - Part 1 - Overview - ASP.NET Core: From 0 to overkill Episode 022 - Integrating IdentityServer4 - Part 2 - Auth Service - ASP.NET Core: From 0 to overkill Securing ASP.NET Core APIs with IdentityServer4 - Getting Started Implementing Authorization Code Grant using IdentityServer4 with PKCE Videos \u00b6 Creating your First IdentityServer4 Solution How to add ASP.NET Identity and Entity Framework Support for your IdentityServer4 Solution How to Setup FIDO2 for IdentityServer4 How to Setup FIDO2 for ASP.NET Identity \ud83d\udd16 Samples \u00b6 SettingUpIdentityServer dnc-identity-identityserver - An example of IdentityServer4 and ASP.NET Identity, Ocelot and Consul run-aspnet-identityserver4 - Secure microservices with using standalone Identity Server 4 and backing with Ocelot API Gateway. Protect our ASP.NET Web MVC and API applications with using OAuth 2 and OpenID Connect in IdentityServer4. Securing your web application and API with tokens, working with claims, authentication and authorization middlewares and applying policies. TheIdServer - OpenID/Connect server based on IdentityServer4 Identity-Service - Identity-As-A-Service written from scratch in .Net Core using a CQRS architecture with a CosmosDB/Redis persistence layer and RSA signed JWT Tokens with public key distribution for authentication and claims. AspNet5IdentityServerAngularImplicitFlow - OpenID Connect Code / Implicit Flow with Angular and ASP.NET Core 5 IdentityServer4 IdentityServer4AspNetCoreIdentityTemplate - An ASP.NET Core 3.1 IdentityServer4 Identity Bootstrap 4 template with localization JPProject.IdentityServer4.SSO - \ud83d\udd12 ASP.NET Core 3.1 Open Source SSO. Built within IdentityServer4 \ud83d\udd11 JPProject.IdentityServer4.AdminUI - \ud83d\udd27 ASP.NET Core 3 & Angular 8 Administration Panel for \ud83d\udc9eIdentityServer4 and ASP.NET Core Identity skoruba/IdentityServer4.Admin - The administration for the IdentityServer4 and Asp.Net Core Identity IdentityServer.BlazorAdmin - Identity Server AdminUI using Blazor. IdentityManager2 - Development tool for administering users and roles Duende.IdentityServer.Admin - The administration for the Duende IdentityServer and Asp.Net Core Identity \u26a1 eShopOnContainers/Identity.API cloudscribe/cloudscribe - ASP.NET Core multi-tenant web application foundation with management for sites, users, roles, claims and more DuendeSoftware/BFF - Framework for ASP.NET Core to secure SPAs using the Backend-for-Frontend (BFF) pattern KevinDockx/BlazorWASMSecurityBestPractices - Sample showing a best practice security approach for Blazor WASM apps via the BFF pattern \u21a5 Back To Top","title":"Identity Server"},{"location":"security/identity-server/#identity-server","text":"","title":"Identity Server"},{"location":"security/identity-server/#articles","text":"The OpenID Connect (OIDC) Architecture Map \ud83d\udd11 OAuth 2.0 flows explained in GIFs User Authentication and Identity with Angular, Asp.Net Core and IdentityServer How To Use ASP.NET Identity And IdentityServer4 In Your Solution Make secure .NET Microservices and Web Applications Episode 021 - Integrating IdentityServer4 - Part 1 - Overview - ASP.NET Core: From 0 to overkill Episode 022 - Integrating IdentityServer4 - Part 2 - Auth Service - ASP.NET Core: From 0 to overkill Securing ASP.NET Core APIs with IdentityServer4 - Getting Started Implementing Authorization Code Grant using IdentityServer4 with PKCE","title":"Articles"},{"location":"security/identity-server/#videos","text":"Creating your First IdentityServer4 Solution How to add ASP.NET Identity and Entity Framework Support for your IdentityServer4 Solution How to Setup FIDO2 for IdentityServer4 How to Setup FIDO2 for ASP.NET Identity","title":"Videos"},{"location":"security/identity-server/#samples","text":"SettingUpIdentityServer dnc-identity-identityserver - An example of IdentityServer4 and ASP.NET Identity, Ocelot and Consul run-aspnet-identityserver4 - Secure microservices with using standalone Identity Server 4 and backing with Ocelot API Gateway. Protect our ASP.NET Web MVC and API applications with using OAuth 2 and OpenID Connect in IdentityServer4. Securing your web application and API with tokens, working with claims, authentication and authorization middlewares and applying policies. TheIdServer - OpenID/Connect server based on IdentityServer4 Identity-Service - Identity-As-A-Service written from scratch in .Net Core using a CQRS architecture with a CosmosDB/Redis persistence layer and RSA signed JWT Tokens with public key distribution for authentication and claims. AspNet5IdentityServerAngularImplicitFlow - OpenID Connect Code / Implicit Flow with Angular and ASP.NET Core 5 IdentityServer4 IdentityServer4AspNetCoreIdentityTemplate - An ASP.NET Core 3.1 IdentityServer4 Identity Bootstrap 4 template with localization JPProject.IdentityServer4.SSO - \ud83d\udd12 ASP.NET Core 3.1 Open Source SSO. Built within IdentityServer4 \ud83d\udd11 JPProject.IdentityServer4.AdminUI - \ud83d\udd27 ASP.NET Core 3 & Angular 8 Administration Panel for \ud83d\udc9eIdentityServer4 and ASP.NET Core Identity skoruba/IdentityServer4.Admin - The administration for the IdentityServer4 and Asp.Net Core Identity IdentityServer.BlazorAdmin - Identity Server AdminUI using Blazor. IdentityManager2 - Development tool for administering users and roles Duende.IdentityServer.Admin - The administration for the Duende IdentityServer and Asp.Net Core Identity \u26a1 eShopOnContainers/Identity.API cloudscribe/cloudscribe - ASP.NET Core multi-tenant web application foundation with management for sites, users, roles, claims and more DuendeSoftware/BFF - Framework for ASP.NET Core to secure SPAs using the Backend-for-Frontend (BFF) pattern KevinDockx/BlazorWASMSecurityBestPractices - Sample showing a best practice security approach for Blazor WASM apps via the BFF pattern \u21a5 Back To Top","title":"\ud83d\udd16 Samples"},{"location":"security/masl/","text":"MSAL \u00b6 \ud83d\udcf9 Videos \u00b6 What is MSAL + Microsoft.Identity.Web On .NET Live - Securing Web APIs with Microsoft.Identity.Web \u21a5 Back To Top","title":"MSAL"},{"location":"security/masl/#msal","text":"","title":"MSAL"},{"location":"security/masl/#videos","text":"What is MSAL + Microsoft.Identity.Web On .NET Live - Securing Web APIs with Microsoft.Identity.Web \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"security/oauth-opencid/","text":"OAuth & OpenID Connect \u00b6 Articles \u00b6 Implementing an OpenIddict Authorization server: A Basic Authorization Server Implementing an OpenIddict Authorization server: Social Login with GitHub An introduction to the ASP.NET 5 Generic OAuth Provider Advanced configuration in the ASP.NET 5 Generic OAuth Provider Authenticate with OAuth 2.0 in ASP.NET Core 2.0 Accessing the OIDC tokens in ASP.NET Core 2.0 Overriding the NameClaimType when using the ASP.NET Core OpenID Connect middleware Adding parameters to the OpenID Connect Authorization URL Managing Cookie Lifetime with ASP.NET Core OAuth 2.0 providers Setting up an Authorization Server with OpenIddict - Part I - Introduction Setting up an Authorization Server with OpenIddict - Part II - Create ASPNET project Setting up an Authorization Server with OpenIddict - Part III - Client Credentials Flow Setting up an Authorization Server with OpenIddict - Part IV - Authorization Code Flow Setting up an Authorization Server with OpenIddict - Part V - OpenID Connect Setting up an Authorization Server with OpenIddict - Part VI - Refresh tokens Videos \u00b6 OAuth 2.0 and OpenID Connect (in plain English) SECURING OAUTH BEARER TOKENS FROM MULTIPLE IDENTITY PROVIDERS IN AN ASP.NET CORE API SECURING MULTIPLE AUTH0 APIS IN ASP.NET CORE USING OAUTH BEARER TOKENS Libraries \u00b6 openiddict/openiddict-core - Versatile OpenID Connect stack for ASP.NET Core 2.\u2153.\u2155.0 and Microsoft.Owin 4.1 (compatible with ASP.NET 4.6.1) Samples \u00b6 robinvanderknaap/authorization-server-openiddict - Authorization Server implemented with OpenIddict.","title":"OAuth & OpenID Connect"},{"location":"security/oauth-opencid/#oauth-openid-connect","text":"","title":"OAuth &amp; OpenID Connect"},{"location":"security/oauth-opencid/#articles","text":"Implementing an OpenIddict Authorization server: A Basic Authorization Server Implementing an OpenIddict Authorization server: Social Login with GitHub An introduction to the ASP.NET 5 Generic OAuth Provider Advanced configuration in the ASP.NET 5 Generic OAuth Provider Authenticate with OAuth 2.0 in ASP.NET Core 2.0 Accessing the OIDC tokens in ASP.NET Core 2.0 Overriding the NameClaimType when using the ASP.NET Core OpenID Connect middleware Adding parameters to the OpenID Connect Authorization URL Managing Cookie Lifetime with ASP.NET Core OAuth 2.0 providers Setting up an Authorization Server with OpenIddict - Part I - Introduction Setting up an Authorization Server with OpenIddict - Part II - Create ASPNET project Setting up an Authorization Server with OpenIddict - Part III - Client Credentials Flow Setting up an Authorization Server with OpenIddict - Part IV - Authorization Code Flow Setting up an Authorization Server with OpenIddict - Part V - OpenID Connect Setting up an Authorization Server with OpenIddict - Part VI - Refresh tokens","title":"Articles"},{"location":"security/oauth-opencid/#videos","text":"OAuth 2.0 and OpenID Connect (in plain English) SECURING OAUTH BEARER TOKENS FROM MULTIPLE IDENTITY PROVIDERS IN AN ASP.NET CORE API SECURING MULTIPLE AUTH0 APIS IN ASP.NET CORE USING OAUTH BEARER TOKENS","title":"Videos"},{"location":"security/oauth-opencid/#libraries","text":"openiddict/openiddict-core - Versatile OpenID Connect stack for ASP.NET Core 2.\u2153.\u2155.0 and Microsoft.Owin 4.1 (compatible with ASP.NET 4.6.1)","title":"Libraries"},{"location":"security/oauth-opencid/#samples","text":"robinvanderknaap/authorization-server-openiddict - Authorization Server implemented with OpenIddict.","title":"Samples"},{"location":"security/refresh-token/","text":"Refresh Token \u00b6 Articles \u00b6 JWT Authentication Flow with Refresh Tokens in ASP.NET Core Web API Refresh Tokens in ASP.NET Core Web Api Handle Refresh Token Using ASP.NET Core 2.0 And JSON Web Token Using Refresh Tokens in ASP.NET Core Authentication How to Use Refresh Tokens in ASP.NET Core APIs \u2013 JWT Authentication Refresh Tokens Refresh Token Rotation Refresh JWT with Refresh Tokens in Asp Net Core 5 Rest API Step by Step Understanding the basics about the Refresh tokens Refresh tokens with .NET 5 Web API and .NET Core Identity Videos \u00b6 Refreshing JWTs with Refresh Tokens | ASP.NET Core 5 REST API Tutorial 13 Refresh JWT with Refresh Tokens in Asp Net Core 5 Rest API Step by Step","title":"Refresh Token"},{"location":"security/refresh-token/#refresh-token","text":"","title":"Refresh Token"},{"location":"security/refresh-token/#articles","text":"JWT Authentication Flow with Refresh Tokens in ASP.NET Core Web API Refresh Tokens in ASP.NET Core Web Api Handle Refresh Token Using ASP.NET Core 2.0 And JSON Web Token Using Refresh Tokens in ASP.NET Core Authentication How to Use Refresh Tokens in ASP.NET Core APIs \u2013 JWT Authentication Refresh Tokens Refresh Token Rotation Refresh JWT with Refresh Tokens in Asp Net Core 5 Rest API Step by Step Understanding the basics about the Refresh tokens Refresh tokens with .NET 5 Web API and .NET Core Identity","title":"Articles"},{"location":"security/refresh-token/#videos","text":"Refreshing JWTs with Refresh Tokens | ASP.NET Core 5 REST API Tutorial 13 Refresh JWT with Refresh Tokens in Asp Net Core 5 Rest API Step by Step","title":"Videos"},{"location":"security/secret-management/","text":"Secret Management \u00b6 Articles \u00b6 Secrets Management in .NET Applications Safe storage of app secrets in development in ASP.NET Core ASP.NET Core User Secrets and Secret Manager Tool How to store app secrets for your ASP .NET Core project Videos \u00b6 SECRET MANAGER In ASP NET Core | Getting Started With ASP.NET Core Series","title":"Secret Management"},{"location":"security/secret-management/#secret-management","text":"","title":"Secret Management"},{"location":"security/secret-management/#articles","text":"Secrets Management in .NET Applications Safe storage of app secrets in development in ASP.NET Core ASP.NET Core User Secrets and Secret Manager Tool How to store app secrets for your ASP .NET Core project","title":"Articles"},{"location":"security/secret-management/#videos","text":"SECRET MANAGER In ASP NET Core | Getting Started With ASP.NET Core Series","title":"Videos"},{"location":"testing/acceptance-testing/","text":"Acceptance Testing \u00b6 \ud83d\udcf9 Videos \u00b6 Elegant Acceptance Testing in .NET with SpecFlow BDD - Automated Acceptance Testing with SpecFlow and Gherkin \u21a5 Back To Top","title":"Acceptance Testing"},{"location":"testing/acceptance-testing/#acceptance-testing","text":"","title":"Acceptance Testing"},{"location":"testing/acceptance-testing/#videos","text":"Elegant Acceptance Testing in .NET with SpecFlow BDD - Automated Acceptance Testing with SpecFlow and Gherkin \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"testing/architectural-testing/","text":"Architectural Testing \u00b6 \ud83d\udcdd Articles \u00b6 Writing ArchUnit style tests for .Net and C# to enforce architecture rules Libraries \u00b6 BenMorris/NetArchTest - A fluent API for .Net that can enforce architectural rules in unit tests.","title":"Architectural Testing"},{"location":"testing/architectural-testing/#architectural-testing","text":"","title":"Architectural Testing"},{"location":"testing/architectural-testing/#articles","text":"Writing ArchUnit style tests for .Net and C# to enforce architecture rules","title":"\ud83d\udcdd Articles"},{"location":"testing/architectural-testing/#libraries","text":"BenMorris/NetArchTest - A fluent API for .Net that can enforce architectural rules in unit tests.","title":"Libraries"},{"location":"testing/bdd/","text":"BDD \u00b6 Articles \u00b6 Behavior-Driven Development from scratch \ud83d\udcf9 Videos \u00b6 Getting started with Behavior Driven Development (BDD) in .NET using SpecFlow Getting started with BDD using Specflow .NET Core 3.1 (C#) Getting Started with SpecFlow \u21a5 Back To Top","title":"BDD"},{"location":"testing/bdd/#bdd","text":"","title":"BDD"},{"location":"testing/bdd/#articles","text":"Behavior-Driven Development from scratch","title":"Articles"},{"location":"testing/bdd/#videos","text":"Getting started with Behavior Driven Development (BDD) in .NET using SpecFlow Getting started with BDD using Specflow .NET Core 3.1 (C#) Getting Started with SpecFlow \u21a5 Back To Top","title":"\ud83d\udcf9 Videos"},{"location":"testing/contract-testing/","text":"Contract Testing \u00b6 Articles \u00b6 ContractTest - Martin Fowler","title":"Contract Testing"},{"location":"testing/contract-testing/#contract-testing","text":"","title":"Contract Testing"},{"location":"testing/contract-testing/#articles","text":"ContractTest - Martin Fowler","title":"Articles"},{"location":"testing/e2e-testing/","text":"End-To-End Testing - (Subcutaneous Test) \u00b6 \ud83d\udcdd Articles \u00b6 SubcutaneousTest - Martin Fowler Microservices test architecture. Can you sleep well without end-to-end tests? k3d + GitHub Actions: Kubernetes E2E Testing Made Easy Running Kubernetes end-to-end tests with Kind and GitHub Actions The Kind GitHub Action Testing Kubernetes Deployments within CI Pipelines Videos \u00b6 EFS004: Initializing ASP.NET End-to-End Tests End-to-End Testing ASP.NET Core APIs (Part 2) \u21a5 Back To Top","title":"End-To-End Testing - (Subcutaneous Test)"},{"location":"testing/e2e-testing/#end-to-end-testing-subcutaneous-test","text":"","title":"End-To-End Testing - (Subcutaneous Test)"},{"location":"testing/e2e-testing/#articles","text":"SubcutaneousTest - Martin Fowler Microservices test architecture. Can you sleep well without end-to-end tests? k3d + GitHub Actions: Kubernetes E2E Testing Made Easy Running Kubernetes end-to-end tests with Kind and GitHub Actions The Kind GitHub Action Testing Kubernetes Deployments within CI Pipelines","title":"\ud83d\udcdd Articles"},{"location":"testing/e2e-testing/#videos","text":"EFS004: Initializing ASP.NET End-to-End Tests End-to-End Testing ASP.NET Core APIs (Part 2) \u21a5 Back To Top","title":"Videos"},{"location":"testing/integration-testing/","text":"Integration Testing \u00b6 \ud83d\udcdd Articles \u00b6 Integration tests in ASP.NET Core Unit and integration testing Self-hosted integration tests in ASP.NET by Mark Seemann Running Integration Tests in Build Pipelines with a Real Database Limitations of the EF Core in-memory database providers Using docker-compose for your ASP.NET + EF Core integration tests ASP.NET Core integration tests with docker-compose on GitHub Actions Testing WebAPI with ApprovalTests.NET ASP.NET Core 5 & EntityFramework Core: Clean, clear and fluent integration tests with Calzolari.TestServer.EntityFramework, FluentAssertion.Web and xUnit An Experiment With Making Integration Tests Easier to Write - Part One An Experiment With Making Integration Tests Easier to Write - Part Two .NET Core Integration Tests using a Sql Server Database in Docker Running SQL Server Integration Tests in .NET Core Projects via Docker Unit Test or Integration Test and Why You Should Care IntegrationTest Integration testing with EF Core, part 1 Integration testing with EF Core, part 2 How to run integration tests for .NET API The curious case of ASP.NET Core integration test deadlock Microservices test architecture. Can you sleep well without end-to-end tests? Converting integration tests to .NET Core 3.0 SQL Server integration testing using xUnit Asynchronous initialisation and cleanup operations with xUnit - Integration Testing ASP.NET Core WebApi Treat your integration tests as external consumers Unit Testing with ILogger Writing Logs to xunit Test Output Create fake user for ASP.NET Core controller tests Using custom startup class with ASP.NET Core integration tests Different kind of testing strategies with ASP.NET Core: The basics Integration testing data access in ASP.\u200bNET Core Create fake user for ASP.NET Core integration tests Mocking Data with Bogus Using custom startup class with ASP.NET Core integration tests Using ASP.NET Core Identity user accounts in integration tests How to test your C# Web API Avoid In-Memory Databases for Tests End-to-End Integration Testing with NServiceBus End-to-End Integration Testing with NServiceBus: How It Works Respawn vs SQL Server Snapshots Integration Testing with xUnit Integration Testing with ASP.NET Core 3.1 Integration Testing with ASP.NET Core 3.1 - Testing Your Application Integration Testing with ASP.NET Core 3.1 - Swapping a Dependency Integration Testing with ASP.NET Core 3.1 - Remove the Boiler Plate Integration Testing with ASP.NET Core 3.1 - Swapping a Dependency with Moq Integration Testing with ASP.NET Core 3.1 - Set Default Headers for All Clients SETTING UP API INTEGRATION TESTS WITH AUTHORIZATION IN .NET CORE Overriding configuration in ASP.NET Core integration tests ASP.NET Core integration tests with WebApplicationFactory How to run integration tests for .NET API How to mock dependencies with Manifest resources Mocking JWT tokens in ASP.NET Core integration tests Testing authorisation scenarios in ASP.NET Core Web APIs ASP.NET Core Integration Testing: Protected endpoints Adding integration tests for permission-protected API endpoints in ASP.NET Core Unit Test and Mock HTTPContext in ASP.NET Core Controller Unit Test and Mock HttpContextAccessor Integration tests in ASP.NET Core Integration testing with Docker and Testcontainers Automated Integration Testing over Gitlab CI/CD for Dotnet Core via Testcontainers Tips & tricks for unit testing in .NET Core 3: Mocking IHttpContextAccessor Introduction to integration testing with xUnit and TestServer in ASP.NET Core .net Core 3.0, DirectoryNotFoundException with Xunit Integration test \ud83d\udcf9 Videos \u00b6 Integration testing | ASP.NET Core 5 REST API Tutorial 15 C# Integration Testing Tutorial ASP.NET Core C# Integration Testing Tutorial (File Uploads Example) ASP.NET Core C# Integration Testing Example (Mocking Identity) ASP.NET Core C# Integration Testing - Mocking Cookie Authentication The API Integration coding test (2) - Unit and Acceptance testing | Cracking the .NET interview Writing robust integration tests in .NET with WireMock.NET Integration Testing ASP.NET Core Web APIs with Docker - Dan Clarke Clean Testing - Clean Architecture with .NET Core - Jason Taylor - NDC Oslo 2020 Clean Testing: Clean Architecture with .NET Core Pimp your testing strategy for micro services Samples \u00b6 jasontaylordev/CleanTesting jbogard/ContosoUniversityDotNetCore-Pages kgrzybek/modular-monolith-with-ddd devmentors/Pacco.Services.Availability devmentors/Trill-modular-monolith philbir/magic-media ardalis/CleanArchitecture fakhrulhilal/cleanarchitecture-kit timdeschryver/HowToTestYourCsharpWebApi code4it-dev/APIIntegrationTestsExample/ markvincze/AspNetCoreIntegrationTestConfig raw-coding-youtube/testing-101 joaopgrassi/authz-custom-middleware joaopgrassi/dockercompose-azdevops Library \u00b6 WireMock-Net/WireMock.Net - WireMock.Net is a flexible library for stubbing and mocking web HTTP responses using request matching and response templating. Based on the functionality from http://WireMock.org , but extended with more functionality. SwissLife-OSS/snapshooter - Snapshooter is a snapshot testing tool for .NET Core and .NET Framework SwissLife-OSS/squadron - A testing framework for containerized and cloud services Mongo2Go/Mongo2Go - Mongo2Go - MongoDB for integration tests (.NET Core 3.0 and .NET 5.0) martincostello/xunit-logging - Logging extensions for xunit JasperFx/alba - Easy integration testing helper for ASP.Net Core applications webmotions/fake-authentication-jwtbearer - Simple way to fake an authenticated user for integration test with ASP.Net Core framework HofmeisterAn/dotnet-testcontainers - A simple package with guard clause extensions. testcontainers/testcontainers-dotnet - A .net fork of testcontainers - in early development dotnet/Docker.DotNet - .NET (C#) Client Library for Docker API GestionSystemesTelecom/fake-authentication-jwtbearer/ - Simple way to faked an authenticated user for integration test with ASP.Net Core framework AnthonyGiretti/Calzolari-EFCore-Flurl-FakeBearerToken-TestServer SwissLife-OSS/snapshooter - Snapshooter is a snapshot testing tool for .NET Core and .NET Framework SwissLife-OSS/squadron - A testing framework for containerized and cloud services dylan-asos/netcore-authz-inmemory-bddfy - A demonstration of in memory Web API testing of authentication scenarios jbogard/NServiceBus.Extensions.IntegrationTesting \u21a5 Back To Top","title":"Integration Testing"},{"location":"testing/integration-testing/#integration-testing","text":"","title":"Integration Testing"},{"location":"testing/integration-testing/#articles","text":"Integration tests in ASP.NET Core Unit and integration testing Self-hosted integration tests in ASP.NET by Mark Seemann Running Integration Tests in Build Pipelines with a Real Database Limitations of the EF Core in-memory database providers Using docker-compose for your ASP.NET + EF Core integration tests ASP.NET Core integration tests with docker-compose on GitHub Actions Testing WebAPI with ApprovalTests.NET ASP.NET Core 5 & EntityFramework Core: Clean, clear and fluent integration tests with Calzolari.TestServer.EntityFramework, FluentAssertion.Web and xUnit An Experiment With Making Integration Tests Easier to Write - Part One An Experiment With Making Integration Tests Easier to Write - Part Two .NET Core Integration Tests using a Sql Server Database in Docker Running SQL Server Integration Tests in .NET Core Projects via Docker Unit Test or Integration Test and Why You Should Care IntegrationTest Integration testing with EF Core, part 1 Integration testing with EF Core, part 2 How to run integration tests for .NET API The curious case of ASP.NET Core integration test deadlock Microservices test architecture. Can you sleep well without end-to-end tests? Converting integration tests to .NET Core 3.0 SQL Server integration testing using xUnit Asynchronous initialisation and cleanup operations with xUnit - Integration Testing ASP.NET Core WebApi Treat your integration tests as external consumers Unit Testing with ILogger Writing Logs to xunit Test Output Create fake user for ASP.NET Core controller tests Using custom startup class with ASP.NET Core integration tests Different kind of testing strategies with ASP.NET Core: The basics Integration testing data access in ASP.\u200bNET Core Create fake user for ASP.NET Core integration tests Mocking Data with Bogus Using custom startup class with ASP.NET Core integration tests Using ASP.NET Core Identity user accounts in integration tests How to test your C# Web API Avoid In-Memory Databases for Tests End-to-End Integration Testing with NServiceBus End-to-End Integration Testing with NServiceBus: How It Works Respawn vs SQL Server Snapshots Integration Testing with xUnit Integration Testing with ASP.NET Core 3.1 Integration Testing with ASP.NET Core 3.1 - Testing Your Application Integration Testing with ASP.NET Core 3.1 - Swapping a Dependency Integration Testing with ASP.NET Core 3.1 - Remove the Boiler Plate Integration Testing with ASP.NET Core 3.1 - Swapping a Dependency with Moq Integration Testing with ASP.NET Core 3.1 - Set Default Headers for All Clients SETTING UP API INTEGRATION TESTS WITH AUTHORIZATION IN .NET CORE Overriding configuration in ASP.NET Core integration tests ASP.NET Core integration tests with WebApplicationFactory How to run integration tests for .NET API How to mock dependencies with Manifest resources Mocking JWT tokens in ASP.NET Core integration tests Testing authorisation scenarios in ASP.NET Core Web APIs ASP.NET Core Integration Testing: Protected endpoints Adding integration tests for permission-protected API endpoints in ASP.NET Core Unit Test and Mock HTTPContext in ASP.NET Core Controller Unit Test and Mock HttpContextAccessor Integration tests in ASP.NET Core Integration testing with Docker and Testcontainers Automated Integration Testing over Gitlab CI/CD for Dotnet Core via Testcontainers Tips & tricks for unit testing in .NET Core 3: Mocking IHttpContextAccessor Introduction to integration testing with xUnit and TestServer in ASP.NET Core .net Core 3.0, DirectoryNotFoundException with Xunit Integration test","title":"\ud83d\udcdd Articles"},{"location":"testing/integration-testing/#videos","text":"Integration testing | ASP.NET Core 5 REST API Tutorial 15 C# Integration Testing Tutorial ASP.NET Core C# Integration Testing Tutorial (File Uploads Example) ASP.NET Core C# Integration Testing Example (Mocking Identity) ASP.NET Core C# Integration Testing - Mocking Cookie Authentication The API Integration coding test (2) - Unit and Acceptance testing | Cracking the .NET interview Writing robust integration tests in .NET with WireMock.NET Integration Testing ASP.NET Core Web APIs with Docker - Dan Clarke Clean Testing - Clean Architecture with .NET Core - Jason Taylor - NDC Oslo 2020 Clean Testing: Clean Architecture with .NET Core Pimp your testing strategy for micro services","title":"\ud83d\udcf9 Videos"},{"location":"testing/integration-testing/#samples","text":"jasontaylordev/CleanTesting jbogard/ContosoUniversityDotNetCore-Pages kgrzybek/modular-monolith-with-ddd devmentors/Pacco.Services.Availability devmentors/Trill-modular-monolith philbir/magic-media ardalis/CleanArchitecture fakhrulhilal/cleanarchitecture-kit timdeschryver/HowToTestYourCsharpWebApi code4it-dev/APIIntegrationTestsExample/ markvincze/AspNetCoreIntegrationTestConfig raw-coding-youtube/testing-101 joaopgrassi/authz-custom-middleware joaopgrassi/dockercompose-azdevops","title":"Samples"},{"location":"testing/integration-testing/#library","text":"WireMock-Net/WireMock.Net - WireMock.Net is a flexible library for stubbing and mocking web HTTP responses using request matching and response templating. Based on the functionality from http://WireMock.org , but extended with more functionality. SwissLife-OSS/snapshooter - Snapshooter is a snapshot testing tool for .NET Core and .NET Framework SwissLife-OSS/squadron - A testing framework for containerized and cloud services Mongo2Go/Mongo2Go - Mongo2Go - MongoDB for integration tests (.NET Core 3.0 and .NET 5.0) martincostello/xunit-logging - Logging extensions for xunit JasperFx/alba - Easy integration testing helper for ASP.Net Core applications webmotions/fake-authentication-jwtbearer - Simple way to fake an authenticated user for integration test with ASP.Net Core framework HofmeisterAn/dotnet-testcontainers - A simple package with guard clause extensions. testcontainers/testcontainers-dotnet - A .net fork of testcontainers - in early development dotnet/Docker.DotNet - .NET (C#) Client Library for Docker API GestionSystemesTelecom/fake-authentication-jwtbearer/ - Simple way to faked an authenticated user for integration test with ASP.Net Core framework AnthonyGiretti/Calzolari-EFCore-Flurl-FakeBearerToken-TestServer SwissLife-OSS/snapshooter - Snapshooter is a snapshot testing tool for .NET Core and .NET Framework SwissLife-OSS/squadron - A testing framework for containerized and cloud services dylan-asos/netcore-authz-inmemory-bddfy - A demonstration of in memory Web API testing of authentication scenarios jbogard/NServiceBus.Extensions.IntegrationTesting \u21a5 Back To Top","title":"Library"},{"location":"testing/load-testing/","text":"Load Testing \u00b6 Resources \u00b6 atinfo/awesome-test-automation - A curated list of awesome test automation frameworks, tools, libraries, and software for different programming languages \ud83d\udcdd Articles \u00b6 Load testing Running Load Tests From the Cloud With k6 Intro to Testing ASP.NET APIs with k6 - When Unit Tests Meet Load Testing Scalable and Performant ASP.NET Core Web APIs: Load Testing Load and Performance Test Types Smoke testing in k6 Stress testing in k6 Load Testing in k6 Stress testing in k6 Soak testing in k6 Load Testing vs Stress Testing vs Performance Testing: Difference Discussed Load Testing vs Stress Testing Load Testing vs. Performance Testing vs. Stress Testing \ud83d\udcf9 Videos \u00b6 Munich .NET Meetup: Massive load testing with NBomber cluster ASP.NET Core Series: Performance Testing Techniques Web Load and URL Testing with West Wind WebSurge Getting started with API Load Testing (Stress, Spike, Load, Soak) Libraries \u00b6 codesenberg/bombardier - Fast cross-platform HTTP benchmarking tool written in Go locustio/locust - Scalable user load testing tool written in Python tsenart/vegeta - HTTP load testing tool and library. It\u2019s over 9000! k6io/k6 - A modern load testing tool, using Go and JavaScript - https://k6.io","title":"Load Testing"},{"location":"testing/load-testing/#load-testing","text":"","title":"Load Testing"},{"location":"testing/load-testing/#resources","text":"atinfo/awesome-test-automation - A curated list of awesome test automation frameworks, tools, libraries, and software for different programming languages","title":"Resources"},{"location":"testing/load-testing/#articles","text":"Load testing Running Load Tests From the Cloud With k6 Intro to Testing ASP.NET APIs with k6 - When Unit Tests Meet Load Testing Scalable and Performant ASP.NET Core Web APIs: Load Testing Load and Performance Test Types Smoke testing in k6 Stress testing in k6 Load Testing in k6 Stress testing in k6 Soak testing in k6 Load Testing vs Stress Testing vs Performance Testing: Difference Discussed Load Testing vs Stress Testing Load Testing vs. Performance Testing vs. Stress Testing","title":"\ud83d\udcdd Articles"},{"location":"testing/load-testing/#videos","text":"Munich .NET Meetup: Massive load testing with NBomber cluster ASP.NET Core Series: Performance Testing Techniques Web Load and URL Testing with West Wind WebSurge Getting started with API Load Testing (Stress, Spike, Load, Soak)","title":"\ud83d\udcf9 Videos"},{"location":"testing/load-testing/#libraries","text":"codesenberg/bombardier - Fast cross-platform HTTP benchmarking tool written in Go locustio/locust - Scalable user load testing tool written in Python tsenart/vegeta - HTTP load testing tool and library. It\u2019s over 9000! k6io/k6 - A modern load testing tool, using Go and JavaScript - https://k6.io","title":"Libraries"},{"location":"testing/mocking/","text":"Mocking \u00b6 \ud83d\udcdd Articles \u00b6 Effective mocking Bridging between NSubstitute and FluentAssertions NSubstitute and FluentAssertions Redux Mocking Data with Bogus Lifelike Test Data Generation with Bogus Seed Entity Framework Core With Bogus Data Creating .NET fakes using Bogus How to mock dependencies with Manifest resources Write simpler tests with Type Builders and AutoFixture 5 tips for better stubs and mocks in C# What are fakes in unit testing: mocks vs stubs Generating data in dotnet core with GenFu Realistic Sample Data with GenFu Playing around with GenFu Brincando com GenFu .NET Core How to use Moq and xUnit for Unit Testing Controllers in ASP.NET Core Videos \u00b6 Clean mocking for unit tests using NSubstitute in .NET (Core, Framework, Standard) Getting started with Mocking using Moq in .NET (Core, Framework, Standard) Creating a mocking library for .NET in C# FROM SCRATCH Generating realistic fake data in .NET using Bogus Introduction to Unit Testing Using AutoFixture Libraries \u00b6 GestionSystemesTelecom/fake-authentication-jwtbearer - Simple way to faked an authenticated user for integration test with ASP.Net Core framework force-net/DeepCloner - Fast object cloner for .NET Tynamix/ObjectFiller.NET - The .NET ObjectFiller fills the properties of your .NET objects with random data bchavez/Bogus - \ud83d\udcc7 A simple and sane fake data generator for C#, F#, and VB.NET. Based on and ported from the famed faker.js. WireMock-Net/WireMock.Net - WireMock.Net is a flexible library for stubbing and mocking web HTTP responses using request matching and response templating. Based on the functionality from http://WireMock.org , but extended with more functionality. Mongo2Go/Mongo2Go - Mongo2Go - MongoDB for integration tests (.NET Core 3.0 and .NET 5.0) bchavez/Bogus - \ud83d\udcc7 A simple and sane fake data generator for C#, F#, and VB.NET. Based on and ported from the famed faker.js. AutoFixture/AutoFixture - AutoFixture is an open source library for .NET designed to minimize the \u2018Arrange\u2019 phase of your unit tests in order to maximize maintainability. Its primary goal is to allow developers to focus on what is being tested rather than how to setup the test scenario, by making it easier to create object graphs containing test data. AnthonyGiretti/Calzolari-EFCore-Flurl-FakeBearerToken-TestServer MisterJames/GenFu - GenFu is a library you can use to generate realistic test data. It is composed of several property fillers that can populate commonly named properties through reflection using an internal database of values or randomly created data. You can override any of the fillers, give GenFu hints on how to fill them.","title":"Mocking"},{"location":"testing/mocking/#mocking","text":"","title":"Mocking"},{"location":"testing/mocking/#articles","text":"Effective mocking Bridging between NSubstitute and FluentAssertions NSubstitute and FluentAssertions Redux Mocking Data with Bogus Lifelike Test Data Generation with Bogus Seed Entity Framework Core With Bogus Data Creating .NET fakes using Bogus How to mock dependencies with Manifest resources Write simpler tests with Type Builders and AutoFixture 5 tips for better stubs and mocks in C# What are fakes in unit testing: mocks vs stubs Generating data in dotnet core with GenFu Realistic Sample Data with GenFu Playing around with GenFu Brincando com GenFu .NET Core How to use Moq and xUnit for Unit Testing Controllers in ASP.NET Core","title":"\ud83d\udcdd Articles"},{"location":"testing/mocking/#videos","text":"Clean mocking for unit tests using NSubstitute in .NET (Core, Framework, Standard) Getting started with Mocking using Moq in .NET (Core, Framework, Standard) Creating a mocking library for .NET in C# FROM SCRATCH Generating realistic fake data in .NET using Bogus Introduction to Unit Testing Using AutoFixture","title":"Videos"},{"location":"testing/mocking/#libraries","text":"GestionSystemesTelecom/fake-authentication-jwtbearer - Simple way to faked an authenticated user for integration test with ASP.Net Core framework force-net/DeepCloner - Fast object cloner for .NET Tynamix/ObjectFiller.NET - The .NET ObjectFiller fills the properties of your .NET objects with random data bchavez/Bogus - \ud83d\udcc7 A simple and sane fake data generator for C#, F#, and VB.NET. Based on and ported from the famed faker.js. WireMock-Net/WireMock.Net - WireMock.Net is a flexible library for stubbing and mocking web HTTP responses using request matching and response templating. Based on the functionality from http://WireMock.org , but extended with more functionality. Mongo2Go/Mongo2Go - Mongo2Go - MongoDB for integration tests (.NET Core 3.0 and .NET 5.0) bchavez/Bogus - \ud83d\udcc7 A simple and sane fake data generator for C#, F#, and VB.NET. Based on and ported from the famed faker.js. AutoFixture/AutoFixture - AutoFixture is an open source library for .NET designed to minimize the \u2018Arrange\u2019 phase of your unit tests in order to maximize maintainability. Its primary goal is to allow developers to focus on what is being tested rather than how to setup the test scenario, by making it easier to create object graphs containing test data. AnthonyGiretti/Calzolari-EFCore-Flurl-FakeBearerToken-TestServer MisterJames/GenFu - GenFu is a library you can use to generate realistic test data. It is composed of several property fillers that can populate commonly named properties through reflection using an internal database of values or randomly created data. You can override any of the fillers, give GenFu hints on how to fill them.","title":"Libraries"},{"location":"testing/tdd/","text":"TDD \u00b6 Articles \u00b6 TDD is dead. Long live testing Test-induced design damage Outside-in Diamond \ud83d\udd37 TDD #1 - a style made from (& for) ordinary people Outside-in Diamond \ud83d\udd37 TDD #2 (anatomy of a style) Videos \u00b6 DD - Test Driven Development in C# \u21a5 Back To Top","title":"TDD"},{"location":"testing/tdd/#tdd","text":"","title":"TDD"},{"location":"testing/tdd/#articles","text":"TDD is dead. Long live testing Test-induced design damage Outside-in Diamond \ud83d\udd37 TDD #1 - a style made from (& for) ordinary people Outside-in Diamond \ud83d\udd37 TDD #2 (anatomy of a style)","title":"Articles"},{"location":"testing/tdd/#videos","text":"DD - Test Driven Development in C# \u21a5 Back To Top","title":"Videos"},{"location":"testing/test-host/","text":"Test Host And WebApplicationFactory \u00b6 \ud83d\udcdd Articles \u00b6 Converting integration tests to .NET Core 3.0 Using custom startup class with ASP.NET Core integration tests Using custom appsettings.json with ASP.NET Core integration tests Testing WebAPI with ApprovalTests.NET Integration tests in ASP.NET Core Different kind of testing strategies with ASP.NET Core: The basics Integration Testing with ASP.NET Core 3.1 - Remove the Boiler Plate How to test your C# Web API \u21a5 Back To Top","title":"Test Host And WebApplicationFactory"},{"location":"testing/test-host/#test-host-and-webapplicationfactory","text":"","title":"Test Host And WebApplicationFactory"},{"location":"testing/test-host/#articles","text":"Converting integration tests to .NET Core 3.0 Using custom startup class with ASP.NET Core integration tests Using custom appsettings.json with ASP.NET Core integration tests Testing WebAPI with ApprovalTests.NET Integration tests in ASP.NET Core Different kind of testing strategies with ASP.NET Core: The basics Integration Testing with ASP.NET Core 3.1 - Remove the Boiler Plate How to test your C# Web API \u21a5 Back To Top","title":"\ud83d\udcdd Articles"},{"location":"testing/testing/","text":"Testing \u00b6 Resources \u00b6 atinfo/awesome-test-automation - A curated list of awesome test automation frameworks, tools, libraries, and software for different programming languages \ud83d\udcdd Articles \u00b6 First-Class Tests Software Testing Guide The Practical Test Pyramid Clean code tips - Tests Testing internal members with InternalsVisibleTo Using C# Named Arguments to Declutter Complex Tests Exploring Fluent Assertions How to get ASP.NET Core logs in the output of xUnit tests Writing Logs to xunit Test Output How to name your unit tests. 4 test naming conventions Introduction to integration testing with xUnit and TestServer in ASP.NET Core Videos \u00b6 Writing and Running Unit Tests with ReSharper Test Desiderata Library \u00b6 martincostello/xunit-logging - Logging extensions for xunit NetArchTest - A fluent API for .Net that can enforce architectural rules in unit tests. SwissLife-OSS/snapshooter - Snapshooter is a snapshot testing tool for .NET Core and .NET Framework SwissLife-OSS/squadron - A testing framework for containerized and cloud services .NET Testcontainers - A library to support tests with throwaway instances of Docker containers for all compatible .NET Standard versions. bombardier - Fast cross-platform HTTP benchmarking tool written in Go FluentAssertions - Fluent API for asserting the results of unit tests that targets .NET Framework 4.5, 4.7, .NET Standard 1.3, 1.6 and 2.0. Supports the unit test frameworks MSTest, MSTest2, Gallio, NUnit, XUnit, MBunit, MSpec, and NSpec. Shouldly - Should testing for .NET - the way Asserting -Should- be! AnthonyGiretti/Calzolari-EFCore-Flurl-FakeBearerToken-TestServer GregFinzer/Compare-Net-Objects - What you have been waiting for \ud83d\udc4d Perform a deep compare of any two .NET objects using reflection. Shows the differences between the two objects. force-net/DeepCloner - Fast object cloner for .NET Tynamix/ObjectFiller.NET - The .NET ObjectFiller fills the properties of your .NET objects with random data bchavez/Bogus - \ud83d\udcc7 A simple and sane fake data generator for C#, F#, and VB.NET. Based on and ported from the famed faker.js. WireMock-Net/WireMock.Net - WireMock.Net is a flexible library for stubbing and mocking web HTTP responses using request matching and response templating. Based on the functionality from http://WireMock.org , but extended with more functionality. Mongo2Go/Mongo2Go - Mongo2Go - MongoDB for integration tests (.NET Core 3.0 and .NET 5.0) JonPSmith/EfCore.TestSupport - Tools for helping in unit testing applications that use Entity Framework Core AutoFixture/AutoFixture - AutoFixture is an open source library for .NET designed to minimize the \u2018Arrange\u2019 phase of your unit tests in order to maximize maintainability. Its primary goal is to allow developers to focus on what is being tested rather than how to setup the test scenario, by making it easier to create object graphs containing test data. nbuilder/nbuilder - Rapid generation of test objects in .NET LightBDD/LightBDD - BDD framework allowing to create easy to read and maintain tests. nickdodd79/AutoBogus - A C# library complementing the Bogus generator by adding auto creation and population capabilities. HofmeisterAn/dotnet-testcontainers - A simple package with guard clause extensions. testcontainers/testcontainers-dotnet - A .net fork of testcontainers - in early development GestionSystemesTelecom/fake-authentication-jwtbearer - Simple way to faked an authenticated user for integration test with ASP.Net Core framework VerifyTests/Verify - Verify is a snapshot tool that simplifies the assertion of complex data models and documents. \u21a5 Back To Top","title":"Testing"},{"location":"testing/testing/#testing","text":"","title":"Testing"},{"location":"testing/testing/#resources","text":"atinfo/awesome-test-automation - A curated list of awesome test automation frameworks, tools, libraries, and software for different programming languages","title":"Resources"},{"location":"testing/testing/#articles","text":"First-Class Tests Software Testing Guide The Practical Test Pyramid Clean code tips - Tests Testing internal members with InternalsVisibleTo Using C# Named Arguments to Declutter Complex Tests Exploring Fluent Assertions How to get ASP.NET Core logs in the output of xUnit tests Writing Logs to xunit Test Output How to name your unit tests. 4 test naming conventions Introduction to integration testing with xUnit and TestServer in ASP.NET Core","title":"\ud83d\udcdd Articles"},{"location":"testing/testing/#videos","text":"Writing and Running Unit Tests with ReSharper Test Desiderata","title":"Videos"},{"location":"testing/testing/#library","text":"martincostello/xunit-logging - Logging extensions for xunit NetArchTest - A fluent API for .Net that can enforce architectural rules in unit tests. SwissLife-OSS/snapshooter - Snapshooter is a snapshot testing tool for .NET Core and .NET Framework SwissLife-OSS/squadron - A testing framework for containerized and cloud services .NET Testcontainers - A library to support tests with throwaway instances of Docker containers for all compatible .NET Standard versions. bombardier - Fast cross-platform HTTP benchmarking tool written in Go FluentAssertions - Fluent API for asserting the results of unit tests that targets .NET Framework 4.5, 4.7, .NET Standard 1.3, 1.6 and 2.0. Supports the unit test frameworks MSTest, MSTest2, Gallio, NUnit, XUnit, MBunit, MSpec, and NSpec. Shouldly - Should testing for .NET - the way Asserting -Should- be! AnthonyGiretti/Calzolari-EFCore-Flurl-FakeBearerToken-TestServer GregFinzer/Compare-Net-Objects - What you have been waiting for \ud83d\udc4d Perform a deep compare of any two .NET objects using reflection. Shows the differences between the two objects. force-net/DeepCloner - Fast object cloner for .NET Tynamix/ObjectFiller.NET - The .NET ObjectFiller fills the properties of your .NET objects with random data bchavez/Bogus - \ud83d\udcc7 A simple and sane fake data generator for C#, F#, and VB.NET. Based on and ported from the famed faker.js. WireMock-Net/WireMock.Net - WireMock.Net is a flexible library for stubbing and mocking web HTTP responses using request matching and response templating. Based on the functionality from http://WireMock.org , but extended with more functionality. Mongo2Go/Mongo2Go - Mongo2Go - MongoDB for integration tests (.NET Core 3.0 and .NET 5.0) JonPSmith/EfCore.TestSupport - Tools for helping in unit testing applications that use Entity Framework Core AutoFixture/AutoFixture - AutoFixture is an open source library for .NET designed to minimize the \u2018Arrange\u2019 phase of your unit tests in order to maximize maintainability. Its primary goal is to allow developers to focus on what is being tested rather than how to setup the test scenario, by making it easier to create object graphs containing test data. nbuilder/nbuilder - Rapid generation of test objects in .NET LightBDD/LightBDD - BDD framework allowing to create easy to read and maintain tests. nickdodd79/AutoBogus - A C# library complementing the Bogus generator by adding auto creation and population capabilities. HofmeisterAn/dotnet-testcontainers - A simple package with guard clause extensions. testcontainers/testcontainers-dotnet - A .net fork of testcontainers - in early development GestionSystemesTelecom/fake-authentication-jwtbearer - Simple way to faked an authenticated user for integration test with ASP.Net Core framework VerifyTests/Verify - Verify is a snapshot tool that simplifies the assertion of complex data models and documents. \u21a5 Back To Top","title":"Library"},{"location":"testing/unit-testing/","text":"Unit Testing \u00b6 \ud83d\udcdd Articles \u00b6 Keep Tests Short and DRY with Extension Methods C# \u2013 How to unit test code that uses HttpClient How to unit test a class that consumes an HttpClient with IHttpClientFactory in ASP.NET Core? ASP.NET Core 2+ best practices and practical tools for testing, part 1 ASP.NET Core 2+ best practices and practical tools for testing, part 2, Use cases You will never give up a unit test anymore with ExpectedObjects in .NET Core How to unit test private methods in .NET Core applications? (even if it\u2019s bad) Mock and Unit Test HTTPClient with MessageHandler Unit Test or Integration Test and Why You Should Care Unit Test Naming Convention Testing Exceptions with xUnit and Actions UnitTest Clean code tips - Tests .NET 5 REST API Tutorial 10 - Unit Testing and TDD Testing Production API Endpoints with xUnit Exploring Fluent Assertions Unit Testing with ILogger How to get ASP.NET Core logs in the output of xUnit tests Create fake user for ASP.NET Core controller tests Different kind of testing strategies with ASP.NET Core: The basics Unit testing data access in ASP.\u200bNET Core How to test your C# Web API How to mock dependencies with Manifest resources Unit and integration testing Should you unit-test API/MVC controllers in ASP.NET Core? Unit Test and Mock HTTPContext in ASP.NET Core Controller Unit Test and Mock HttpContextAccessor TDD \u2013 Unit Testing Naming Conventions and Standards Tips & tricks for unit testing in .NET Core 3: Mocking IHttpContextAccessor How to write good unit tests: Two issues to avoid Unit Testing Best Practices: A checklist How to name your unit tests. 4 test naming conventions 4 common mistakes when writing your first unit tests Unit Testing of Web API with xUnit and Moq Videos \u00b6 C# Unit Test Mocking with Moq C# Unit Testing Tutorial C# Unit Testing Example EFS003: Initialize ASP.NET Core Unit Tests Clean Testing - Clean Architecture with .NET Core - Jason Taylor - NDC Oslo 2020 Clean Testing: Clean Architecture with .NET Core Pimp your testing strategy for micro services Writing tests in .NET using xUnit - xUnit Tutorial Samples \u00b6 jasontaylordev/CleanTesting jbogard/ContosoUniversityDotNetCore-Pages kgrzybek/modular-monolith-with-ddd devmentors/Pacco.Services.Availability devmentors/Trill-modular-monolith philbir/magic-media \u21a5 Back To Top","title":"Unit Testing"},{"location":"testing/unit-testing/#unit-testing","text":"","title":"Unit Testing"},{"location":"testing/unit-testing/#articles","text":"Keep Tests Short and DRY with Extension Methods C# \u2013 How to unit test code that uses HttpClient How to unit test a class that consumes an HttpClient with IHttpClientFactory in ASP.NET Core? ASP.NET Core 2+ best practices and practical tools for testing, part 1 ASP.NET Core 2+ best practices and practical tools for testing, part 2, Use cases You will never give up a unit test anymore with ExpectedObjects in .NET Core How to unit test private methods in .NET Core applications? (even if it\u2019s bad) Mock and Unit Test HTTPClient with MessageHandler Unit Test or Integration Test and Why You Should Care Unit Test Naming Convention Testing Exceptions with xUnit and Actions UnitTest Clean code tips - Tests .NET 5 REST API Tutorial 10 - Unit Testing and TDD Testing Production API Endpoints with xUnit Exploring Fluent Assertions Unit Testing with ILogger How to get ASP.NET Core logs in the output of xUnit tests Create fake user for ASP.NET Core controller tests Different kind of testing strategies with ASP.NET Core: The basics Unit testing data access in ASP.\u200bNET Core How to test your C# Web API How to mock dependencies with Manifest resources Unit and integration testing Should you unit-test API/MVC controllers in ASP.NET Core? Unit Test and Mock HTTPContext in ASP.NET Core Controller Unit Test and Mock HttpContextAccessor TDD \u2013 Unit Testing Naming Conventions and Standards Tips & tricks for unit testing in .NET Core 3: Mocking IHttpContextAccessor How to write good unit tests: Two issues to avoid Unit Testing Best Practices: A checklist How to name your unit tests. 4 test naming conventions 4 common mistakes when writing your first unit tests Unit Testing of Web API with xUnit and Moq","title":"\ud83d\udcdd Articles"},{"location":"testing/unit-testing/#videos","text":"C# Unit Test Mocking with Moq C# Unit Testing Tutorial C# Unit Testing Example EFS003: Initialize ASP.NET Core Unit Tests Clean Testing - Clean Architecture with .NET Core - Jason Taylor - NDC Oslo 2020 Clean Testing: Clean Architecture with .NET Core Pimp your testing strategy for micro services Writing tests in .NET using xUnit - xUnit Tutorial","title":"Videos"},{"location":"testing/unit-testing/#samples","text":"jasontaylordev/CleanTesting jbogard/ContosoUniversityDotNetCore-Pages kgrzybek/modular-monolith-with-ddd devmentors/Pacco.Services.Availability devmentors/Trill-modular-monolith philbir/magic-media \u21a5 Back To Top","title":"Samples"},{"location":"testing/xunit/","text":"XUnit \u00b6 Articles \u00b6 Quick introduction to xUnit.ne Writing Logs to xunit Test Output Introduction to integration testing with xUnit and TestServer in ASP.NET Core How to perform Unit Testing with xUnit in ASP.NET Core Libraries \u00b6 martincostello/xunit-logging - Logging extensions for xunit","title":"XUnit"},{"location":"testing/xunit/#xunit","text":"","title":"XUnit"},{"location":"testing/xunit/#articles","text":"Quick introduction to xUnit.ne Writing Logs to xunit Test Output Introduction to integration testing with xUnit and TestServer in ASP.NET Core How to perform Unit Testing with xUnit in ASP.NET Core","title":"Articles"},{"location":"testing/xunit/#libraries","text":"martincostello/xunit-logging - Logging extensions for xunit","title":"Libraries"}]}